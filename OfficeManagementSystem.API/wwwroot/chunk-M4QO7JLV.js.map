{
  "version": 3,
  "sources": ["src/app/services/permissions.service.ts", "src/app/components/shared/permissions-assignment-modal/permissions-assignment-modal.component.ts", "src/app/components/roles/roles-list/roles-list.component.ts", "src/app/components/roles/roles-list/roles-list.component.html", "src/app/components/roles/role-form/role-form.component.ts", "src/app/components/roles/role-form/role-form.component.html", "src/app/components/roles/role-details/role-details.component.ts", "src/app/components/roles/role-details/role-details.component.html", "src/app/components/roles/permissions-management/permissions-management.component.ts", "src/app/components/roles/permissions-management/permissions-management.component.html", "src/app/components/roles/roles-routing.module.ts", "src/app/components/roles/roles.module.ts"],
  "sourcesContent": ["import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { Permission, CreatePermissionRequest, UpdatePermissionRequest, PermissionSearchParams, PagedResponse } from '../models/role.model';\r\nimport { environment } from '../../environments/environment';\r\nimport { AuthService } from './auth.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class PermissionsService {\r\n  private apiUrl = `${environment.apiBaseUrl}/Admin/permissions`;\r\n\r\n  constructor(\r\n    private http: HttpClient,\r\n    private authService: AuthService\r\n  ) {}\r\n\r\n  private getAuthHeaders(): HttpHeaders {\r\n    const token = this.authService.getToken();\r\n    return new HttpHeaders().set('Authorization', `Bearer ${token}`);\r\n  }\r\n\r\n  getPermissions(params: PermissionSearchParams = {}): Observable<PagedResponse<Permission>> {\r\n    let httpParams = new HttpParams();\r\n    \r\n    if (params.page) httpParams = httpParams.set('Page', params.page.toString());\r\n    if (params.pageSize) httpParams = httpParams.set('PageSize', params.pageSize.toString());\r\n    if (params.search) httpParams = httpParams.set('search', params.search);\r\n    \r\n    return this.http.get<PagedResponse<Permission>>(this.apiUrl, { \r\n      headers: this.getAuthHeaders(),\r\n      params: httpParams\r\n    });\r\n  }\r\n\r\n  getAllPermissions(): Observable<Permission[]> {\r\n    return this.http.get<any>(`${this.apiUrl}/all`, { headers: this.getAuthHeaders() }).pipe(\r\n      map(response => {\r\n        if (response.success && response.data && response.data.items) {\r\n          return response.data.items;\r\n        }\r\n        return [];\r\n      })\r\n    );\r\n  }\r\n\r\n  getPermissionById(permissionId: number): Observable<Permission> {\r\n    return this.http.get<any>(`${this.apiUrl}/${permissionId}`, { headers: this.getAuthHeaders() }).pipe(\r\n      map(response => {\r\n        if (response.success && response.data) {\r\n          return response.data;\r\n        }\r\n        throw new Error('Failed to get permission');\r\n      })\r\n    );\r\n  }\r\n\r\n  createPermission(permissionData: CreatePermissionRequest): Observable<Permission> {\r\n    return this.http.post<any>(this.apiUrl, permissionData, { headers: this.getAuthHeaders() }).pipe(\r\n      map(response => {\r\n        if (response.success && response.data) {\r\n          return response.data;\r\n        }\r\n        throw new Error('Failed to create permission');\r\n      })\r\n    );\r\n  }\r\n\r\n  updatePermission(permissionId: number, permissionData: UpdatePermissionRequest): Observable<Permission> {\r\n    return this.http.put<any>(`${this.apiUrl}/${permissionId}`, permissionData, { headers: this.getAuthHeaders() }).pipe(\r\n      map(response => {\r\n        if (response.success && response.data) {\r\n          return response.data;\r\n        }\r\n        throw new Error('Failed to update permission');\r\n      })\r\n    );\r\n  }\r\n\r\n  deletePermission(permissionId: number): Observable<void> {\r\n    return this.http.delete<void>(`${this.apiUrl}/${permissionId}`, { headers: this.getAuthHeaders() });\r\n  }\r\n}\r\n\r\n", "import { Component, Input, Output, EventEmitter, signal, inject, OnInit, OnChanges, SimpleChanges } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { RolesService } from '../../../services/roles.service';\r\nimport { PermissionsService } from '../../../services/permissions.service';\r\nimport { Permission } from '../../../models/role.model';\r\nimport { TranslationService } from '../../../services/translation.service';\r\nimport { LangService } from '../../../services/lang.service';\r\n\r\n@Component({\r\n  selector: 'app-permissions-assignment-modal',\r\n  standalone: true,\r\n  imports: [CommonModule, FormsModule],\r\n  template: `\r\n    <div *ngIf=\"isVisible\" class=\"permissions-modal-overlay\" (click)=\"onOverlayClick()\">\r\n      <div class=\"permissions-modal\" (click)=\"$event.stopPropagation()\">\r\n        <div class=\"modal-header\" [class.rtl]=\"isRTL()\" [class.ltr]=\"!isRTL()\">\r\n          <h3>{{ translate('roles.assign_permissions') }}</h3>\r\n          <button class=\"close-btn\" (click)=\"onCancel()\">\r\n            <svg width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\">\r\n              <line x1=\"18\" y1=\"6\" x2=\"6\" y2=\"18\"></line>\r\n              <line x1=\"6\" y1=\"6\" x2=\"18\" y2=\"18\"></line>\r\n            </svg>\r\n          </button>\r\n        </div>\r\n        \r\n        <div class=\"modal-content\">\r\n          <!-- Loading State -->\r\n          <div *ngIf=\"allPermissions().length === 0\" class=\"loading-container\">\r\n            <div class=\"loading-spinner\"></div>\r\n            <p>{{ translate('roles.loading_permissions') }}</p>\r\n          </div>\r\n        \r\n          <!-- Permissions List -->\r\n          <div *ngIf=\"allPermissions().length > 0\" class=\"permissions-container\">\r\n            <div *ngFor=\"let group of getAllPermissionGroups() | keyvalue\" class=\"permission-group\">\r\n              <div class=\"group-header\">\r\n                <h4 class=\"group-title\">{{ group.key }}</h4>\r\n                <div class=\"group-actions\">\r\n                  <button\r\n                    type=\"button\"\r\n                    class=\"btn-select-all\"\r\n                    (click)=\"selectAllInGroup(group.value)\"\r\n                  >\r\n                    {{ translate('roles.select_all') }}\r\n                  </button>\r\n                  <button\r\n                    type=\"button\"\r\n                    class=\"btn-deselect-all\"\r\n                    (click)=\"deselectAllInGroup(group.value)\"\r\n                  >\r\n                    {{ translate('roles.deselect_all') }}\r\n                  </button>\r\n                </div>\r\n              </div>\r\n              \r\n              <div class=\"permissions-grid\">\r\n                <div *ngFor=\"let permission of group.value\" \r\n                     class=\"permission-item\" \r\n                     [class.assigned]=\"selectedPermissions().includes(permission.id)\"\r\n                     (click)=\"togglePermission(permission.id)\">\r\n                  <label class=\"permission-checkbox\">\r\n                    <input\r\n                      type=\"checkbox\"\r\n                      [checked]=\"selectedPermissions().includes(permission.id)\"\r\n                      (change)=\"onPermissionToggle(permission.id, $event); $event.stopPropagation()\"\r\n                      class=\"permission-input\"\r\n                    />\r\n                    <span class=\"permission-custom\"></span>\r\n                    <div class=\"permission-content\">\r\n                      <div class=\"permission-name\">{{ permission.displayName }}</div>\r\n                      <div class=\"permission-description\">{{ permission.description }}</div>\r\n                      <div class=\"permission-meta\">\r\n                        <span class=\"permission-controller\">{{ permission.controller }}</span>\r\n                        <span class=\"permission-action\">{{ permission.action }}</span>\r\n                      </div>\r\n                    </div>\r\n                  </label>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        \r\n        <div class=\"modal-actions\">\r\n          <button\r\n            type=\"button\"\r\n            class=\"btn btn-secondary\"\r\n            (click)=\"onCancel()\"\r\n            [disabled]=\"saving()\"\r\n          >\r\n            {{ translate('roles.cancel') }}\r\n          </button>\r\n          <button\r\n            type=\"button\"\r\n            class=\"btn btn-primary\"\r\n            (click)=\"onAssign()\"\r\n            [disabled]=\"saving()\"\r\n          >\r\n            <div *ngIf=\"saving()\" class=\"btn-loading\">\r\n              <div class=\"loading-spinner-small\"></div>\r\n              {{ translate('roles.saving') }}\r\n            </div>\r\n            <div *ngIf=\"!saving()\">\r\n              {{ translate('roles.assign_permissions') }}\r\n            </div>\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  `,\r\n  styles: [`\r\n    .permissions-modal-overlay {\r\n      position: fixed;\r\n      top: 0;\r\n      left: 0;\r\n      right: 0;\r\n      bottom: 0;\r\n      background: rgba(0, 0, 0, 0.5);\r\n      display: flex;\r\n      align-items: center;\r\n      justify-content: center;\r\n      z-index: 1000;\r\n      padding: 1rem;\r\n    }\r\n\r\n    .permissions-modal {\r\n      background: white;\r\n      border-radius: 12px;\r\n      width: 100%;\r\n      max-width: 800px;\r\n      max-height: 90vh;\r\n      display: flex;\r\n      flex-direction: column;\r\n      box-shadow: 0 20px 25px -5px rgba(0, 0, 0, 0.1), 0 10px 10px -5px rgba(0, 0, 0, 0.04);\r\n    }\r\n\r\n    .modal-header {\r\n      display: flex;\r\n      justify-content: space-between;\r\n      align-items: center;\r\n      padding: 1.5rem 2rem;\r\n      border-bottom: 1px solid #e5e7eb;\r\n      background: #2F7D8F;\r\n      color: white;\r\n      border-radius: 12px 12px 0 0;\r\n    }\r\n\r\n    .modal-header.rtl {\r\n      flex-direction: row-reverse;\r\n    }\r\n\r\n    .modal-header.ltr {\r\n      flex-direction: row;\r\n    }\r\n\r\n    /* Ensure proper RTL layout for modal title and close button */\r\n    .modal-header.rtl h3 {\r\n      order: 2;\r\n    }\r\n\r\n    .modal-header.rtl .close-btn {\r\n      order: 1;\r\n    }\r\n\r\n    .modal-header.ltr h3 {\r\n      order: 1;\r\n    }\r\n\r\n    .modal-header.ltr .close-btn {\r\n      order: 2;\r\n    }\r\n\r\n  \r\n    .modal-header h3 {\r\n      font-size: 1.5rem;\r\n      font-weight: 600;\r\n      margin: 0;\r\n    }\r\n\r\n    .close-btn {\r\n      background: none;\r\n      border: none;\r\n      color: white;\r\n      cursor: pointer;\r\n      padding: 0.5rem;\r\n      border-radius: 6px;\r\n      transition: all 0.2s ease;\r\n    }\r\n\r\n    .close-btn:hover {\r\n      background: rgba(255, 255, 255, 0.1);\r\n    }\r\n\r\n    .modal-content {\r\n      flex: 1;\r\n      overflow-y: auto;\r\n      padding: 2rem;\r\n    }\r\n\r\n    .modal-actions {\r\n      display: flex;\r\n      justify-content: flex-end;\r\n      gap: 1rem;\r\n      padding: 1.5rem 2rem;\r\n      border-top: 1px solid #e5e7eb;\r\n      background: #f9fafb;\r\n      border-radius: 0 0 12px 12px;\r\n    }\r\n\r\n    .permission-group {\r\n      background: #f8fafc;\r\n      border: 1px solid #e2e8f0;\r\n      border-radius: 8px;\r\n      padding: 1.5rem;\r\n      margin-bottom: 1rem;\r\n    }\r\n\r\n    .group-header {\r\n      display: flex;\r\n      justify-content: space-between;\r\n      align-items: center;\r\n      margin-bottom: 1rem;\r\n    }\r\n\r\n    .group-title {\r\n      font-size: 1.125rem;\r\n      font-weight: 600;\r\n      color: #1e293b;\r\n      margin: 0;\r\n    }\r\n\r\n    .group-actions {\r\n      display: flex;\r\n      gap: 0.5rem;\r\n    }\r\n\r\n    .btn-select-all,\r\n    .btn-deselect-all {\r\n      background: #f1f5f9;\r\n      border: 1px solid #cbd5e1;\r\n      color: #475569;\r\n      padding: 0.375rem 0.75rem;\r\n      border-radius: 6px;\r\n      font-size: 0.875rem;\r\n      font-weight: 500;\r\n      cursor: pointer;\r\n      transition: all 0.2s ease;\r\n    }\r\n\r\n    .btn-select-all:hover {\r\n      background: #e2e8f0;\r\n      color: #334155;\r\n    }\r\n\r\n    .btn-deselect-all:hover {\r\n      background: #fef2f2;\r\n      color: #dc2626;\r\n      border-color: #fecaca;\r\n    }\r\n\r\n    .permissions-grid {\r\n      display: grid;\r\n      grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));\r\n      gap: 1rem;\r\n    }\r\n\r\n    .permission-item {\r\n      background: white;\r\n      border: 1px solid #e2e8f0;\r\n      border-radius: 8px;\r\n      padding: 1rem;\r\n      transition: all 0.2s ease;\r\n      cursor: pointer;\r\n    }\r\n\r\n    .permission-item:hover {\r\n      border-color: #cbd5e1;\r\n      box-shadow: 0 1px 3px 0 rgba(0, 0, 0, 0.1);\r\n    }\r\n\r\n    .permission-item.assigned {\r\n      border-color: #158638;\r\n      background: #f0fdf4;\r\n    }\r\n\r\n    .permission-checkbox {\r\n      display: flex;\r\n      align-items: flex-start;\r\n      gap: 0.75rem;\r\n      cursor: pointer;\r\n      width: 100%;\r\n    }\r\n\r\n    .permission-input {\r\n      margin: 0;\r\n      width: 18px;\r\n      height: 18px;\r\n      accent-color: #158638;\r\n      flex-shrink: 0;\r\n      margin-top: 2px;\r\n    }\r\n\r\n    .permission-custom {\r\n      display: none;\r\n    }\r\n\r\n    .permission-content {\r\n      flex: 1;\r\n    }\r\n\r\n    .permission-name {\r\n      font-weight: 500;\r\n      color: #1e293b;\r\n      margin-bottom: 0.25rem;\r\n      font-size: 0.95rem;\r\n    }\r\n\r\n    .permission-description {\r\n      color: #64748b;\r\n      font-size: 0.875rem;\r\n      margin-bottom: 0.5rem;\r\n      line-height: 1.4;\r\n    }\r\n\r\n    .permission-meta {\r\n      display: flex;\r\n      gap: 0.5rem;\r\n      flex-wrap: wrap;\r\n    }\r\n\r\n    .permission-controller,\r\n    .permission-action {\r\n      background: #f1f5f9;\r\n      color: #475569;\r\n      padding: 0.25rem 0.5rem;\r\n      border-radius: 4px;\r\n      font-size: 0.75rem;\r\n      font-weight: 500;\r\n    }\r\n\r\n    .btn-loading {\r\n      display: flex;\r\n      align-items: center;\r\n      gap: 0.5rem;\r\n    }\r\n\r\n    .loading-spinner-small {\r\n      width: 16px;\r\n      height: 16px;\r\n      border: 2px solid #f3f4f6;\r\n      border-top: 2px solid #158638;\r\n      border-radius: 50%;\r\n      animation: spin 1s linear infinite;\r\n    }\r\n\r\n    @keyframes spin {\r\n      0% { transform: rotate(0deg); }\r\n      100% { transform: rotate(360deg); }\r\n    }\r\n\r\n    .loading-container {\r\n      display: flex;\r\n      flex-direction: column;\r\n      align-items: center;\r\n      justify-content: center;\r\n      padding: 3rem;\r\n      text-align: center;\r\n    }\r\n\r\n    .loading-spinner {\r\n      width: 40px;\r\n      height: 40px;\r\n      border: 4px solid #f3f4f6;\r\n      border-top: 4px solid #158638;\r\n      border-radius: 50%;\r\n      animation: spin 1s linear infinite;\r\n      margin-bottom: 1rem;\r\n    }\r\n  `]\r\n})\r\nexport class PermissionsAssignmentModalComponent implements OnInit, OnChanges {\r\n  @Input() isVisible: boolean = false;\r\n  @Input() roleId: string | null = null;\r\n  @Output() assign = new EventEmitter<number[]>();\r\n  @Output() cancel = new EventEmitter<void>();\r\n\r\n  private rolesService = inject(RolesService);\r\n  private permissionsService = inject(PermissionsService);\r\n  private translationService = inject(TranslationService);\r\n  private langService = inject(LangService);\r\n\r\n  allPermissions = signal<Permission[]>([]);\r\n  selectedPermissions = signal<number[]>([]);\r\n  saving = signal(false);\r\n\r\n  ngOnInit() {\r\n    if (this.isVisible) {\r\n      this.loadAllPermissions();\r\n      this.loadRolePermissions();\r\n    }\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    if (changes['isVisible'] && this.isVisible) {\r\n      this.loadAllPermissions();\r\n      this.loadRolePermissions();\r\n    }\r\n    if (changes['roleId'] && this.roleId) {\r\n      this.loadRolePermissions();\r\n    }\r\n  }\r\n\r\n  loadAllPermissions(): void {\r\n    this.permissionsService.getAllPermissions().subscribe({\r\n      next: (permissions) => {\r\n        this.allPermissions.set(permissions);\r\n      },\r\n      error: (error) => {\r\n        console.error('Error loading permissions:', error);\r\n      }\r\n    });\r\n  }\r\n\r\n  loadRolePermissions(): void {\r\n    const roleId = this.roleId;\r\n    if (!roleId) return;\r\n\r\n    this.rolesService.getRolePermissions(roleId).subscribe({\r\n      next: (response) => {\r\n        if (response.success && response.data) {\r\n          const permissionIds = response.data.map((permission: any) => permission.id);\r\n          this.selectedPermissions.set(permissionIds);\r\n        } else {\r\n          this.selectedPermissions.set([]);\r\n        }\r\n      },\r\n      error: (error) => {\r\n        console.error('Error loading role permissions:', error);\r\n        this.selectedPermissions.set([]);\r\n      }\r\n    });\r\n  }\r\n\r\n  onPermissionToggle(permissionId: number, event: Event): void {\r\n    const target = event.target as HTMLInputElement;\r\n    const isChecked = target.checked;\r\n    console.log('Toggling permission:', permissionId, 'checked:', isChecked);\r\n    const current = this.selectedPermissions();\r\n    if (isChecked) {\r\n      if (!current.includes(permissionId)) {\r\n        this.selectedPermissions.set([...current, permissionId]);\r\n      }\r\n    } else {\r\n      this.selectedPermissions.set(current.filter(id => id !== permissionId));\r\n    }\r\n    console.log('Updated selected permissions:', this.selectedPermissions());\r\n  }\r\n\r\n  togglePermission(permissionId: number): void {\r\n    const current = this.selectedPermissions();\r\n    const isCurrentlySelected = current.includes(permissionId);\r\n    console.log('Toggling permission via click:', permissionId, 'currently selected:', isCurrentlySelected);\r\n    \r\n    if (isCurrentlySelected) {\r\n      this.selectedPermissions.set(current.filter(id => id !== permissionId));\r\n    } else {\r\n      this.selectedPermissions.set([...current, permissionId]);\r\n    }\r\n    console.log('Updated selected permissions:', this.selectedPermissions());\r\n  }\r\n\r\n  onAssign(): void {\r\n    this.saving.set(true);\r\n    this.assign.emit(this.selectedPermissions());\r\n  }\r\n\r\n  onCancel(): void {\r\n    this.cancel.emit();\r\n  }\r\n\r\n  onOverlayClick(): void {\r\n    this.onCancel();\r\n  }\r\n\r\n  getAllPermissionGroups(): { [key: string]: Permission[] } {\r\n    const groups: { [key: string]: Permission[] } = {};\r\n    \r\n    this.allPermissions().forEach(permission => {\r\n      const controller = permission.controller;\r\n      if (!groups[controller]) {\r\n        groups[controller] = [];\r\n      }\r\n      groups[controller].push(permission);\r\n    });\r\n    \r\n    return groups;\r\n  }\r\n\r\n  selectAllInGroup(permissions: Permission[]): void {\r\n    const current = this.selectedPermissions();\r\n    const newIds = permissions.map(p => p.id);\r\n    const updated = [...new Set([...current, ...newIds])];\r\n    this.selectedPermissions.set(updated);\r\n  }\r\n\r\n  deselectAllInGroup(permissions: Permission[]): void {\r\n    const current = this.selectedPermissions();\r\n    const groupIds = permissions.map(p => p.id);\r\n    const updated = current.filter(id => !groupIds.includes(id));\r\n    this.selectedPermissions.set(updated);\r\n  }\r\n\r\n  translate(key: string): string {\r\n    return this.translationService.translate(key);\r\n  }\r\n\r\n  isRTL(): boolean {\r\n    // Get current language synchronously - this is a simple approach\r\n    // In a real app, you might want to use a signal or store the current language\r\n    return this.langService.getCurrentLang() === 'ar';\r\n  }\r\n}\r\n", "import { Component, OnInit, signal } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { RolesService } from '../../../services/roles.service';\r\nimport { PermissionsService } from '../../../services/permissions.service';\r\nimport { RoleSearchParams, Permission } from '../../../models/role.model';\r\nimport { TranslationService } from '../../../services/translation.service';\r\nimport { LangService } from '../../../services/lang.service';\r\nimport { Role } from '../../../models/role.model';\r\nimport { ConfirmationModalComponent, ConfirmationModalData } from '../../shared/confirmation-modal/confirmation-modal.component';\r\nimport { PermissionsAssignmentModalComponent } from '../../shared/permissions-assignment-modal/permissions-assignment-modal.component';\r\n\r\n@Component({\r\n  selector: 'app-roles-list',\r\n  templateUrl: './roles-list.component.html',\r\n  styleUrls: ['./roles-list.component.css'],\r\n  standalone: false\r\n})\r\nexport class RolesListComponent implements OnInit {\r\n  roles = signal<Role[]>([]);\r\n  loading = signal(false);\r\n  currentLang = signal<'ar' | 'en'>('en');\r\n  isRTL = signal(false);\r\n  \r\n  // Pagination\r\n  currentPage = signal(1);\r\n  pageSize = signal(10);\r\n  totalCount = signal(0);\r\n  searchTerm = signal('');\r\n  \r\n  // Modal state\r\n  showDeleteModal = signal(false);\r\n  roleToDelete = signal<Role | null>(null);\r\n  deleteModalData = signal<ConfirmationModalData>({\r\n    title: '',\r\n    message: '',\r\n    confirmText: '',\r\n    cancelText: '',\r\n    type: 'delete'\r\n  });\r\n\r\n  // Success modal state\r\n  showSuccessModal = signal(false);\r\n  successMessage = signal('');\r\n\r\n  constructor(\r\n    private rolesService: RolesService,\r\n    private permissionsService: PermissionsService,\r\n    private translationService: TranslationService,\r\n    private langService: LangService,\r\n    private router: Router\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.loadRoles();\r\n    this.langService.currentLang$.subscribe(lang => {\r\n      this.currentLang.set(lang);\r\n      this.isRTL.set(lang === 'ar');\r\n    });\r\n  }\r\n\r\n  loadRoles(): void {\r\n    this.loading.set(true);\r\n    \r\n    const params: RoleSearchParams = {\r\n      page: this.currentPage(),\r\n      pageSize: this.pageSize(),\r\n      search: this.searchTerm() || undefined\r\n    };\r\n    \r\n    this.rolesService.getRoles(params).subscribe({\r\n      next: (response) => {\r\n        if (response.success && response.data) {\r\n          this.roles.set(response.data.items || []);\r\n          this.totalCount.set(response.data.totalCount || 0);\r\n          this.currentPage.set(response.data.page || 1);\r\n          this.pageSize.set(response.data.pageSize || 10);\r\n          this.loadPermissionCounts();\r\n        } else {\r\n          this.roles.set([]);\r\n          this.totalCount.set(0);\r\n        }\r\n        this.loading.set(false);\r\n      },\r\n      error: (error) => {\r\n        console.error('Error loading roles:', error);\r\n        this.roles.set([]);\r\n        this.totalCount.set(0);\r\n        this.loading.set(false);\r\n      }\r\n    });\r\n  }\r\n\r\n  loadPermissionCounts(): void {\r\n    const roles = this.roles();\r\n    roles.forEach(role => {\r\n      this.rolesService.getRolePermissions(role.id).subscribe({\r\n        next: (response) => {\r\n          if (response.success && response.data) {\r\n            // Update the role with permission count (data is an array of permission objects)\r\n            const updatedRoles = this.roles().map(r => \r\n              r.id === role.id \r\n                ? { ...r, permissionCount: response.data.length }\r\n                : r\r\n            );\r\n            this.roles.set(updatedRoles);\r\n          }\r\n        },\r\n        error: (error) => {\r\n          console.error(`Error loading permissions for role ${role.id}:`, error);\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  onSearchChange(searchTerm: string): void {\r\n    this.searchTerm.set(searchTerm);\r\n    this.currentPage.set(1);\r\n    this.loadRoles();\r\n  }\r\n\r\n  onSearchClick(): void {\r\n    this.currentPage.set(1);\r\n    this.loadRoles();\r\n  }\r\n\r\n  clearSearch(): void {\r\n    this.searchTerm.set('');\r\n    this.currentPage.set(1);\r\n    this.loadRoles();\r\n  }\r\n\r\n  onPageChange(page: number): void {\r\n    this.currentPage.set(page);\r\n    this.loadRoles();\r\n  }\r\n\r\n  onPageSizeChange(newPageSize: string): void {\r\n    this.pageSize.set(parseInt(newPageSize));\r\n    this.currentPage.set(1);\r\n    this.loadRoles();\r\n  }\r\n\r\n  openDeleteModal(role: Role): void {\r\n    this.roleToDelete.set(role);\r\n    this.deleteModalData.set({\r\n      title: this.translate('roles.delete_role'),\r\n      message: this.translate('roles.confirm_delete_role').replace('%name%', role.name),\r\n      confirmText: this.translate('roles.delete'),\r\n      cancelText: this.translate('roles.cancel'),\r\n      type: 'delete'\r\n    });\r\n    this.showDeleteModal.set(true);\r\n  }\r\n\r\n  onDeleteConfirm(): void {\r\n    const role = this.roleToDelete();\r\n    if (role) {\r\n      this.rolesService.deleteRole(role.id).subscribe({\r\n        next: () => {\r\n          this.roles.update(roles => roles.filter(r => r.id !== role.id));\r\n          this.showDeleteModal.set(false);\r\n          this.roleToDelete.set(null);\r\n          // Show success message\r\n          this.successMessage.set(this.translate('roles.deleted_success'));\r\n          this.showSuccessModal.set(true);\r\n          // Auto-hide after 3 seconds\r\n          setTimeout(() => {\r\n            this.showSuccessModal.set(false);\r\n          }, 3000);\r\n        },\r\n        error: (error) => {\r\n          console.error('Error deleting role:', error);\r\n          this.showDeleteModal.set(false);\r\n          this.roleToDelete.set(null);\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  onDeleteCancel(): void {\r\n    this.showDeleteModal.set(false);\r\n    this.roleToDelete.set(null);\r\n  }\r\n\r\n  editRole(role: Role): void {\r\n    this.router.navigate(['/roles', role.id, 'edit']);\r\n  }\r\n\r\n  viewRoleDetails(role: Role): void {\r\n    this.router.navigate(['/roles', role.id, 'details']);\r\n  }\r\n\r\n  managePermissions(role: Role): void {\r\n    // Store the role ID for the modal\r\n    this.roleId.set(role.id);\r\n    this.showPermissionsModal.set(true);\r\n  }\r\n\r\n  // Modal state for roles list\r\n  showPermissionsModal = signal(false);\r\n  roleId = signal<string | null>(null);\r\n\r\n  addNewRole(): void {\r\n    this.router.navigate(['/roles/add']);\r\n  }\r\n\r\n  manageAllPermissions(): void {\r\n    this.router.navigate(['/roles/permissions']);\r\n  }\r\n\r\n  onPermissionsAssign(permissionIds: number[]): void {\r\n    const roleId = this.roleId();\r\n    if (!roleId) return;\r\n\r\n    this.rolesService.assignPermissionsToRole(roleId, permissionIds).subscribe({\r\n      next: () => {\r\n        this.successMessage.set(this.translate('roles.permissions_assigned_success'));\r\n        this.showSuccessModal.set(true);\r\n        this.showPermissionsModal.set(false);\r\n        this.roleId.set(null);\r\n        this.loadRoles(); // Reload roles to get updated permission counts\r\n      },\r\n      error: (error) => {\r\n        console.error('Error assigning permissions:', error);\r\n      }\r\n    });\r\n  }\r\n\r\n  onPermissionsCancel(): void {\r\n    this.showPermissionsModal.set(false);\r\n    this.roleId.set(null);\r\n  }\r\n\r\n\r\n  closeSuccessModal(): void {\r\n    this.showSuccessModal.set(false);\r\n  }\r\n\r\n  translate(key: string): string {\r\n    return this.translationService.translate(key);\r\n  }\r\n\r\n  get totalPages(): number {\r\n    return Math.ceil(this.totalCount() / this.pageSize());\r\n  }\r\n\r\n  get pages(): number[] {\r\n    const pages: number[] = [];\r\n    const maxVisiblePages = 5;\r\n    \r\n    if (this.totalPages === 0) {\r\n      pages.push(1);\r\n      return pages;\r\n    }\r\n    \r\n    let startPage = Math.max(1, this.currentPage() - Math.floor(maxVisiblePages / 2));\r\n    let endPage = Math.min(this.totalPages, startPage + maxVisiblePages - 1);\r\n    \r\n    if (endPage - startPage + 1 < maxVisiblePages) {\r\n      startPage = Math.max(1, endPage - maxVisiblePages + 1);\r\n    }\r\n    \r\n    for (let i = startPage; i <= endPage; i++) {\r\n      pages.push(i);\r\n    }\r\n    \r\n    return pages;\r\n  }\r\n\r\n  get Math() {\r\n    return Math;\r\n  }\r\n\r\n  formatDate(dateString: string): string {\r\n    const date = new Date(dateString);\r\n    return date.toLocaleDateString(this.currentLang() === 'ar' ? 'ar-EG' : 'en-US', {\r\n      year: 'numeric',\r\n      month: 'short',\r\n      day: 'numeric',\r\n      calendar: 'gregory'\r\n    });\r\n  }\r\n}\r\n", "<div class=\"roles-container rounded-5\" [class.rtl]=\"isRTL()\">\r\n  <!-- Header Section -->\r\n  <div class=\"page-header\">\r\n    <div class=\"header-content\" [class.rtl]=\"isRTL()\" [class.ltr]=\"!isRTL()\">\r\n      <div class=\"title-section\">\r\n        <h1 class=\"page-title\">{{ translate('roles.roles_management') }}</h1>\r\n        <p class=\"page-subtitle\">{{ translate('roles.roles_management_description') }}</p>\r\n      </div>\r\n      <div class=\"header-actions\">\r\n        <button class=\"btn btn-secondary\" (click)=\"manageAllPermissions()\">\r\n          <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\">\r\n            <circle cx=\"12\" cy=\"12\" r=\"3\"></circle>\r\n            <path d=\"M12 1v6m0 6v6m11-7h-6m-6 0H1\"></path>\r\n          </svg>\r\n          {{ translate('roles.manage_permissions') }}\r\n        </button>\r\n        <button class=\"btn btn-primary\" (click)=\"addNewRole()\">\r\n          <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\">\r\n            <line x1=\"12\" y1=\"5\" x2=\"12\" y2=\"19\"></line>\r\n            <line x1=\"5\" y1=\"12\" x2=\"19\" y2=\"12\"></line>\r\n          </svg>\r\n          {{ translate('roles.add_new_role') }}\r\n        </button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <!-- Search and Filters Section -->\r\n  <div class=\"search-section\" [class.rtl]=\"isRTL()\">\r\n    <div class=\"search-container\" [class.rtl]=\"isRTL()\" [class.ltr]=\"!isRTL()\">\r\n      <div class=\"search-input-group\" [class.rtl]=\"isRTL()\" [class.ltr]=\"!isRTL()\">\r\n        <svg class=\"search-icon\" width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\">\r\n          <circle cx=\"11\" cy=\"11\" r=\"8\"></circle>\r\n          <path d=\"m21 21-4.35-4.35\"></path>\r\n        </svg>\r\n        <input \r\n          type=\"text\" \r\n          class=\"search-input\" \r\n          [placeholder]=\"translate('roles.search_roles')\"\r\n          [value]=\"searchTerm()\"\r\n          (input)=\"onSearchChange($event.target.value)\"\r\n          (keyup.enter)=\"onSearchClick()\"\r\n        />\r\n        <button \r\n          *ngIf=\"searchTerm()\" \r\n          class=\"clear-search-btn\" \r\n          (click)=\"clearSearch()\"\r\n          [attr.aria-label]=\"translate('roles.clear_search')\"\r\n        >\r\n          <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\">\r\n            <line x1=\"18\" y1=\"6\" x2=\"6\" y2=\"18\"></line>\r\n            <line x1=\"6\" y1=\"6\" x2=\"18\" y2=\"18\"></line>\r\n          </svg>\r\n        </button>\r\n      </div>\r\n      <button class=\"btn btn-outline\" (click)=\"onSearchClick()\">\r\n        {{ translate('roles.search') }}\r\n      </button>\r\n    </div>\r\n  </div>\r\n\r\n  <!-- Roles Table -->\r\n  <div class=\"table-container\">\r\n    <div class=\"table-header\">\r\n      <div class=\"table-title\">\r\n        <h3>{{ translate('roles.roles_list') }}</h3>\r\n        <span class=\"count-badge\">{{ totalCount() }} {{ translate('roles.roles') }}</span>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Loading State -->\r\n    <div *ngIf=\"loading()\" class=\"loading-container\">\r\n      <div class=\"loading-spinner\"></div>\r\n      <p>{{ translate('roles.loading_roles') }}</p>\r\n    </div>\r\n\r\n    <!-- Empty State -->\r\n    <div *ngIf=\"!loading() && roles().length === 0\" class=\"empty-state\">\r\n      <div class=\"empty-icon\">\r\n        <svg width=\"64\" height=\"64\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"1.5\">\r\n          <path d=\"M17 21v-2a4 4 0 0 0-4-4H5a4 4 0 0 0-4 4v2\"></path>\r\n          <circle cx=\"9\" cy=\"7\" r=\"4\"></circle>\r\n          <path d=\"M23 21v-2a4 4 0 0 0-3-3.87\"></path>\r\n          <path d=\"M16 3.13a4 4 0 0 1 0 7.75\"></path>\r\n        </svg>\r\n      </div>\r\n      <h3>{{ translate('roles.no_roles_found') }}</h3>\r\n      <p>{{ translate('roles.no_roles_description') }}</p>\r\n      <button class=\"btn btn-primary\" (click)=\"addNewRole()\">\r\n        <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\">\r\n          <line x1=\"12\" y1=\"5\" x2=\"12\" y2=\"19\"></line>\r\n          <line x1=\"5\" y1=\"12\" x2=\"19\" y2=\"12\"></line>\r\n        </svg>\r\n        {{ translate('roles.add_first_role') }}\r\n      </button>\r\n    </div>\r\n\r\n    <!-- Roles Table -->\r\n    <div *ngIf=\"!loading() && roles().length > 0\" class=\"table-wrapper\">\r\n      <table class=\"roles-table\">\r\n        <thead>\r\n          <tr>\r\n            <th>{{ translate('roles.role_name') }}</th>\r\n            <th>{{ translate('roles.description') }}</th>\r\n            <th>{{ translate('roles.permissions_count') }}</th>\r\n            <th>{{ translate('roles.created_date') }}</th>\r\n            <th>{{ translate('roles.actions') }}</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr *ngFor=\"let role of roles()\" class=\"role-row\">\r\n            <td class=\"role-name\">\r\n              <div class=\"role-info\">\r\n                <h4>{{ role.name }}</h4>\r\n                <span class=\"role-id\">ID: {{ role.id }}</span>\r\n              </div>\r\n            </td>\r\n            <td class=\"role-description\">\r\n              <p>{{ role.description || translate('roles.no_description') }}</p>\r\n            </td>\r\n             <td class=\"permissions-count\">\r\n               <span class=\"count-badge\">{{ role.permissionCount || 0 }}</span>\r\n             </td>\r\n            <td class=\"created-date\">\r\n              <span>{{ formatDate(role.createdAt) }}</span>\r\n            </td>\r\n            <td class=\"actions\">\r\n              <div class=\"action-buttons\">\r\n                <button \r\n                  class=\"btn-icon btn-view\" \r\n                  (click)=\"viewRoleDetails(role)\"\r\n                  [attr.aria-label]=\"translate('roles.view_details')\"\r\n                >\r\n                  <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\">\r\n                    <path d=\"M1 12s4-8 11-8 11 8 11 8-4 8-11 8-11-8-11-8z\"></path>\r\n                    <circle cx=\"12\" cy=\"12\" r=\"3\"></circle>\r\n                  </svg>\r\n                </button>\r\n                <button \r\n                  class=\"btn-icon btn-edit\" \r\n                  (click)=\"editRole(role)\"\r\n                  [attr.aria-label]=\"translate('roles.edit_role')\"\r\n                >\r\n                  <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\">\r\n                    <path d=\"M11 4H4a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h14a2 2 0 0 0 2-2v-7\"></path>\r\n                    <path d=\"M18.5 2.5a2.121 2.121 0 0 1 3 3L12 15l-4 1 1-4 9.5-9.5z\"></path>\r\n                  </svg>\r\n                </button>\r\n                <button \r\n                  class=\"btn-icon btn-permissions\" \r\n                  (click)=\"managePermissions(role)\"\r\n                  [attr.aria-label]=\"translate('roles.manage_permissions')\"\r\n                >\r\n                  <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\">\r\n                    <path d=\"M20 13c0 5-3.5 7.5-7.66 8.95a1 1 0 0 1-.67-.01C7.5 20.5 4 18 4 13V6a1 1 0 0 1 1-1c2 0 4.5-1.2 6.24-2.72a1.17 1.17 0 0 1 1.52 0C14.51 3.81 17 5 19 5a1 1 0 0 1 1 1z\"/>\r\n                    <path d=\"M12 8v4\"/>\r\n                    <path d=\"M12 16h.01\"/>\r\n                  </svg>\r\n                </button>\r\n                <button \r\n                  class=\"btn-icon btn-delete\" \r\n                  (click)=\"openDeleteModal(role)\"\r\n                  [attr.aria-label]=\"translate('roles.delete_role')\"\r\n                >\r\n                  <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\">\r\n                    <polyline points=\"3,6 5,6 21,6\"></polyline>\r\n                    <path d=\"M19,6v14a2,2,0,0,1-2,2H7a2,2,0,0,1-2-2V6m3,0V4a2,2,0,0,1,2-2h4a2,2,0,0,1,2,2v6\"></path>\r\n                    <line x1=\"10\" y1=\"11\" x2=\"10\" y2=\"17\"></line>\r\n                    <line x1=\"14\" y1=\"11\" x2=\"14\" y2=\"17\"></line>\r\n                  </svg>\r\n                </button>\r\n              </div>\r\n            </td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n\r\n    <!-- Pagination -->\r\n    <div *ngIf=\"!loading() && roles().length > 0\" class=\"pagination-container\">\r\n      <div class=\"pagination-info\">\r\n        <span>{{ translate('roles.showing') }} {{ (currentPage() - 1) * pageSize() + 1 }} {{ translate('roles.to') }} {{ Math.min(currentPage() * pageSize(), totalCount()) }} {{ translate('roles.of') }} {{ totalCount() }} {{ translate('roles.results') }}</span>\r\n        <div class=\"page-size-selector\">\r\n          <label>{{ translate('roles.show') }}:</label>\r\n          <select [value]=\"pageSize()\" (change)=\"onPageSizeChange($any($event.target).value)\">\r\n            <option value=\"5\">5</option>\r\n            <option value=\"10\">10</option>\r\n            <option value=\"20\">20</option>\r\n            <option value=\"50\">50</option>\r\n          </select>\r\n        </div>\r\n      </div>\r\n      \r\n      <div class=\"pagination-controls\">\r\n        <button \r\n          class=\"btn-pagination\" \r\n          [disabled]=\"currentPage() === 1\"\r\n          (click)=\"onPageChange(currentPage() - 1)\"\r\n        >\r\n          <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\">\r\n            <polyline points=\"15,18 9,12 15,6\"></polyline>\r\n          </svg>\r\n          {{ translate('roles.previous') }}\r\n        </button>\r\n        \r\n        <div class=\"page-numbers\">\r\n          <button \r\n            *ngFor=\"let page of pages\" \r\n            class=\"btn-page\"\r\n            [class.active]=\"page === currentPage()\"\r\n            (click)=\"onPageChange(page)\"\r\n          >\r\n            {{ page }}\r\n          </button>\r\n        </div>\r\n        \r\n        <button \r\n          class=\"btn-pagination\" \r\n          [disabled]=\"currentPage() === totalPages\"\r\n          (click)=\"onPageChange(currentPage() + 1)\"\r\n        >\r\n          {{ translate('roles.next') }}\r\n          <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\">\r\n            <polyline points=\"9,18 15,12 9,6\"></polyline>\r\n          </svg>\r\n        </button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <!-- Confirmation Modal -->\r\n  <app-confirmation-modal\r\n    [data]=\"deleteModalData()\"\r\n    [isVisible]=\"showDeleteModal()\"\r\n    [isRTL]=\"isRTL()\"\r\n    (confirm)=\"onDeleteConfirm()\"\r\n    (cancel)=\"onDeleteCancel()\"\r\n  ></app-confirmation-modal>\r\n\r\n  <!-- Success Modal -->\r\n  <div *ngIf=\"showSuccessModal()\" class=\"success-modal\">\r\n    <div class=\"success-content\">\r\n      <div class=\"success-icon\">\r\n        <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\">\r\n          <path d=\"M22 11.08V12a10 10 0 1 1-5.93-9.14\"></path>\r\n          <polyline points=\"22,4 12,14.01 9,11.01\"></polyline>\r\n        </svg>\r\n      </div>\r\n      <p>{{ successMessage() }}</p>\r\n      <button class=\"close-success\" (click)=\"closeSuccessModal()\">\r\n        <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\">\r\n          <line x1=\"18\" y1=\"6\" x2=\"6\" y2=\"18\"></line>\r\n          <line x1=\"6\" y1=\"6\" x2=\"18\" y2=\"18\"></line>\r\n        </svg>\r\n      </button>\r\n    </div>\r\n  </div>\r\n\r\n   <!-- Permissions Assignment Modal -->\r\n   <app-permissions-assignment-modal\r\n     [isVisible]=\"showPermissionsModal()\"\r\n     [roleId]=\"roleId()\"\r\n     (assign)=\"onPermissionsAssign($event)\"\r\n     (cancel)=\"onPermissionsCancel()\"\r\n   ></app-permissions-assignment-modal>\r\n</div>\r\n\r\n", "import { Component, OnInit, signal } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators, FormArray } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { RolesService } from '../../../services/roles.service';\r\nimport { PermissionsService } from '../../../services/permissions.service';\r\nimport { TranslationService } from '../../../services/translation.service';\r\nimport { LangService } from '../../../services/lang.service';\r\nimport { Role, Permission, CreateRoleRequest, UpdateRoleRequest } from '../../../models/role.model';\r\nimport { ConfirmationModalComponent, ConfirmationModalData } from '../../shared/confirmation-modal/confirmation-modal.component';\r\n\r\n@Component({\r\n  selector: 'app-role-form',\r\n  templateUrl: './role-form.component.html',\r\n  styleUrls: ['./role-form.component.css'],\r\n  standalone: false\r\n})\r\nexport class RoleFormComponent implements OnInit {\r\n  roleForm!: FormGroup;\r\n  permissions = signal<Permission[]>([]);\r\n  selectedPermissions = signal<number[]>([]);\r\n  loading = signal(false);\r\n  saving = signal(false);\r\n  currentLang = signal<'ar' | 'en'>('en');\r\n  isRTL = signal(false);\r\n  isEditMode = signal(false);\r\n  roleId = signal<string | null>(null);\r\n  role = signal<Role | null>(null);\r\n\r\n  // Modal state\r\n  showCancelModal = signal(false);\r\n  cancelModalData = signal<ConfirmationModalData>({\r\n    title: '',\r\n    message: '',\r\n    confirmText: '',\r\n    cancelText: '',\r\n    type: 'warning'\r\n  });\r\n\r\n  // Success modal state\r\n  showSuccessModal = signal(false);\r\n  successMessage = signal('');\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private rolesService: RolesService,\r\n    private permissionsService: PermissionsService,\r\n    private translationService: TranslationService,\r\n    private langService: LangService,\r\n    private route: ActivatedRoute,\r\n    private router: Router\r\n  ) {\r\n    this.initializeForm();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.langService.currentLang$.subscribe(lang => {\r\n      this.currentLang.set(lang);\r\n      this.isRTL.set(lang === 'ar');\r\n    });\r\n\r\n    this.route.params.subscribe(params => {\r\n      if (params['roleId']) {\r\n        this.isEditMode.set(true);\r\n        this.roleId.set(params['roleId']);\r\n        this.loadRole();\r\n      }\r\n    });\r\n\r\n    this.loadPermissions();\r\n  }\r\n\r\n  initializeForm(): void {\r\n    this.roleForm = this.fb.group({\r\n      name: ['', [Validators.required, Validators.minLength(2)]],\r\n      description: ['', [Validators.required, Validators.minLength(5)]],\r\n      permissions: this.fb.array([])\r\n    });\r\n  }\r\n\r\n  loadRole(): void {\r\n    const roleId = this.roleId();\r\n    if (!roleId) return;\r\n\r\n    this.loading.set(true);\r\n    this.rolesService.getRoleById(roleId).subscribe({\r\n      next: (role) => {\r\n        this.role.set(role);\r\n        this.roleForm.patchValue({\r\n          name: role.name,\r\n          description: role.description\r\n        });\r\n        \r\n        // Set selected permissions\r\n        const selectedIds = role.availablePermissions?.map(p => p.id) || [];\r\n        this.selectedPermissions.set(selectedIds);\r\n        this.updatePermissionsFormArray();\r\n        \r\n        this.loading.set(false);\r\n      },\r\n      error: (error) => {\r\n        console.error('Error loading role:', error);\r\n        this.loading.set(false);\r\n      }\r\n    });\r\n  }\r\n\r\n  loadPermissions(): void {\r\n    this.permissionsService.getAllPermissions().subscribe({\r\n      next: (permissions) => {\r\n        this.permissions.set(permissions);\r\n        this.updatePermissionsFormArray();\r\n      },\r\n      error: (error) => {\r\n        console.error('Error loading permissions:', error);\r\n      }\r\n    });\r\n  }\r\n\r\n  updatePermissionsFormArray(): void {\r\n    const permissionsArray = this.roleForm.get('permissions') as FormArray;\r\n    permissionsArray.clear();\r\n    \r\n    this.permissions().forEach(permission => {\r\n      const isSelected = this.selectedPermissions().includes(permission.id);\r\n      permissionsArray.push(this.fb.control(isSelected));\r\n    });\r\n  }\r\n\r\n  onPermissionToggle(permissionId: number, isChecked: boolean): void {\r\n    const current = this.selectedPermissions();\r\n    if (isChecked) {\r\n      this.selectedPermissions.set([...current, permissionId]);\r\n    } else {\r\n      this.selectedPermissions.set(current.filter(id => id !== permissionId));\r\n    }\r\n    this.updatePermissionsFormArray();\r\n  }\r\n\r\n  onSubmit(): void {\r\n    if (this.roleForm.valid) {\r\n      this.saving.set(true);\r\n      \r\n      const formValue = this.roleForm.value;\r\n      const roleData = {\r\n        name: formValue.name,\r\n        description: formValue.description\r\n      };\r\n\r\n      if (this.isEditMode()) {\r\n        this.updateRole(roleData);\r\n      } else {\r\n        this.createRole(roleData);\r\n      }\r\n    } else {\r\n      this.markFormGroupTouched();\r\n    }\r\n  }\r\n\r\n  createRole(roleData: CreateRoleRequest): void {\r\n    this.rolesService.createRole(roleData).subscribe({\r\n      next: (role) => {\r\n        // Assign permissions if any are selected\r\n        if (this.selectedPermissions().length > 0) {\r\n          this.rolesService.assignPermissionsToRole(role.id, this.selectedPermissions()).subscribe({\r\n            next: () => {\r\n              this.showSuccessMessage(this.translate('roles.role_form.role_created'));\r\n              this.router.navigate(['/roles']);\r\n            },\r\n            error: (error) => {\r\n              console.error('Error assigning permissions:', error);\r\n              this.showSuccessMessage(this.translate('roles.role_form.role_created'));\r\n              this.router.navigate(['/roles']);\r\n            }\r\n          });\r\n        } else {\r\n          this.showSuccessMessage(this.translate('roles.role_form.role_created'));\r\n          this.router.navigate(['/roles']);\r\n        }\r\n        this.saving.set(false);\r\n      },\r\n      error: (error) => {\r\n        console.error('Error creating role:', error);\r\n        this.saving.set(false);\r\n      }\r\n    });\r\n  }\r\n\r\n  updateRole(roleData: UpdateRoleRequest): void {\r\n    const roleId = this.roleId();\r\n    if (!roleId) return;\r\n\r\n    this.rolesService.updateRole(roleId, roleData).subscribe({\r\n      next: (role) => {\r\n        // Update permissions\r\n        this.rolesService.assignPermissionsToRole(roleId, this.selectedPermissions()).subscribe({\r\n          next: () => {\r\n            this.showSuccessMessage(this.translate('roles.role_form.role_updated'));\r\n            this.router.navigate(['/roles']);\r\n          },\r\n          error: (error) => {\r\n            console.error('Error updating permissions:', error);\r\n            this.showSuccessMessage(this.translate('roles.role_form.role_updated'));\r\n            this.router.navigate(['/roles']);\r\n          }\r\n        });\r\n        this.saving.set(false);\r\n      },\r\n      error: (error) => {\r\n        console.error('Error updating role:', error);\r\n        this.saving.set(false);\r\n      }\r\n    });\r\n  }\r\n\r\n  onCancel(): void {\r\n    if (this.roleForm.dirty) {\r\n      this.cancelModalData.set({\r\n        title: this.translate('roles.role_form.back'),\r\n        message: this.translate('roles.unsaved_changes_message'),\r\n        confirmText: this.translate('roles.discard_changes'),\r\n        cancelText: this.translate('roles.keep_editing'),\r\n        type: 'warning'\r\n      });\r\n      this.showCancelModal.set(true);\r\n    } else {\r\n      this.goBack();\r\n    }\r\n  }\r\n\r\n  goBack(): void {\r\n    this.router.navigate(['/roles']);\r\n  }\r\n\r\n  onCancelConfirm(): void {\r\n    this.showCancelModal.set(false);\r\n    this.router.navigate(['/roles']);\r\n  }\r\n\r\n  onCancelCancel(): void {\r\n    this.showCancelModal.set(false);\r\n  }\r\n\r\n  showSuccessMessage(message: string): void {\r\n    this.successMessage.set(message);\r\n    this.showSuccessModal.set(true);\r\n    setTimeout(() => {\r\n      this.showSuccessModal.set(false);\r\n    }, 3000);\r\n  }\r\n\r\n  closeSuccessModal(): void {\r\n    this.showSuccessModal.set(false);\r\n  }\r\n\r\n  markFormGroupTouched(): void {\r\n    Object.keys(this.roleForm.controls).forEach(key => {\r\n      const control = this.roleForm.get(key);\r\n      control?.markAsTouched();\r\n    });\r\n  }\r\n\r\n  translate(key: string): string {\r\n    return this.translationService.translate(key);\r\n  }\r\n\r\n  getFieldError(fieldName: string): string {\r\n    const field = this.roleForm.get(fieldName);\r\n    if (field?.errors && field.touched) {\r\n      if (field.errors['required']) {\r\n        return this.translate(`roles.role_form.${fieldName}_required`);\r\n      }\r\n      if (field.errors['minlength']) {\r\n        return this.translate('roles.min_length_required');\r\n      }\r\n    }\r\n    return '';\r\n  }\r\n\r\n  isFieldInvalid(fieldName: string): boolean {\r\n    const field = this.roleForm.get(fieldName);\r\n    return !!(field?.invalid && field.touched);\r\n  }\r\n\r\n  getPermissionGroups(): { [key: string]: Permission[] } {\r\n    const groups: { [key: string]: Permission[] } = {};\r\n    \r\n    this.permissions().forEach(permission => {\r\n      const controller = permission.controller;\r\n      if (!groups[controller]) {\r\n        groups[controller] = [];\r\n      }\r\n      groups[controller].push(permission);\r\n    });\r\n    \r\n    return groups;\r\n  }\r\n\r\n  selectAllInGroup(permissions: Permission[]): void {\r\n    const current = this.selectedPermissions();\r\n    const newIds = permissions.map(p => p.id);\r\n    const updated = [...new Set([...current, ...newIds])];\r\n    this.selectedPermissions.set(updated);\r\n    this.updatePermissionsFormArray();\r\n  }\r\n\r\n  deselectAllInGroup(permissions: Permission[]): void {\r\n    const current = this.selectedPermissions();\r\n    const groupIds = permissions.map(p => p.id);\r\n    const updated = current.filter(id => !groupIds.includes(id));\r\n    this.selectedPermissions.set(updated);\r\n    this.updatePermissionsFormArray();\r\n  }\r\n}\r\n", "<div class=\"role-form-container\" [class.rtl]=\"isRTL()\">\r\n  <!-- Header Section -->\r\n  <div class=\"page-header\">\r\n    <div class=\"header-content\" [class.rtl]=\"isRTL()\" [class.ltr]=\"!isRTL()\">\r\n      <div class=\"title-section\">\r\n        <button class=\"back-btn\" (click)=\"goBack()\">\r\n          <svg width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\">\r\n            <polyline points=\"15,18 9,12 15,6\"></polyline>\r\n          </svg>\r\n          {{ translate('roles.role_form.back') }}\r\n        </button>\r\n        <div class=\"title-content\">\r\n          <h1 class=\"page-title\">\r\n            {{ isEditMode() ? translate('roles.role_form.edit_role') : translate('roles.role_form.add_role') }}\r\n          </h1>\r\n          <p class=\"page-subtitle\">\r\n            {{ isEditMode() ? translate('roles.edit_role_description') : translate('roles.add_role_description') }}\r\n          </p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <!-- Loading State -->\r\n  <div *ngIf=\"loading()\" class=\"loading-container\">\r\n    <div class=\"loading-spinner\"></div>\r\n    <p>{{ translate('roles.loading_role') }}</p>\r\n  </div>\r\n\r\n  <!-- Form Content -->\r\n  <div *ngIf=\"!loading()\" class=\"form-content\">\r\n    <form [formGroup]=\"roleForm\" (ngSubmit)=\"onSubmit()\" class=\"role-form\">\r\n      <!-- Basic Information Card -->\r\n      <div class=\"form-card\">\r\n        <div class=\"card-header\">\r\n          <h3>{{ translate('roles.basic_information') }}</h3>\r\n          <p>{{ translate('roles.basic_information_description') }}</p>\r\n        </div>\r\n        \r\n        <div class=\"form-grid\">\r\n          <div class=\"form-group\">\r\n            <label for=\"name\" class=\"form-label\">\r\n              {{ translate('roles.role_form.role_name') }}\r\n              <span class=\"required\">*</span>\r\n            </label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"name\"\r\n              formControlName=\"name\"\r\n              class=\"form-input\"\r\n              [class.error]=\"isFieldInvalid('name')\"\r\n              [placeholder]=\"translate('roles.role_form.role_name_placeholder')\"\r\n            />\r\n            <div *ngIf=\"isFieldInvalid('name')\" class=\"error-message\">\r\n              {{ getFieldError('name') }}\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"form-group full-width\">\r\n            <label for=\"description\" class=\"form-label\">\r\n              {{ translate('roles.role_form.description') }}\r\n              <span class=\"required\">*</span>\r\n            </label>\r\n            <textarea\r\n              id=\"description\"\r\n              formControlName=\"description\"\r\n              class=\"form-textarea\"\r\n              [class.error]=\"isFieldInvalid('description')\"\r\n              [placeholder]=\"translate('roles.role_form.description_placeholder')\"\r\n              rows=\"3\"\r\n            ></textarea>\r\n            <div *ngIf=\"isFieldInvalid('description')\" class=\"error-message\">\r\n              {{ getFieldError('description') }}\r\n            </div>\r\n          </div>\r\n\r\n        </div>\r\n      </div>\r\n\r\n\r\n      <!-- Form Actions -->\r\n      <div class=\"form-actions\">\r\n        <button\r\n          type=\"button\"\r\n          class=\"btn btn-secondary\"\r\n          (click)=\"goBack()\"\r\n          [disabled]=\"saving()\"\r\n        >\r\n          {{ translate('roles.role_form.back') }}\r\n        </button>\r\n        <button\r\n          type=\"submit\"\r\n          class=\"btn btn-primary\"\r\n          [disabled]=\"roleForm.invalid || saving()\"\r\n        >\r\n          <div *ngIf=\"saving()\" class=\"btn-loading\">\r\n            <div class=\"loading-spinner-small\"></div>\r\n            {{ translate('roles.role_form.saving') }}\r\n          </div>\r\n          <div *ngIf=\"!saving()\">\r\n            {{ isEditMode() ? translate('roles.role_form.save_changes') : translate('roles.role_form.save') }}\r\n          </div>\r\n        </button>\r\n      </div>\r\n    </form>\r\n  </div>\r\n\r\n  <!-- Confirmation Modal -->\r\n  <app-confirmation-modal\r\n    [data]=\"cancelModalData()\"\r\n    [isVisible]=\"showCancelModal()\"\r\n    [isRTL]=\"isRTL()\"\r\n    (confirm)=\"onCancelConfirm()\"\r\n    (cancel)=\"onCancelCancel()\"\r\n  ></app-confirmation-modal>\r\n\r\n  <!-- Success Modal -->\r\n  <div *ngIf=\"showSuccessModal()\" class=\"success-modal\">\r\n    <div class=\"success-content\">\r\n      <div class=\"success-icon\">\r\n        <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\">\r\n          <path d=\"M22 11.08V12a10 10 0 1 1-5.93-9.14\"></path>\r\n          <polyline points=\"22,4 12,14.01 9,11.01\"></polyline>\r\n        </svg>\r\n      </div>\r\n      <p>{{ successMessage() }}</p>\r\n      <button class=\"close-success\" (click)=\"closeSuccessModal()\">\r\n        <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\">\r\n          <line x1=\"18\" y1=\"6\" x2=\"6\" y2=\"18\"></line>\r\n          <line x1=\"6\" y1=\"6\" x2=\"18\" y2=\"18\"></line>\r\n        </svg>\r\n      </button>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n", "import { Component, OnInit, signal } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { RolesService } from '../../../services/roles.service';\r\nimport { PermissionsService } from '../../../services/permissions.service';\r\nimport { TranslationService } from '../../../services/translation.service';\r\nimport { LangService } from '../../../services/lang.service';\r\nimport { Role, Permission } from '../../../models/role.model';\r\nimport { ConfirmationModalComponent, ConfirmationModalData } from '../../shared/confirmation-modal/confirmation-modal.component';\r\nimport { PermissionsAssignmentModalComponent } from '../../shared/permissions-assignment-modal/permissions-assignment-modal.component';\r\n\r\n@Component({\r\n  selector: 'app-role-details',\r\n  templateUrl: './role-details.component.html',\r\n  styleUrls: ['./role-details.component.css'],\r\n  standalone: false\r\n})\r\nexport class RoleDetailsComponent implements OnInit {\r\n  role = signal<Role | null>(null);\r\n  permissions = signal<Permission[]>([]);\r\n  allPermissions = signal<Permission[]>([]);\r\n  loading = signal(false);\r\n  currentLang = signal<'ar' | 'en'>('en');\r\n  isRTL = signal(false);\r\n  roleId = signal<string | null>(null);\r\n\r\n  // Permissions assignment modal state\r\n  showPermissionsModal = signal(false);\r\n\r\n  // Success modal state\r\n  showSuccessModal = signal(false);\r\n  successMessage = signal('');\r\n\r\n  // Modal state\r\n  showRemoveModal = signal(false);\r\n  permissionToRemove = signal<Permission | null>(null);\r\n  removeModalData = signal<ConfirmationModalData>({\r\n    title: '',\r\n    message: '',\r\n    confirmText: '',\r\n    cancelText: '',\r\n    type: 'delete'\r\n  });\r\n\r\n  constructor(\r\n    private rolesService: RolesService,\r\n    private permissionsService: PermissionsService,\r\n    private translationService: TranslationService,\r\n    private langService: LangService,\r\n    private route: ActivatedRoute,\r\n    private router: Router\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.langService.currentLang$.subscribe(lang => {\r\n      this.currentLang.set(lang);\r\n      this.isRTL.set(lang === 'ar');\r\n    });\r\n\r\n    this.route.params.subscribe(params => {\r\n      if (params['roleId']) {\r\n        this.roleId.set(params['roleId']);\r\n        this.loadRole();\r\n      }\r\n    });\r\n  }\r\n\r\n  loadRole(): void {\r\n    const roleId = this.roleId();\r\n    if (!roleId) return;\r\n\r\n    this.loading.set(true);\r\n    this.rolesService.getRoleById(roleId).subscribe({\r\n      next: (role) => {\r\n        this.role.set(role);\r\n        this.loadRolePermissions();\r\n        this.loading.set(false);\r\n      },\r\n      error: (error) => {\r\n        console.error('Error loading role:', error);\r\n        this.loading.set(false);\r\n      }\r\n    });\r\n  }\r\n\r\n  loadRolePermissions(): void {\r\n    const roleId = this.roleId();\r\n    if (!roleId) return;\r\n    \r\n    // Use the correct API endpoint for getting role permissions\r\n    this.rolesService.getRolePermissions(roleId).subscribe({\r\n      next: (response) => {\r\n        // Handle the API response structure - data is an array of permission objects\r\n        if (response.success && response.data) {\r\n          // Set the permissions directly since the API returns the full permission objects\r\n          this.permissions.set(response.data);\r\n        } else {\r\n          this.permissions.set([]);\r\n        }\r\n      },\r\n      error: (error) => {\r\n        console.error('Error loading role permissions:', error);\r\n        this.permissions.set([]);\r\n      }\r\n    });\r\n  }\r\n\r\n\r\n  openPermissionsModal(): void {\r\n    this.showPermissionsModal.set(true);\r\n  }\r\n\r\n  onPermissionsAssign(permissionIds: number[]): void {\r\n    const roleId = this.roleId();\r\n    if (!roleId) return;\r\n\r\n    this.rolesService.assignPermissionsToRole(roleId, permissionIds).subscribe({\r\n      next: () => {\r\n        this.successMessage.set(this.translate('roles.permissions_assigned_success'));\r\n        this.showSuccessModal.set(true);\r\n        this.showPermissionsModal.set(false);\r\n        this.loadRolePermissions(); // Reload role permissions to get updated list\r\n      },\r\n      error: (error) => {\r\n        console.error('Error assigning permissions:', error);\r\n      }\r\n    });\r\n  }\r\n\r\n  onPermissionsCancel(): void {\r\n    this.showPermissionsModal.set(false);\r\n  }\r\n\r\n  openRemoveModal(permission: Permission): void {\r\n    this.permissionToRemove.set(permission);\r\n    this.removeModalData.set({\r\n      title: this.translate('roles.role_details.remove_permission'),\r\n      message: this.translate('roles.role_details.confirm_remove_permission'),\r\n      confirmText: this.translate('roles.role_details.remove_permission'),\r\n      cancelText: this.translate('roles.cancel'),\r\n      type: 'delete'\r\n    });\r\n    this.showRemoveModal.set(true);\r\n  }\r\n\r\n  onRemoveConfirm(): void {\r\n    const permission = this.permissionToRemove();\r\n    const roleId = this.roleId();\r\n    \r\n    if (permission && roleId) {\r\n      this.rolesService.removePermissionFromRole(roleId, permission.id).subscribe({\r\n        next: () => {\r\n          this.permissions.update(permissions => \r\n            permissions.filter(p => p.id !== permission.id)\r\n          );\r\n          this.showRemoveModal.set(false);\r\n          this.permissionToRemove.set(null);\r\n          this.showSuccessMessage(this.translate('roles.role_details.permission_removed'));\r\n        },\r\n        error: (error) => {\r\n          console.error('Error removing permission:', error);\r\n          this.showRemoveModal.set(false);\r\n          this.permissionToRemove.set(null);\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  onRemoveCancel(): void {\r\n    this.showRemoveModal.set(false);\r\n    this.permissionToRemove.set(null);\r\n  }\r\n\r\n  editRole(): void {\r\n    const roleId = this.roleId();\r\n    if (roleId) {\r\n      this.router.navigate(['/roles', roleId, 'edit']);\r\n    }\r\n  }\r\n\r\n  goBack(): void {\r\n    this.router.navigate(['/roles']);\r\n  }\r\n\r\n  showSuccessMessage(message: string): void {\r\n    this.successMessage.set(message);\r\n    this.showSuccessModal.set(true);\r\n    setTimeout(() => {\r\n      this.showSuccessModal.set(false);\r\n    }, 3000);\r\n  }\r\n\r\n  closeSuccessModal(): void {\r\n    this.showSuccessModal.set(false);\r\n  }\r\n\r\n  translate(key: string): string {\r\n    return this.translationService.translate(key);\r\n  }\r\n\r\n  formatDate(dateString: string): string {\r\n    const date = new Date(dateString);\r\n    return date.toLocaleDateString(this.currentLang() === 'ar' ? 'ar-EG' : 'en-US', {\r\n      year: 'numeric',\r\n      month: 'short',\r\n      day: 'numeric',\r\n      calendar: 'gregory'\r\n    });\r\n  }\r\n\r\n  getPermissionGroups(): { [key: string]: Permission[] } {\r\n    const groups: { [key: string]: Permission[] } = {};\r\n    \r\n    this.permissions().forEach(permission => {\r\n      const controller = permission.controller;\r\n      if (!groups[controller]) {\r\n        groups[controller] = [];\r\n      }\r\n      groups[controller].push(permission);\r\n    });\r\n    \r\n    return groups;\r\n  }\r\n\r\n}\r\n\r\n", "<div class=\"role-details-container\" [class.rtl]=\"isRTL()\">\r\n  <!-- Header Section -->\r\n  <div class=\"page-header\">\r\n    <div class=\"header-content\" [class.rtl]=\"isRTL()\" [class.ltr]=\"!isRTL()\">\r\n      <div class=\"title-section\">\r\n        <button class=\"back-btn\" (click)=\"goBack()\">\r\n          <svg width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\">\r\n            <polyline points=\"15,18 9,12 15,6\"></polyline>\r\n          </svg>\r\n          {{ translate('roles.role_form.back') }}\r\n        </button>\r\n        <div class=\"title-content\">\r\n          <h1 class=\"page-title\">{{ translate('roles.role_details.role_details') }}</h1>\r\n          <p class=\"page-subtitle\">{{ translate('roles.role_details_description') }}</p>\r\n        </div>\r\n      </div>\r\n      <div class=\"header-actions\">\r\n        <button class=\"btn btn-primary\" (click)=\"editRole()\">\r\n          <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\">\r\n            <path d=\"M11 4H4a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h14a2 2 0 0 0 2-2v-7\"></path>\r\n            <path d=\"M18.5 2.5a2.121 2.121 0 0 1 3 3L12 15l-4 1 1-4 9.5-9.5z\"></path>\r\n          </svg>\r\n          {{ translate('roles.edit_role') }}\r\n        </button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <!-- Loading State -->\r\n  <div *ngIf=\"loading()\" class=\"loading-container\">\r\n    <div class=\"loading-spinner\"></div>\r\n    <p>{{ translate('roles.loading_role') }}</p>\r\n  </div>\r\n\r\n  <!-- Role Details Content -->\r\n  <div *ngIf=\"!loading() && role()\" class=\"details-content\">\r\n    <!-- Role Information Card -->\r\n    <div class=\"info-card\">\r\n      <div class=\"card-header\">\r\n        <h3>{{ translate('roles.role_information') }}</h3>\r\n      </div>\r\n      <div class=\"info-grid\">\r\n        <div class=\"info-item\">\r\n          <label class=\"info-label\">{{ translate('roles.role_name') }}</label>\r\n          <div class=\"info-value\">{{ role()?.name }}</div>\r\n        </div>\r\n        <div class=\"info-item\">\r\n          <label class=\"info-label\">{{ translate('roles.description') }}</label>\r\n          <div class=\"info-value\">{{ role()?.description || translate('roles.no_description') }}</div>\r\n        </div>\r\n        <div class=\"info-item\">\r\n          <label class=\"info-label\">{{ translate('roles.created_date') }}</label>\r\n          <div class=\"info-value\">{{ formatDate(role()?.createdAt || '') }}</div>\r\n        </div>\r\n        <div class=\"info-item\">\r\n          <label class=\"info-label\">{{ translate('roles.permissions_count') }}</label>\r\n          <div class=\"info-value\">\r\n            <span class=\"count-badge\">{{ permissions().length }}</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Permissions Card -->\r\n    <div class=\"permissions-card\">\r\n      <div class=\"card-header\">\r\n        <h3>{{ translate('roles.role_details.assigned_permissions') }}</h3>\r\n        <p>{{ translate('roles.permissions_description') }}</p>\r\n      </div>\r\n\r\n\r\n      <!-- Empty State -->\r\n      <div *ngIf=\"permissions().length === 0\" class=\"empty-permissions\">\r\n        <div class=\"empty-icon\">\r\n          <svg width=\"64\" height=\"64\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"1.5\">\r\n            <circle cx=\"12\" cy=\"12\" r=\"10\"></circle>\r\n            <line x1=\"12\" y1=\"8\" x2=\"12\" y2=\"12\"></line>\r\n            <line x1=\"12\" y1=\"16\" x2=\"12.01\" y2=\"16\"></line>\r\n          </svg>\r\n        </div>\r\n        <h4>{{ translate('roles.role_details.no_permissions') }}</h4>\r\n        <p>{{ translate('roles.no_permissions_description') }}</p>\r\n        <button class=\"btn btn-primary\" (click)=\"openPermissionsModal()\">\r\n          <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\">\r\n            <line x1=\"12\" y1=\"5\" x2=\"12\" y2=\"19\"></line>\r\n            <line x1=\"5\" y1=\"12\" x2=\"19\" y2=\"12\"></line>\r\n          </svg>\r\n          {{ translate('roles.assign_permissions') }}\r\n        </button>\r\n      </div>\r\n\r\n      <!-- Permissions List -->\r\n      <div *ngIf=\"permissions().length > 0\" class=\"permissions-container\">\r\n        <div *ngFor=\"let group of getPermissionGroups() | keyvalue\" class=\"permission-group\">\r\n          <div class=\"group-header\">\r\n            <h4 class=\"group-title\">{{ group.key }}</h4>\r\n            <span class=\"group-count\">{{ group.value.length }} {{ translate('roles.permissions_count') }}</span>\r\n          </div>\r\n          \r\n          <div class=\"permissions-list\">\r\n            <div *ngFor=\"let permission of group.value\" class=\"permission-item\">\r\n              <div class=\"permission-info\">\r\n                <div class=\"permission-name\">{{ permission.displayName }}</div>\r\n                <div class=\"permission-description\">{{ permission.description }}</div>\r\n                <div class=\"permission-meta\">\r\n                  <span class=\"permission-controller\">{{ permission.controller }}</span>\r\n                  <span class=\"permission-action\">{{ permission.action }}</span>\r\n                </div>\r\n              </div>\r\n              <div class=\"permission-actions\">\r\n                <button \r\n                  class=\"btn-icon btn-remove\" \r\n                  (click)=\"openRemoveModal(permission)\"\r\n                  [attr.aria-label]=\"translate('roles.role_details.remove_permission')\"\r\n                >\r\n                  <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\">\r\n                    <line x1=\"18\" y1=\"6\" x2=\"6\" y2=\"18\"></line>\r\n                    <line x1=\"6\" y1=\"6\" x2=\"18\" y2=\"18\"></line>\r\n                  </svg>\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <!-- Confirmation Modal -->\r\n  <app-confirmation-modal\r\n    [data]=\"removeModalData()\"\r\n    [isVisible]=\"showRemoveModal()\"\r\n    [isRTL]=\"isRTL()\"\r\n    (confirm)=\"onRemoveConfirm()\"\r\n    (cancel)=\"onRemoveCancel()\"\r\n  ></app-confirmation-modal>\r\n\r\n   <!-- Success Modal -->\r\n   <div *ngIf=\"showSuccessModal()\" class=\"success-modal\">\r\n     <div class=\"success-content\">\r\n       <div class=\"success-icon\">\r\n         <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\">\r\n           <path d=\"M22 11.08V12a10 10 0 1 1-5.93-9.14\"></path>\r\n           <polyline points=\"22,4 12,14.01 9,11.01\"></polyline>\r\n         </svg>\r\n       </div>\r\n       <p>{{ successMessage() }}</p>\r\n       <button class=\"close-success\" (click)=\"closeSuccessModal()\">\r\n         <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\">\r\n           <line x1=\"18\" y1=\"6\" x2=\"6\" y2=\"18\"></line>\r\n           <line x1=\"6\" y1=\"6\" x2=\"18\" y2=\"18\"></line>\r\n         </svg>\r\n       </button>\r\n     </div>\r\n   </div>\r\n\r\n   <!-- Permissions Assignment Modal -->\r\n   <app-permissions-assignment-modal\r\n     [isVisible]=\"showPermissionsModal()\"\r\n     [roleId]=\"roleId()\"\r\n     (assign)=\"onPermissionsAssign($event)\"\r\n     (cancel)=\"onPermissionsCancel()\"\r\n   ></app-permissions-assignment-modal>\r\n</div>\r\n\r\n", "import { Component, OnInit, signal } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { PermissionsService } from '../../../services/permissions.service';\r\nimport { PermissionSearchParams } from '../../../models/role.model';\r\nimport { TranslationService } from '../../../services/translation.service';\r\nimport { LangService } from '../../../services/lang.service';\r\nimport { Permission, CreatePermissionRequest, UpdatePermissionRequest } from '../../../models/role.model';\r\nimport { ConfirmationModalComponent, ConfirmationModalData } from '../../shared/confirmation-modal/confirmation-modal.component';\r\n\r\n@Component({\r\n  selector: 'app-permissions-management',\r\n  templateUrl: './permissions-management.component.html',\r\n  styleUrls: ['./permissions-management.component.css'],\r\n  standalone: false\r\n})\r\nexport class PermissionsManagementComponent implements OnInit {\r\n  permissions = signal<Permission[]>([]);\r\n  loading = signal(false);\r\n  currentLang = signal<'ar' | 'en'>('en');\r\n  isRTL = signal(false);\r\n  \r\n  // Pagination\r\n  currentPage = signal(1);\r\n  pageSize = signal(10);\r\n  totalCount = signal(0);\r\n  searchTerm = signal('');\r\n  \r\n  // Form state\r\n  showForm = signal(false);\r\n  isEditMode = signal(false);\r\n  editingPermission = signal<Permission | null>(null);\r\n  permissionForm!: FormGroup;\r\n  saving = signal(false);\r\n\r\n  // Modal state\r\n  showDeleteModal = signal(false);\r\n  permissionToDelete = signal<Permission | null>(null);\r\n  deleteModalData = signal<ConfirmationModalData>({\r\n    title: '',\r\n    message: '',\r\n    confirmText: '',\r\n    cancelText: '',\r\n    type: 'delete'\r\n  });\r\n\r\n  // Success modal state\r\n  showSuccessModal = signal(false);\r\n  successMessage = signal('');\r\n\r\n  constructor(\r\n    private permissionsService: PermissionsService,\r\n    private translationService: TranslationService,\r\n    private langService: LangService,\r\n    private fb: FormBuilder,\r\n    private router: Router\r\n  ) {\r\n    this.initializeForm();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.loadPermissions();\r\n    this.langService.currentLang$.subscribe(lang => {\r\n      this.currentLang.set(lang);\r\n      this.isRTL.set(lang === 'ar');\r\n    });\r\n  }\r\n\r\n  initializeForm(): void {\r\n    this.permissionForm = this.fb.group({\r\n      name: ['', [Validators.required, Validators.minLength(2)]],\r\n      displayName: ['', [Validators.required, Validators.minLength(2)]],\r\n      description: ['', [Validators.required, Validators.minLength(5)]],\r\n      controller: ['', [Validators.required, Validators.minLength(2)]],\r\n      action: ['', [Validators.required, Validators.minLength(2)]],\r\n      isActive: [true]\r\n    });\r\n  }\r\n\r\n  loadPermissions(): void {\r\n    this.loading.set(true);\r\n    \r\n    const params: PermissionSearchParams = {\r\n      page: this.currentPage(),\r\n      pageSize: this.pageSize(),\r\n      search: this.searchTerm() || undefined\r\n    };\r\n    \r\n    this.permissionsService.getPermissions(params).subscribe({\r\n      next: (response) => {\r\n        if (response.success && response.data) {\r\n          this.permissions.set(response.data.items || []);\r\n          this.totalCount.set(response.data.totalCount || 0);\r\n          this.currentPage.set(response.data.page || 1);\r\n          this.pageSize.set(response.data.pageSize || 10);\r\n        } else {\r\n          this.permissions.set([]);\r\n          this.totalCount.set(0);\r\n        }\r\n        this.loading.set(false);\r\n      },\r\n      error: (error) => {\r\n        console.error('Error loading permissions:', error);\r\n        this.permissions.set([]);\r\n        this.totalCount.set(0);\r\n        this.loading.set(false);\r\n      }\r\n    });\r\n  }\r\n\r\n  onSearchChange(searchTerm: string): void {\r\n    this.searchTerm.set(searchTerm);\r\n    this.currentPage.set(1);\r\n    this.loadPermissions();\r\n  }\r\n\r\n  onSearchClick(): void {\r\n    this.currentPage.set(1);\r\n    this.loadPermissions();\r\n  }\r\n\r\n  clearSearch(): void {\r\n    this.searchTerm.set('');\r\n    this.currentPage.set(1);\r\n    this.loadPermissions();\r\n  }\r\n\r\n  onPageChange(page: number): void {\r\n    this.currentPage.set(page);\r\n    this.loadPermissions();\r\n  }\r\n\r\n  onPageSizeChange(newPageSize: string): void {\r\n    this.pageSize.set(parseInt(newPageSize));\r\n    this.currentPage.set(1);\r\n    this.loadPermissions();\r\n  }\r\n\r\n  openAddForm(): void {\r\n    this.isEditMode.set(false);\r\n    this.editingPermission.set(null);\r\n    this.permissionForm.reset({ isActive: true });\r\n    this.showForm.set(true);\r\n  }\r\n\r\n  openEditForm(permission: Permission): void {\r\n    this.isEditMode.set(true);\r\n    this.editingPermission.set(permission);\r\n    this.permissionForm.patchValue({\r\n      name: permission.name,\r\n      displayName: permission.displayName,\r\n      description: permission.description,\r\n      controller: permission.controller,\r\n      action: permission.action,\r\n      isActive: permission.isActive\r\n    });\r\n    this.showForm.set(true);\r\n  }\r\n\r\n  closeForm(): void {\r\n    this.showForm.set(false);\r\n    this.isEditMode.set(false);\r\n    this.editingPermission.set(null);\r\n    this.permissionForm.reset({ isActive: true });\r\n  }\r\n\r\n  onSubmit(): void {\r\n    if (this.permissionForm.valid) {\r\n      this.saving.set(true);\r\n      \r\n      const formValue = this.permissionForm.value;\r\n      const permissionData = {\r\n        name: formValue.name,\r\n        displayName: formValue.displayName,\r\n        description: formValue.description,\r\n        controller: formValue.controller,\r\n        action: formValue.action,\r\n        isActive: formValue.isActive\r\n      };\r\n\r\n      if (this.isEditMode()) {\r\n        this.updatePermission(permissionData);\r\n      } else {\r\n        this.createPermission(permissionData);\r\n      }\r\n    } else {\r\n      this.markFormGroupTouched();\r\n    }\r\n  }\r\n\r\n  createPermission(permissionData: CreatePermissionRequest): void {\r\n    this.permissionsService.createPermission(permissionData).subscribe({\r\n      next: (permission) => {\r\n        this.permissions.update(permissions => [permission, ...permissions]);\r\n        this.closeForm();\r\n        this.showSuccessMessage(this.translate('roles.permissions.permission_created'));\r\n        this.saving.set(false);\r\n      },\r\n      error: (error) => {\r\n        console.error('Error creating permission:', error);\r\n        this.saving.set(false);\r\n      }\r\n    });\r\n  }\r\n\r\n  updatePermission(permissionData: UpdatePermissionRequest): void {\r\n    const permission = this.editingPermission();\r\n    if (!permission) return;\r\n\r\n    this.permissionsService.updatePermission(permission.id, permissionData).subscribe({\r\n      next: (updatedPermission) => {\r\n        this.permissions.update(permissions => \r\n          permissions.map(p => p.id === permission.id ? updatedPermission : p)\r\n        );\r\n        this.closeForm();\r\n        this.showSuccessMessage(this.translate('roles.permissions.permission_updated'));\r\n        this.saving.set(false);\r\n      },\r\n      error: (error) => {\r\n        console.error('Error updating permission:', error);\r\n        this.saving.set(false);\r\n      }\r\n    });\r\n  }\r\n\r\n  openDeleteModal(permission: Permission): void {\r\n    this.permissionToDelete.set(permission);\r\n    this.deleteModalData.set({\r\n      title: this.translate('roles.permissions.delete_permission'),\r\n      message: this.translate('roles.permissions.confirm_delete_permission'),\r\n      confirmText: this.translate('roles.permissions.delete_permission'),\r\n      cancelText: this.translate('roles.cancel'),\r\n      type: 'delete'\r\n    });\r\n    this.showDeleteModal.set(true);\r\n  }\r\n\r\n  onDeleteConfirm(): void {\r\n    const permission = this.permissionToDelete();\r\n    if (permission) {\r\n      this.permissionsService.deletePermission(permission.id).subscribe({\r\n        next: () => {\r\n          this.permissions.update(permissions => permissions.filter(p => p.id !== permission.id));\r\n          this.showDeleteModal.set(false);\r\n          this.permissionToDelete.set(null);\r\n          this.showSuccessMessage(this.translate('roles.permissions.permission_deleted'));\r\n        },\r\n        error: (error) => {\r\n          console.error('Error deleting permission:', error);\r\n          this.showDeleteModal.set(false);\r\n          this.permissionToDelete.set(null);\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  onDeleteCancel(): void {\r\n    this.showDeleteModal.set(false);\r\n    this.permissionToDelete.set(null);\r\n  }\r\n\r\n  showSuccessMessage(message: string): void {\r\n    this.successMessage.set(message);\r\n    this.showSuccessModal.set(true);\r\n    setTimeout(() => {\r\n      this.showSuccessModal.set(false);\r\n    }, 3000);\r\n  }\r\n\r\n  closeSuccessModal(): void {\r\n    this.showSuccessModal.set(false);\r\n  }\r\n\r\n  markFormGroupTouched(): void {\r\n    Object.keys(this.permissionForm.controls).forEach(key => {\r\n      const control = this.permissionForm.get(key);\r\n      control?.markAsTouched();\r\n    });\r\n  }\r\n\r\n  translate(key: string): string {\r\n    return this.translationService.translate(key);\r\n  }\r\n\r\n  getFieldError(fieldName: string): string {\r\n    const field = this.permissionForm.get(fieldName);\r\n    if (field?.errors && field.touched) {\r\n      if (field.errors['required']) {\r\n        return this.translate(`roles.permissions.${fieldName}_required`);\r\n      }\r\n      if (field.errors['minlength']) {\r\n        return this.translate('roles.min_length_required');\r\n      }\r\n    }\r\n    return '';\r\n  }\r\n\r\n  isFieldInvalid(fieldName: string): boolean {\r\n    const field = this.permissionForm.get(fieldName);\r\n    return !!(field?.invalid && field.touched);\r\n  }\r\n\r\n  get totalPages(): number {\r\n    return Math.ceil(this.totalCount() / this.pageSize());\r\n  }\r\n\r\n  get pages(): number[] {\r\n    const pages: number[] = [];\r\n    const maxVisiblePages = 5;\r\n    \r\n    if (this.totalPages === 0) {\r\n      pages.push(1);\r\n      return pages;\r\n    }\r\n    \r\n    let startPage = Math.max(1, this.currentPage() - Math.floor(maxVisiblePages / 2));\r\n    let endPage = Math.min(this.totalPages, startPage + maxVisiblePages - 1);\r\n    \r\n    if (endPage - startPage + 1 < maxVisiblePages) {\r\n      startPage = Math.max(1, endPage - maxVisiblePages + 1);\r\n    }\r\n    \r\n    for (let i = startPage; i <= endPage; i++) {\r\n      pages.push(i);\r\n    }\r\n    \r\n    return pages;\r\n  }\r\n\r\n  get Math() {\r\n    return Math;\r\n  }\r\n\r\n  formatDate(dateString: string): string {\r\n    const date = new Date(dateString);\r\n    return date.toLocaleDateString(this.currentLang() === 'ar' ? 'ar-EG' : 'en-US', {\r\n      year: 'numeric',\r\n      month: 'short',\r\n      day: 'numeric',\r\n      calendar: 'gregory'\r\n    });\r\n  }\r\n\r\n  goBack(): void {\r\n    this.router.navigate(['/roles']);\r\n  }\r\n}\r\n", "<div class=\"permissions-container\" [class.rtl]=\"isRTL()\">\r\n  <!-- Header Section -->\r\n  <div class=\"page-header\">\r\n    <div class=\"header-content\" [class.rtl]=\"isRTL()\" [class.ltr]=\"!isRTL()\">\r\n      <div class=\"title-section\">\r\n        <button class=\"back-btn\" (click)=\"goBack()\">\r\n          <svg width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\">\r\n            <polyline points=\"15,18 9,12 15,6\"></polyline>\r\n          </svg>\r\n          {{ translate('roles.role_form.back') }}\r\n        </button>\r\n        <div class=\"title-content\">\r\n          <h1 class=\"page-title\">{{ translate('roles.permissions.permissions_management') }}</h1>\r\n          <p class=\"page-subtitle\">{{ translate('roles.permissions.permissions_management_description') }}</p>\r\n        </div>\r\n      </div>\r\n      <div class=\"header-actions\">\r\n        <button class=\"btn btn-primary\" (click)=\"openAddForm()\">\r\n          <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\">\r\n            <line x1=\"12\" y1=\"5\" x2=\"12\" y2=\"19\"></line>\r\n            <line x1=\"5\" y1=\"12\" x2=\"19\" y2=\"12\"></line>\r\n          </svg>\r\n          {{ translate('roles.permissions.add_new_permission') }}\r\n        </button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <!-- Search Section -->\r\n  <div class=\"search-section\">\r\n    <div class=\"search-container\" [class.rtl]=\"isRTL()\" [class.ltr]=\"!isRTL()\">\r\n      <div class=\"search-input-group\" [class.rtl]=\"isRTL()\" [class.ltr]=\"!isRTL()\">\r\n        <svg class=\"search-icon\" width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\">\r\n          <circle cx=\"11\" cy=\"11\" r=\"8\"></circle>\r\n          <path d=\"m21 21-4.35-4.35\"></path>\r\n        </svg>\r\n        <input \r\n          type=\"text\" \r\n          class=\"search-input\" \r\n          [placeholder]=\"translate('roles.search_permissions')\"\r\n          [value]=\"searchTerm()\"\r\n          (input)=\"onSearchChange($event.target.value)\"\r\n          (keyup.enter)=\"onSearchClick()\"\r\n        />\r\n        <button \r\n          *ngIf=\"searchTerm()\" \r\n          class=\"clear-search-btn\" \r\n          (click)=\"clearSearch()\"\r\n          [attr.aria-label]=\"translate('roles.clear_search')\"\r\n        >\r\n          <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\">\r\n            <line x1=\"18\" y1=\"6\" x2=\"6\" y2=\"18\"></line>\r\n            <line x1=\"6\" y1=\"6\" x2=\"18\" y2=\"18\"></line>\r\n          </svg>\r\n        </button>\r\n      </div>\r\n      <button class=\"btn btn-outline\" (click)=\"onSearchClick()\">\r\n        {{ translate('roles.search') }}\r\n      </button>\r\n    </div>\r\n  </div>\r\n\r\n  <!-- Permissions Table -->\r\n  <div class=\"table-container\">\r\n    <div class=\"table-header\">\r\n      <div class=\"table-title\">\r\n        <h3>{{ translate('roles.permissions.permissions_list') }}</h3>\r\n        <span class=\"count-badge\">{{ totalCount() }} {{ translate('roles.permissions_count') }}</span>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Loading State -->\r\n    <div *ngIf=\"loading()\" class=\"loading-container\">\r\n      <div class=\"loading-spinner\"></div>\r\n      <p>{{ translate('roles.loading_permissions') }}</p>\r\n    </div>\r\n\r\n    <!-- Empty State -->\r\n    <div *ngIf=\"!loading() && permissions().length === 0\" class=\"empty-state\">\r\n      <div class=\"empty-icon\">\r\n        <svg width=\"64\" height=\"64\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"1.5\">\r\n          <circle cx=\"12\" cy=\"12\" r=\"10\"></circle>\r\n          <line x1=\"12\" y1=\"8\" x2=\"12\" y2=\"12\"></line>\r\n          <line x1=\"12\" y1=\"16\" x2=\"12.01\" y2=\"16\"></line>\r\n        </svg>\r\n      </div>\r\n      <h3>{{ translate('roles.no_permissions_found') }}</h3>\r\n      <p>{{ translate('roles.no_permissions_description') }}</p>\r\n      <button class=\"btn btn-primary\" (click)=\"openAddForm()\">\r\n        <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\">\r\n          <line x1=\"12\" y1=\"5\" x2=\"12\" y2=\"19\"></line>\r\n          <line x1=\"5\" y1=\"12\" x2=\"19\" y2=\"12\"></line>\r\n        </svg>\r\n        {{ translate('roles.add_first_permission') }}\r\n      </button>\r\n    </div>\r\n\r\n    <!-- Permissions Table -->\r\n    <div *ngIf=\"!loading() && permissions().length > 0\" class=\"table-wrapper\">\r\n      <table class=\"permissions-table\">\r\n        <thead>\r\n          <tr>\r\n            <th>{{ translate('roles.permissions.permission_name') }}</th>\r\n            <th>{{ translate('roles.permissions.display_name') }}</th>\r\n            <th>{{ translate('roles.permissions.controller') }}</th>\r\n            <th>{{ translate('roles.permissions.action') }}</th>\r\n            <th>{{ translate('roles.permissions.status') }}</th>\r\n            <th>{{ translate('roles.permissions.created_date') }}</th>\r\n            <th>{{ translate('roles.actions') }}</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr *ngFor=\"let permission of permissions()\" class=\"permission-row\">\r\n            <td class=\"permission-name\">\r\n              <div class=\"permission-info\">\r\n                <h4>{{ permission.name }}</h4>\r\n                <span class=\"permission-id\">ID: {{ permission.id }}</span>\r\n              </div>\r\n            </td>\r\n            <td class=\"display-name\">\r\n              <span>{{ permission.displayName }}</span>\r\n            </td>\r\n            <td class=\"controller\">\r\n              <span class=\"controller-badge\">{{ permission.controller }}</span>\r\n            </td>\r\n            <td class=\"action\">\r\n              <span class=\"action-badge\">{{ permission.action }}</span>\r\n            </td>\r\n            <td class=\"status\">\r\n              <span class=\"status-badge\" [class.active]=\"permission.isActive\" [class.inactive]=\"!permission.isActive\">\r\n                {{ permission.isActive ? translate('roles.active') : translate('roles.inactive') }}\r\n              </span>\r\n            </td>\r\n            <td class=\"created-date\">\r\n              <span>{{ formatDate(permission.createdAt) }}</span>\r\n            </td>\r\n            <td class=\"actions\">\r\n              <div class=\"action-buttons\">\r\n                <button \r\n                  class=\"btn-icon btn-edit\" \r\n                  (click)=\"openEditForm(permission)\"\r\n                  [attr.aria-label]=\"translate('roles.permissions.edit_permission')\"\r\n                >\r\n                  <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\">\r\n                    <path d=\"M11 4H4a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h14a2 2 0 0 0 2-2v-7\"></path>\r\n                    <path d=\"M18.5 2.5a2.121 2.121 0 0 1 3 3L12 15l-4 1 1-4 9.5-9.5z\"></path>\r\n                  </svg>\r\n                </button>\r\n                <button \r\n                  class=\"btn-icon btn-delete\" \r\n                  (click)=\"openDeleteModal(permission)\"\r\n                  [attr.aria-label]=\"translate('roles.permissions.delete_permission')\"\r\n                >\r\n                  <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\">\r\n                    <polyline points=\"3,6 5,6 21,6\"></polyline>\r\n                    <path d=\"M19,6v14a2,2,0,0,1-2,2H7a2,2,0,0,1-2-2V6m3,0V4a2,2,0,0,1,2-2h4a2,2,0,0,1,2,2v6\"></path>\r\n                    <line x1=\"10\" y1=\"11\" x2=\"10\" y2=\"17\"></line>\r\n                    <line x1=\"14\" y1=\"11\" x2=\"14\" y2=\"17\"></line>\r\n                  </svg>\r\n                </button>\r\n              </div>\r\n            </td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n\r\n    <!-- Pagination -->\r\n    <div *ngIf=\"!loading() && permissions().length > 0\" class=\"pagination-container\">\r\n      <div class=\"pagination-info\">\r\n        <span>{{ translate('roles.showing') }} {{ (currentPage() - 1) * pageSize() + 1 }} {{ translate('roles.to') }} {{ Math.min(currentPage() * pageSize(), totalCount()) }} {{ translate('roles.of') }} {{ totalCount() }} {{ translate('roles.results') }}</span>\r\n        <div class=\"page-size-selector\">\r\n          <label>{{ translate('roles.show') }}:</label>\r\n          <select [value]=\"pageSize()\" (change)=\"onPageSizeChange($any($event.target).value)\">\r\n            <option value=\"5\">5</option>\r\n            <option value=\"10\">10</option>\r\n            <option value=\"20\">20</option>\r\n            <option value=\"50\">50</option>\r\n          </select>\r\n        </div>\r\n      </div>\r\n      \r\n      <div class=\"pagination-controls\">\r\n        <button \r\n          class=\"btn-pagination\" \r\n          [disabled]=\"currentPage() === 1\"\r\n          (click)=\"onPageChange(currentPage() - 1)\"\r\n        >\r\n          <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\">\r\n            <polyline points=\"15,18 9,12 15,6\"></polyline>\r\n          </svg>\r\n          {{ translate('roles.previous') }}\r\n        </button>\r\n        \r\n        <div class=\"page-numbers\">\r\n          <button \r\n            *ngFor=\"let page of pages\" \r\n            class=\"btn-page\"\r\n            [class.active]=\"page === currentPage()\"\r\n            (click)=\"onPageChange(page)\"\r\n          >\r\n            {{ page }}\r\n          </button>\r\n        </div>\r\n        \r\n        <button \r\n          class=\"btn-pagination\" \r\n          [disabled]=\"currentPage() === totalPages\"\r\n          (click)=\"onPageChange(currentPage() + 1)\"\r\n        >\r\n          {{ translate('roles.next') }}\r\n          <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\">\r\n            <polyline points=\"9,18 15,12 9,6\"></polyline>\r\n          </svg>\r\n        </button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <!-- Permission Form Modal -->\r\n  <div *ngIf=\"showForm()\" class=\"form-modal-overlay\" (click)=\"closeForm()\">\r\n    <div class=\"form-modal\" (click)=\"$event.stopPropagation()\">\r\n      <div class=\"form-modal-header\" [class.rtl]=\"isRTL()\" [class.ltr]=\"!isRTL()\">\r\n        <h3>{{ isEditMode() ? translate('roles.permissions.edit_permission') : translate('roles.permissions.add_new_permission') }}</h3>\r\n        <button class=\"close-btn\" (click)=\"closeForm()\">\r\n          <svg width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\">\r\n            <line x1=\"18\" y1=\"6\" x2=\"6\" y2=\"18\"></line>\r\n            <line x1=\"6\" y1=\"6\" x2=\"18\" y2=\"18\"></line>\r\n          </svg>\r\n        </button>\r\n      </div>\r\n      \r\n      <form [formGroup]=\"permissionForm\" (ngSubmit)=\"onSubmit()\" class=\"permission-form\">\r\n        <div class=\"form-grid\">\r\n          <div class=\"form-group\">\r\n            <label for=\"name\" class=\"form-label\">\r\n              {{ translate('roles.permissions.permission_name') }}\r\n              <span class=\"required\">*</span>\r\n            </label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"name\"\r\n              formControlName=\"name\"\r\n              class=\"form-input\"\r\n              [class.error]=\"isFieldInvalid('name')\"\r\n              [placeholder]=\"translate('roles.permission_name_placeholder')\"\r\n            />\r\n            <div *ngIf=\"isFieldInvalid('name')\" class=\"error-message\">\r\n              {{ getFieldError('name') }}\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"form-group\">\r\n            <label for=\"displayName\" class=\"form-label\">\r\n              {{ translate('roles.permissions.display_name') }}\r\n              <span class=\"required\">*</span>\r\n            </label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"displayName\"\r\n              formControlName=\"displayName\"\r\n              class=\"form-input\"\r\n              [class.error]=\"isFieldInvalid('displayName')\"\r\n              [placeholder]=\"translate('roles.display_name_placeholder')\"\r\n            />\r\n            <div *ngIf=\"isFieldInvalid('displayName')\" class=\"error-message\">\r\n              {{ getFieldError('displayName') }}\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"form-group\">\r\n            <label for=\"controller\" class=\"form-label\">\r\n              {{ translate('roles.permissions.controller') }}\r\n              <span class=\"required\">*</span>\r\n            </label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"controller\"\r\n              formControlName=\"controller\"\r\n              class=\"form-input\"\r\n              [class.error]=\"isFieldInvalid('controller')\"\r\n              [placeholder]=\"translate('roles.controller_placeholder')\"\r\n            />\r\n            <div *ngIf=\"isFieldInvalid('controller')\" class=\"error-message\">\r\n              {{ getFieldError('controller') }}\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"form-group\">\r\n            <label for=\"action\" class=\"form-label\">\r\n              {{ translate('roles.permissions.action') }}\r\n              <span class=\"required\">*</span>\r\n            </label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"action\"\r\n              formControlName=\"action\"\r\n              class=\"form-input\"\r\n              [class.error]=\"isFieldInvalid('action')\"\r\n              [placeholder]=\"translate('roles.action_placeholder')\"\r\n            />\r\n            <div *ngIf=\"isFieldInvalid('action')\" class=\"error-message\">\r\n              {{ getFieldError('action') }}\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"form-group full-width\">\r\n            <label for=\"description\" class=\"form-label\">\r\n              {{ translate('roles.description') }}\r\n              <span class=\"required\">*</span>\r\n            </label>\r\n            <textarea\r\n              id=\"description\"\r\n              formControlName=\"description\"\r\n              class=\"form-textarea\"\r\n              [class.error]=\"isFieldInvalid('description')\"\r\n              [placeholder]=\"translate('roles.description_placeholder')\"\r\n              rows=\"3\"\r\n            ></textarea>\r\n            <div *ngIf=\"isFieldInvalid('description')\" class=\"error-message\">\r\n              {{ getFieldError('description') }}\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"form-group\">\r\n            <label class=\"checkbox-label\">\r\n              <input\r\n                type=\"checkbox\"\r\n                formControlName=\"isActive\"\r\n                class=\"checkbox-input\"\r\n              />\r\n              <span class=\"checkbox-custom\"></span>\r\n              <span class=\"checkbox-text\">{{ translate('roles.active') }}</span>\r\n            </label>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"form-actions\">\r\n          <button\r\n            type=\"button\"\r\n            class=\"btn btn-secondary\"\r\n            (click)=\"closeForm()\"\r\n            [disabled]=\"saving()\"\r\n          >\r\n            {{ translate('roles.cancel') }}\r\n          </button>\r\n          <button\r\n            type=\"submit\"\r\n            class=\"btn btn-primary\"\r\n            [disabled]=\"permissionForm.invalid || saving()\"\r\n          >\r\n            <div *ngIf=\"saving()\" class=\"btn-loading\">\r\n              <div class=\"loading-spinner-small\"></div>\r\n              {{ translate('roles.saving') }}\r\n            </div>\r\n            <div *ngIf=\"!saving()\">\r\n              {{ isEditMode() ? translate('roles.save_changes') : translate('roles.save') }}\r\n            </div>\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  </div>\r\n\r\n  <!-- Confirmation Modal -->\r\n  <app-confirmation-modal\r\n    [data]=\"deleteModalData()\"\r\n    [isVisible]=\"showDeleteModal()\"\r\n    [isRTL]=\"isRTL()\"\r\n    (confirm)=\"onDeleteConfirm()\"\r\n    (cancel)=\"onDeleteCancel()\"\r\n  ></app-confirmation-modal>\r\n\r\n  <!-- Success Modal -->\r\n  <div *ngIf=\"showSuccessModal()\" class=\"success-modal\">\r\n    <div class=\"success-content\">\r\n      <div class=\"success-icon\">\r\n        <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\">\r\n          <path d=\"M22 11.08V12a10 10 0 1 1-5.93-9.14\"></path>\r\n          <polyline points=\"22,4 12,14.01 9,11.01\"></polyline>\r\n        </svg>\r\n      </div>\r\n      <p>{{ successMessage() }}</p>\r\n      <button class=\"close-success\" (click)=\"closeSuccessModal()\">\r\n        <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\">\r\n          <line x1=\"18\" y1=\"6\" x2=\"6\" y2=\"18\"></line>\r\n          <line x1=\"6\" y1=\"6\" x2=\"18\" y2=\"18\"></line>\r\n        </svg>\r\n      </button>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n", "import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { RolesListComponent } from './roles-list/roles-list.component';\r\nimport { RoleFormComponent } from './role-form/role-form.component';\r\nimport { RoleDetailsComponent } from './role-details/role-details.component';\r\nimport { PermissionsManagementComponent } from './permissions-management/permissions-management.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: RolesListComponent\r\n  },\r\n  {\r\n    path: 'add',\r\n    component: RoleFormComponent\r\n  },\r\n  {\r\n    path: ':roleId/edit',\r\n    component: RoleFormComponent\r\n  },\r\n  {\r\n    path: ':roleId/details',\r\n    component: RoleDetailsComponent\r\n  },\r\n  {\r\n    path: 'permissions',\r\n    component: PermissionsManagementComponent\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class RolesRoutingModule { }\r\n\r\n", "import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { HttpClientModule } from '@angular/common/http';\r\n\r\nimport { RolesRoutingModule } from './roles-routing.module';\r\nimport { RolesListComponent } from './roles-list/roles-list.component';\r\nimport { RoleFormComponent } from './role-form/role-form.component';\r\nimport { RoleDetailsComponent } from './role-details/role-details.component';\r\nimport { PermissionsManagementComponent } from './permissions-management/permissions-management.component';\r\nimport { ConfirmationModalComponent } from '../shared/confirmation-modal/confirmation-modal.component';\r\nimport { PermissionsAssignmentModalComponent } from '../shared/permissions-assignment-modal/permissions-assignment-modal.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    RolesListComponent,\r\n    RoleFormComponent,\r\n    RoleDetailsComponent,\r\n    PermissionsManagementComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    HttpClientModule,\r\n    RolesRoutingModule,\r\n    ConfirmationModalComponent,\r\n    PermissionsAssignmentModalComponent\r\n  ],\r\n  providers: []\r\n})\r\nexport class RolesModule { }\r\n\r\n"],
  "mappings": "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",
  "names": []
}
