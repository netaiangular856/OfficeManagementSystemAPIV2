{
  "version": 3,
  "sources": ["src/app/components/not-found/not-found.ts", "src/app/components/not-found/not-found.html", "src/app/components/not-found/not-found-routing-module.ts", "src/app/components/not-found/not-found-module.ts"],
  "sourcesContent": ["import { Component, OnInit } from '@angular/core';\r\nimport { Location } from '@angular/common';\r\nimport { Router } from '@angular/router';\r\nimport { TranslationService } from '../../services/translation.service';\r\nimport { LangService, Language } from '../../services/lang.service';\r\n\r\n@Component({\r\n  selector: 'app-not-found',\r\n  standalone: false,\r\n  templateUrl: './not-found.html',\r\n  styleUrl: './not-found.css'\r\n})\r\nexport class NotFound implements OnInit {\r\n  currentLang: Language = 'en';\r\n\r\n  constructor(\r\n    private location: Location,\r\n    private router: Router,\r\n    public translationService: TranslationService,\r\n    private langService: LangService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.currentLang = this.langService.getCurrentLang();\r\n  }\r\n\r\n  toggleLanguage(): void {\r\n    this.currentLang = this.currentLang === 'en' ? 'ar' : 'en';\r\n    this.langService.setLanguage(this.currentLang);\r\n  }\r\n\r\n  goHome(): void {\r\n    this.router.navigate(['/dashboard']);\r\n  }\r\n\r\n  goBack(): void {\r\n    this.location.back();\r\n  }\r\n\r\n  translate(key: string): string {\r\n    return this.translationService.translate(key);\r\n  }\r\n\r\n  isRTL(): boolean {\r\n    return this.translationService.isRTL();\r\n  }\r\n}\r\n", "<div class=\"not-found-container\" [class.rtl]=\"isRTL()\">\r\n  <!-- Language Toggle Button -->\r\n  <div class=\"language-toggle\">\r\n    <button class=\"lang-btn\" (click)=\"toggleLanguage()\">\r\n      <svg width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\">\r\n        <circle cx=\"12\" cy=\"12\" r=\"10\"></circle>\r\n        <line x1=\"2\" y1=\"12\" x2=\"22\" y2=\"12\"></line>\r\n        <path d=\"M12 2a15.3 15.3 0 0 1 4 10 15.3 15.3 0 0 1-4 10 15.3 15.3 0 0 1-4-10 15.3 15.3 0 0 1 4-10z\"></path>\r\n      </svg>\r\n      <span>{{ currentLang === 'en' ? 'العربية' : 'English' }}</span>\r\n    </button>\r\n  </div>\r\n\r\n  <!-- Main Content -->\r\n  <div class=\"content\">\r\n    <!-- 404 Icon -->\r\n    <div class=\"error-icon\">\r\n      <div class=\"search-icon\">\r\n        <div class=\"search-circle\"></div>\r\n        <div class=\"search-handle\"></div>\r\n        <div class=\"search-dot\"></div>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Error Number -->\r\n    <div class=\"error-number\">404</div>\r\n\r\n    <!-- Error Message -->\r\n    <div class=\"error-message\">\r\n      <h1 class=\"error-title\">{{ translate('not_found.title') }}</h1>\r\n      <p class=\"error-description\">\r\n        {{ translate('not_found.description') }}\r\n      </p>\r\n    </div>\r\n\r\n    <!-- Action Buttons -->\r\n    <div class=\"action-buttons\">\r\n      <button class=\"btn btn-primary\" (click)=\"goHome()\">\r\n        <svg width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\">\r\n          <path d=\"M3 9l9-7 9 7v11a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2z\"></path>\r\n          <polyline points=\"9,22 9,12 15,12 15,22\"></polyline>\r\n        </svg>\r\n        <span>{{ translate('not_found.back_to_earth') }}</span>\r\n      </button>\r\n      <button class=\"btn btn-secondary\" (click)=\"goBack()\">\r\n        <svg width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\">\r\n          <path d=\"M19 12H5M12 19l-7-7 7-7\"></path>\r\n        </svg>\r\n        <span>{{ translate('not_found.go_back') }}</span>\r\n      </button>\r\n    </div>\r\n  </div>\r\n</div>", "import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { NotFound } from './not-found';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: NotFound\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class NotFoundRoutingModule { }\r\n", "import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { NotFoundRoutingModule } from './not-found-routing-module';\r\nimport { NotFound } from './not-found';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    NotFound\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    NotFoundRoutingModule\r\n  ]\r\n})\r\nexport class NotFoundModule { }\r\n"],
  "mappings": "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",
  "names": []
}
