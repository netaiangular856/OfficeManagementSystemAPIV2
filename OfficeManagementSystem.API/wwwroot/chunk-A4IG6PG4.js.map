{
  "version": 3,
  "sources": ["src/app/services/profile.service.ts"],
  "sourcesContent": ["import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { environment } from '../../environments/environment';\r\n\r\nexport interface UserProfile {\r\n  id: string;\r\n  email: string;\r\n  firstName: string;\r\n  lastName: string;\r\n  phoneNumber: string;\r\n  departmentId: number | null;\r\n  departmentName: string | null;\r\n  imageUrl: string | null;\r\n  timeZone: string;\r\n  isActive: boolean;\r\n  createdAt: string;\r\n  updatedAt: string | null;\r\n  lastLoginAt: string;\r\n  roles: string[];\r\n}\r\n\r\nexport interface ProfileUpdateRequest {\r\n  firstName: string;\r\n  lastName: string;\r\n  phoneNumber: string;\r\n  newImage?: string;\r\n}\r\n\r\nexport interface UserUpdateRequest {\r\n  firstName: string;\r\n  lastName: string;\r\n  phoneNumber: string;\r\n  departmentId?: number;\r\n  timeZone?: string;\r\n}\r\n\r\nexport interface RoleUpdateRequest {\r\n  role: string;\r\n}\r\n\r\nexport interface DepartmentUpdateRequest {\r\n  departmentId: number;\r\n}\r\n\r\nexport interface ProfileResponse {\r\n  success: boolean;\r\n  message: string;\r\n  data: UserProfile;\r\n  errors: string[];\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ProfileService {\r\n  private baseUrl = environment.apiBaseUrl;\r\n\r\n  constructor(private http: HttpClient) {}\r\n\r\n  getProfile(): Observable<ProfileResponse> {\r\n    return this.http.get<ProfileResponse>(`${this.baseUrl}/Users/profile`);\r\n  }\r\n\r\n  updateProfile(profileData: ProfileUpdateRequest): Observable<ProfileResponse> {\r\n    return this.http.put<ProfileResponse>(`${this.baseUrl}/Users/profile`, profileData);\r\n  }\r\n\r\n  updateProfileWithFormData(formData: FormData): Observable<ProfileResponse> {\r\n    return this.http.put<ProfileResponse>(`${this.baseUrl}/Users/profile`, formData);\r\n  }\r\n\r\n  getUserById(userId: string): Observable<ProfileResponse> {\r\n    return this.http.get<ProfileResponse>(`${this.baseUrl}/Users/${userId}`);\r\n  }\r\n\r\n  updateUserById(userId: string, userData: UserUpdateRequest): Observable<ProfileResponse> {\r\n    return this.http.put<ProfileResponse>(`${this.baseUrl}/Users/${userId}`, userData);\r\n  }\r\n\r\n  updateUserRole(userId: string, role: string): Observable<any> {\r\n    return this.http.put(`${this.baseUrl}/Users/${userId}/role`, { role });\r\n  }\r\n\r\n  updateUserStatus(userId: string, status: boolean): Observable<any> {\r\n    return this.http.patch(`${this.baseUrl}/Users/${userId}/status`, { isActive: status });\r\n  }\r\n}\r\n"],
  "mappings": ";;;;;;;;;;;;AAuDM,IAAO,iBAAP,MAAO,gBAAc;EAGL;EAFZ,UAAU,YAAY;EAE9B,YAAoB,MAAgB;AAAhB,SAAA,OAAA;EAAmB;EAEvC,aAAU;AACR,WAAO,KAAK,KAAK,IAAqB,GAAG,KAAK,OAAO,gBAAgB;EACvE;EAEA,cAAc,aAAiC;AAC7C,WAAO,KAAK,KAAK,IAAqB,GAAG,KAAK,OAAO,kBAAkB,WAAW;EACpF;EAEA,0BAA0B,UAAkB;AAC1C,WAAO,KAAK,KAAK,IAAqB,GAAG,KAAK,OAAO,kBAAkB,QAAQ;EACjF;EAEA,YAAY,QAAc;AACxB,WAAO,KAAK,KAAK,IAAqB,GAAG,KAAK,OAAO,UAAU,MAAM,EAAE;EACzE;EAEA,eAAe,QAAgB,UAA2B;AACxD,WAAO,KAAK,KAAK,IAAqB,GAAG,KAAK,OAAO,UAAU,MAAM,IAAI,QAAQ;EACnF;EAEA,eAAe,QAAgB,MAAY;AACzC,WAAO,KAAK,KAAK,IAAI,GAAG,KAAK,OAAO,UAAU,MAAM,SAAS,EAAE,KAAI,CAAE;EACvE;EAEA,iBAAiB,QAAgB,QAAe;AAC9C,WAAO,KAAK,KAAK,MAAM,GAAG,KAAK,OAAO,UAAU,MAAM,WAAW,EAAE,UAAU,OAAM,CAAE;EACvF;;qCA/BW,iBAAc,mBAAA,UAAA,CAAA;EAAA;4EAAd,iBAAc,SAAd,gBAAc,WAAA,YAFb,OAAM,CAAA;;;sEAEP,gBAAc,CAAA;UAH1B;WAAW;MACV,YAAY;KACb;;;",
  "names": []
}
