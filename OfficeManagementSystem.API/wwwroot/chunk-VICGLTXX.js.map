{
  "version": 3,
  "sources": ["src/app/services/tasks.service.ts", "src/app/components/tasks/tasks.component.ts", "src/app/components/tasks/tasks.component.html", "src/app/components/tasks/my-tasks/my-tasks.component.ts", "src/app/components/tasks/my-tasks/my-tasks.component.html", "src/app/components/tasks/all-tasks/all-tasks.component.ts", "src/app/components/tasks/all-tasks/all-tasks.component.html", "src/app/components/tasks/tasks-routing-module.ts", "src/app/components/tasks/tasks-module.ts"],
  "sourcesContent": ["import { Injectable } from '@angular/core';\r\nimport { environment } from '../../environments/environment';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { Task, TasksRoot, TaskFeedback, TaskFeedbackResponse, EmployeeName, EmployeeNamesResponse } from '../models/tasks.model';\r\n\r\nexport interface CreateTaskRequest {\r\n  title: string;\r\n  description?: string;\r\n  assigneeUserId: string;\r\n  priority: number;\r\n  dueDate: string;\r\n  sourceType: number;\r\n  sourceId?: number;\r\n}\r\n\r\nexport interface UpdateTaskRequest extends CreateTaskRequest {}\r\n\r\nexport interface TaskStatusUpdate {\r\n  status: number;\r\n  note: string;\r\n}\r\n\r\nexport interface BulkStatusUpdate {\r\n  bulkCloseDto: {\r\n    taskIds: number[];\r\n    status: number;\r\n    note: string;\r\n  };\r\n}\r\n\r\nexport interface BulkReassignUpdate {\r\n  taskIds: number[];\r\n  newAssigneeUserId: string;\r\n  note: string;\r\n}\r\n\r\nexport interface TaskFeedbackRequest {\r\n  feedbackText: string;\r\n}\r\n\r\nexport interface TaskUpdate {\r\n  note: string;\r\n}\r\n\r\nexport interface TaskAttachment {\r\n  id: number;\r\n  fileName: string;\r\n  fileType: string;\r\n  description?: string;\r\n  uploadedAt: string;\r\n  uploadedByName: string;\r\n  fileSize?: number;\r\n}\r\n\r\nexport interface TaskUpdateItem {\r\n  id: number;\r\n  note: string;\r\n  createdByName: string;\r\n  createdAt: string;\r\n}\r\n\r\nexport interface TasksOverview {\r\n  totalTasks: number;\r\n  completedTasks: number;\r\n  pendingTasks: number;\r\n  overdueTasks: number;\r\n  completionRate: number;\r\n  statusDistribution: StatusDistribution[];\r\n  priorityDistribution: PriorityDistribution[];\r\n}\r\n\r\nexport interface ManagerTasksOverview {\r\n  totalTasks: number;\r\n  completedTasks: number;\r\n  pendingTasks: number;\r\n  overdueTasks: number;\r\n  completionRate: number;\r\n  statusDistribution: StatusDistribution[];\r\n  priorityDistribution: PriorityDistribution[];\r\n}\r\n\r\nexport interface StatusDistribution {\r\n  status: string;\r\n  count: number;\r\n  percentage: number;\r\n}\r\n\r\nexport interface PriorityDistribution {\r\n  priority: string;\r\n  count: number;\r\n  percentage: number;\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class TasksService {\r\n  private apiUrl = `${environment.apiBaseUrl}/Tasks`;\r\n  \r\n  constructor(private http: HttpClient) {}\r\n\r\n  getAllTasks(page: number = 1, pageSize: number = 10): Observable<TasksRoot> {\r\n    return this.http.get<TasksRoot>(`${this.apiUrl}?page=${page}&pageSize=${pageSize}`);\r\n  }\r\n\r\n  getAllTasksForCounting(): Observable<TasksRoot> {\r\n    // Get all tasks without pagination for counting by status\r\n    return this.http.get<TasksRoot>(`${this.apiUrl}?page=1&pageSize=1000`);\r\n  }\r\n\r\n  getTasksOverview(): Observable<TasksOverview> {\r\n    return this.http.get<TasksOverview>(`${environment.apiBaseUrl}/Dashboard/tasks/overview`);\r\n  }\r\n\r\n  getManagerTasksOverview(): Observable<ManagerTasksOverview> {\r\n    return this.http.get<ManagerTasksOverview>(`${environment.apiBaseUrl}/Dashboard/tasks/manager-overview`);\r\n  }\r\n\r\n  getTaskById(id: number): Observable<any> {\r\n    return this.http.get<any>(`${this.apiUrl}/${id}`);\r\n  }\r\n\r\n  createTask(task: CreateTaskRequest): Observable<any> {\r\n    return this.http.post<any>(this.apiUrl, task);\r\n  }\r\n\r\n  updateTask(id: number, task: UpdateTaskRequest): Observable<any> {\r\n    return this.http.put<any>(`${this.apiUrl}/${id}`, task);\r\n  }\r\n\r\n  deleteTask(id: number): Observable<any> {\r\n    return this.http.delete<any>(`${this.apiUrl}/${id}`);\r\n  }\r\n\r\n  updateTaskStatus(id: number, statusUpdate: TaskStatusUpdate): Observable<any> {\r\n    return this.http.post<any>(`${this.apiUrl}/${id}/status`, statusUpdate);\r\n  }\r\n\r\n  bulkUpdateStatus(bulkUpdate: BulkStatusUpdate): Observable<any> {\r\n    return this.http.post<any>(`${this.apiUrl}/bulk/status`, bulkUpdate);\r\n  }\r\n\r\n  bulkReassign(bulkReassign: BulkReassignUpdate): Observable<any> {\r\n    return this.http.post<any>(`${this.apiUrl}/bulk/reassign`, bulkReassign);\r\n  }\r\n\r\n  getTaskUpdates(id: number): Observable<any> {\r\n    return this.http.get<any>(`${this.apiUrl}/${id}/updates`);\r\n  }\r\n\r\n  addTaskUpdate(id: number, update: TaskUpdate): Observable<any> {\r\n    return this.http.post<any>(`${this.apiUrl}/${id}/updates`, update);\r\n  }\r\n\r\n  getTaskAttachments(id: number): Observable<any> {\r\n    return this.http.get<any>(`${this.apiUrl}/${id}/attachments`);\r\n  }\r\n\r\n  addTaskAttachment(id: number, attachment: FormData): Observable<any> {\r\n    return this.http.post<any>(`${this.apiUrl}/${id}/attachments`, attachment);\r\n  }\r\n\r\n  deleteAttachment(taskId: number, attachmentId: number): Observable<any> {\r\n    return this.http.delete<any>(`${this.apiUrl}/${taskId}/attachments/${attachmentId}`);\r\n  }\r\n\r\n  // Employee tasks\r\n  getEmployeeTasks(): Observable<TasksRoot> {\r\n    return this.http.get<TasksRoot>(`${this.apiUrl}/employee-tasks`);\r\n  }\r\n\r\n  // Feedback functionality\r\n  submitTaskFeedback(taskId: number, feedback: TaskFeedbackRequest): Observable<any> {\r\n    return this.http.post<any>(`${this.apiUrl}/${taskId}/feedback`, feedback);\r\n  }\r\n\r\n  getTaskFeedback(taskId: number): Observable<TaskFeedbackResponse> {\r\n    return this.http.get<TaskFeedbackResponse>(`${this.apiUrl}/${taskId}/feedback`);\r\n  }\r\n\r\n  // Bulk reassignment\r\n  bulkReassignTasks(bulkReassign: BulkReassignUpdate): Observable<any> {\r\n    return this.http.post<any>(`${this.apiUrl}/bulk/reassign`, bulkReassign);\r\n  }\r\n\r\n  // Get employee names for reassignment\r\n  getEmployeeNames(): Observable<EmployeeNamesResponse> {\r\n    return this.http.get<EmployeeNamesResponse>(`${environment.apiBaseUrl}/Employees/names`);\r\n  }\r\n\r\n  // Get all tasks with filters (new endpoint)\r\n  getAllTasksWithFilters(\r\n    page: number = 1, \r\n    pageSize: number = 10,\r\n    status?: number,\r\n    dueDateFrom?: string,\r\n    dueDateTo?: string\r\n  ): Observable<TasksRoot> {\r\n    let params = `page=${page}&pageSize=${pageSize}`;\r\n    \r\n    if (status !== undefined) {\r\n      params += `&status=${status}`;\r\n    }\r\n    if (dueDateFrom) {\r\n      params += `&dueDateFrom=${dueDateFrom}`;\r\n    }\r\n    if (dueDateTo) {\r\n      params += `&dueDateTo=${dueDateTo}`;\r\n    }\r\n    \r\n    return this.http.get<TasksRoot>(`${environment.apiBaseUrl}/Tasks/all?${params}`);\r\n  }\r\n}\r\n", "import { Component, OnInit, ViewChild, ChangeDetectorRef } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule, FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { TasksService, CreateTaskRequest, UpdateTaskRequest, TaskStatusUpdate, BulkStatusUpdate, BulkReassignUpdate, TaskUpdate, TasksOverview, ManagerTasksOverview } from '../../services/tasks.service';\r\nimport { UsersService } from '../../services/users.service';\r\nimport { TranslationService } from '../../services/translation.service';\r\nimport { LangService } from '../../services/lang.service';\r\nimport { AuthService } from '../../services/auth.service';\r\nimport { ConfirmationModalComponent } from '../shared/confirmation-modal/confirmation-modal.component';\r\nimport { Task, TasksRoot } from '../../models/tasks.model';\r\nimport { User } from '../../models/user.model';\r\nimport { TaskAttachment, TaskUpdateItem } from '../../services/tasks.service';\r\n\r\n@Component({\r\n  selector: 'app-tasks',\r\n  standalone: false,\r\n  templateUrl: './tasks.component.html',\r\n  styleUrls: ['./tasks.component.css']\r\n})\r\nexport class TasksComponent implements OnInit {\r\n  @ViewChild('confirmationModal') confirmationModal!: ConfirmationModalComponent;\r\n\r\n  // Data\r\n  tasks: Task[] = [];\r\n  allTasksForCounting: Task[] = []; // Store all tasks for status counting\r\n  tasksOverview: TasksOverview | null = null;\r\n  managerTasksOverview: ManagerTasksOverview | null = null;\r\n  users: Array<{ id: string; name: string; departmentName: string }> = [];\r\n  directEmployees: Array<{ id: string; name: string; departmentName: string }> = [];\r\n  \r\n  // User role\r\n  isManager = false;\r\n  \r\n  // Language\r\n  currentLang = 'en';\r\n  \r\n  // UI state\r\n  selectedTasks: Set<number> = new Set();\r\n  isLoading = false;\r\n  showBulkToolbar = false;\r\n  \r\n  // Server-side pagination state\r\n  currentPage = 1;\r\n  pageSize = 10; // Small page size to force pagination\r\n  totalCount = 0;\r\n  totalPages = 1;\r\n  pageSizeOptions = [5, 10, 15, 20];\r\n  \r\n  // Custom pagination for better column distribution\r\n  allTasks: Task[] = []; // Store all tasks for custom pagination\r\n  \r\n  // Modal visibility\r\n  showAddTaskModal = false;\r\n  showEditTaskModal = false;\r\n  showTaskDetailsModal = false;\r\n  showStatusUpdateModal = false;\r\n  showReassignModal = false;\r\n  showAddUpdateModal = false;\r\n  showBulkStatusModal = false;\r\n  showBulkReassignModal = false;\r\n  \r\n  // Current task and details\r\n  currentTask: Task | null = null;\r\n  currentTaskDetails: Task | null = null;\r\n  currentTaskAttachments: TaskAttachment[] = [];\r\n  currentTaskUpdates: TaskUpdateItem[] = [];\r\n  currentTaskFeedback: any[] = [];\r\n  \r\n  // File handling\r\n  selectedFiles: File[] = [];\r\n  \r\n  // Forms\r\n  addTaskForm!: FormGroup;\r\n  editTaskForm!: FormGroup;\r\n  statusUpdateForm!: FormGroup;\r\n  reassignForm!: FormGroup;\r\n  addUpdateForm!: FormGroup;\r\n  bulkStatusForm!: FormGroup;\r\n  bulkReassignForm!: FormGroup;\r\n  \r\n  // Status mapping\r\n  readonly STATUS_MAP = {\r\n    0: 'new',\r\n    1: 'inProgress', \r\n    2: 'done',\r\n    3: 'stopped',\r\n    4: 'late',\r\n    5: 'returned',\r\n    6: 'review'\r\n  };\r\n  \r\n  readonly PRIORITY_MAP = {\r\n    1: 'high',\r\n    2: 'medium', \r\n    3: 'low'\r\n  };\r\n\r\n  constructor(\r\n    private tasksService: TasksService,\r\n    private usersService: UsersService,\r\n    private translationService: TranslationService,\r\n    private langService: LangService,\r\n    private authService: AuthService,\r\n    private fb: FormBuilder,\r\n    private cdr: ChangeDetectorRef\r\n  ) {\r\n    this.initializeForms();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.checkUserRole();\r\n    this.loadData();\r\n    this.langService.currentLang$.subscribe(lang => {\r\n      this.currentLang = lang;\r\n      this.cdr.detectChanges();\r\n    });\r\n  }\r\n\r\n  private initializeForms() {\r\n    this.addTaskForm = this.fb.group({\r\n      title: ['', [Validators.required, Validators.maxLength(30)]],\r\n      description: [''],\r\n      assigneeUserId: ['', Validators.required],\r\n      priority: ['', Validators.required],\r\n      dueDate: ['', Validators.required],\r\n      sourceType: [0]\r\n    });\r\n\r\n    this.editTaskForm = this.fb.group({\r\n      title: ['', [Validators.required, Validators.maxLength(40)]],\r\n      description: [''],\r\n      assigneeUserId: ['', Validators.required],\r\n      priority: ['', Validators.required],\r\n      dueDate: ['', Validators.required],\r\n      sourceType: [0]\r\n    });\r\n\r\n    this.statusUpdateForm = this.fb.group({\r\n      status: ['', Validators.required],\r\n      note: [''] // Made optional for status update\r\n    });\r\n\r\n    this.reassignForm = this.fb.group({\r\n      newAssigneeUserId: ['', Validators.required],\r\n      note: [''] // Made optional for reassign\r\n    });\r\n\r\n    this.addUpdateForm = this.fb.group({\r\n      note: ['', Validators.required]\r\n    });\r\n\r\n    this.bulkStatusForm = this.fb.group({\r\n      status: ['', Validators.required],\r\n      note: [''] // Made optional for bulk status update\r\n    });\r\n\r\n    this.bulkReassignForm = this.fb.group({\r\n      newAssigneeUserId: ['', Validators.required],\r\n      note: [''] // Made optional for bulk reassign\r\n    });\r\n  }\r\n\r\n  private async loadData() {\r\n    this.isLoading = true;\r\n    try {\r\n      await Promise.all([\r\n        this.loadTasksOverview(),\r\n        this.loadTasks(),\r\n        this.loadAllTasksForCounting(),\r\n        this.loadUsers(),\r\n        this.loadDirectEmployees()\r\n      ]);\r\n    } catch (error) {\r\n      console.error('Error loading data:', error);\r\n    } finally {\r\n      this.isLoading = false;\r\n    }\r\n  }\r\n\r\n  private checkUserRole() {\r\n    const currentUser = this.authService.getCurrentUser();\r\n    if (currentUser && currentUser.roles) {\r\n      this.isManager = currentUser.roles.includes('Manager') || currentUser.roles.includes('manager');\r\n    }\r\n  }\r\n\r\n  private async loadTasksOverview() {\r\n    try {\r\n      if (this.isManager) {\r\n        const overview = await this.tasksService.getManagerTasksOverview().toPromise();\r\n        this.managerTasksOverview = overview || null;\r\n      } else {\r\n        const overview = await this.tasksService.getTasksOverview().toPromise();\r\n        this.tasksOverview = overview || null;\r\n      }\r\n    } catch (error) {\r\n      console.error('Error loading tasks overview:', error);\r\n      this.tasksOverview = null;\r\n      this.managerTasksOverview = null;\r\n    }\r\n  }\r\n\r\n  private async loadTasks() {\r\n    console.log('Loading tasks with page:', this.currentPage, 'pageSize:', this.pageSize);\r\n    return new Promise<void>((resolve, reject) => {\r\n      this.tasksService.getAllTasks(this.currentPage, this.pageSize).subscribe({\r\n        next: (response) => {\r\n          console.log('Tasks API response:', response);\r\n          if (response.success && response.data?.items) {\r\n            this.tasks = response.data.items;\r\n            this.totalCount = response.data.totalCount || 0;\r\n            this.totalPages = Math.ceil(this.totalCount / this.pageSize);\r\n            \r\n            // Store all tasks for custom pagination\r\n            this.allTasks = response.data.items;\r\n            console.log('Tasks loaded successfully:', this.tasks.length, 'tasks');\r\n          } else {\r\n            console.log('No tasks found or API error:', response);\r\n          }\r\n          resolve();\r\n        },\r\n        error: (error) => {\r\n          console.error('Error loading tasks:', error);\r\n          reject(error);\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  private async loadAllTasksForCounting() {\r\n    console.log('Loading all tasks for counting...');\r\n    return new Promise<void>((resolve, reject) => {\r\n      this.tasksService.getAllTasksForCounting().subscribe({\r\n        next: (response) => {\r\n          console.log('All tasks for counting response:', response);\r\n          if (response.success && response.data?.items) {\r\n            this.allTasksForCounting = response.data.items;\r\n            console.log('All tasks for counting loaded:', this.allTasksForCounting.length, 'tasks');\r\n          } else {\r\n            console.log('No tasks found for counting or API error:', response);\r\n          }\r\n          resolve();\r\n        },\r\n        error: (error) => {\r\n          console.error('Error loading all tasks for counting:', error);\r\n          reject(error);\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n\r\n  private async loadUsers() {\r\n    return new Promise<void>((resolve, reject) => {\r\n      this.usersService.getUserNames().subscribe({\r\n        next: (users) => {\r\n          this.users = users;\r\n          resolve();\r\n        },\r\n        error: reject\r\n      });\r\n    });\r\n  }\r\n\r\n  private async loadDirectEmployees() {\r\n    return new Promise<void>((resolve, reject) => {\r\n      this.usersService.getDirectEmployees().subscribe({\r\n        next: (employees) => {\r\n          this.directEmployees = employees;\r\n          resolve();\r\n        },\r\n        error: reject\r\n      });\r\n    });\r\n  }\r\n\r\n  // Task grouping by status - show max 5 tasks per column with custom pagination\r\n  getTasksByStatus(status: number): Task[] {\r\n    // Get all tasks of this status from all loaded data\r\n    const allStatusTasks = this.allTasks.filter(task => task.status === status);\r\n    \r\n    // Calculate pagination for this specific status\r\n    const tasksPerPage = 5; // 5 tasks per column per page\r\n    const startIndex = (this.currentPage - 1) * tasksPerPage;\r\n    const endIndex = startIndex + tasksPerPage;\r\n    \r\n    // Return the tasks for this status on the current page\r\n    return allStatusTasks.slice(startIndex, endIndex);\r\n  }\r\n\r\n  // Task selection\r\n  toggleTaskSelection(taskId: number) {\r\n    if (this.selectedTasks.has(taskId)) {\r\n      this.selectedTasks.delete(taskId);\r\n    } else {\r\n      this.selectedTasks.add(taskId);\r\n    }\r\n    this.updateBulkToolbar();\r\n  }\r\n\r\n  selectAllTasks() {\r\n    if (this.selectedTasks.size === this.tasks.length) {\r\n      this.selectedTasks.clear();\r\n    } else {\r\n      this.tasks.forEach(task => this.selectedTasks.add(task.id));\r\n    }\r\n    this.updateBulkToolbar();\r\n  }\r\n\r\n  // Custom pagination methods for column-based distribution\r\n  goToPage(page: number) {\r\n    if (page >= 1 && page <= this.getMaxPagesForAnyStatus() && page !== this.currentPage) {\r\n      this.currentPage = page;\r\n      // No need to reload from server, just update the display\r\n    }\r\n  }\r\n  \r\n  getMaxPagesForAnyStatus(): number {\r\n    // Find the status with the most tasks to determine total pages\r\n    const maxTasks = Math.max(\r\n      this.getStatusTaskCount(0), // New\r\n      this.getStatusTaskCount(1), // In Progress\r\n      this.getStatusTaskCount(2), // Done\r\n      this.getStatusTaskCount(3), // Stopped\r\n      this.getStatusTaskCount(4), // Late\r\n      this.getStatusTaskCount(5), // Returned\r\n      this.getStatusTaskCount(6)  // Review\r\n    );\r\n    \r\n    return Math.ceil(maxTasks / 5); // 5 tasks per column per page\r\n  }\r\n\r\n  onPageSizeChange(event: Event) {\r\n    const target = event.target as HTMLSelectElement;\r\n    const newPageSize = +target.value;\r\n    if (newPageSize !== this.pageSize) {\r\n      this.pageSize = newPageSize;\r\n      this.currentPage = 1; // Reset to first page\r\n      this.loadTasks();\r\n    }\r\n  }\r\n\r\n  getPageNumbers(): number[] {\r\n    const pages: number[] = [];\r\n    const maxPages = this.getMaxPagesForAnyStatus();\r\n    const startPage = Math.max(1, this.currentPage - 2);\r\n    const endPage = Math.min(maxPages, this.currentPage + 2);\r\n    \r\n    for (let i = startPage; i <= endPage; i++) {\r\n      pages.push(i);\r\n    }\r\n    return pages;\r\n  }\r\n\r\n  getStartIndex(): number {\r\n    return (this.currentPage - 1) * 5 + 1; // 5 tasks per column per page\r\n  }\r\n\r\n  getEndIndex(): number {\r\n    const maxTasks = Math.max(\r\n      this.getStatusTaskCount(0),\r\n      this.getStatusTaskCount(1),\r\n      this.getStatusTaskCount(2),\r\n      this.getStatusTaskCount(3),\r\n      this.getStatusTaskCount(4),\r\n      this.getStatusTaskCount(5),\r\n      this.getStatusTaskCount(6)\r\n    );\r\n    return Math.min(this.currentPage * 5, maxTasks);\r\n  }\r\n\r\n  getTotalTasks(): number {\r\n    return this.totalCount;\r\n  }\r\n\r\n  getStatusTaskCount(status: number): number {\r\n    // Use allTasksForCounting to get accurate counts across all pages\r\n    return this.allTasksForCounting.filter(task => task.status === status).length;\r\n  }\r\n\r\n  getStatusTasksOnCurrentPage(status: number): number {\r\n    // Count tasks of this status on current page (max 5)\r\n    return this.tasks.filter(task => task.status === status).length;\r\n  }\r\n\r\n  getStatusTasksOnOtherPages(status: number): number {\r\n    // Calculate how many tasks of this status are on other pages\r\n    const totalForStatus = this.getStatusTaskCount(status);\r\n    const onCurrentPage = this.getStatusTasksOnCurrentPage(status);\r\n    return Math.max(0, totalForStatus - onCurrentPage);\r\n  }\r\n\r\n\r\n  private updateBulkToolbar() {\r\n    this.showBulkToolbar = this.selectedTasks.size > 0;\r\n  }\r\n\r\n  // Modal management\r\n  private closeAllModals() {\r\n    this.showAddTaskModal = false;\r\n    this.showEditTaskModal = false;\r\n    this.showTaskDetailsModal = false;\r\n    this.showStatusUpdateModal = false;\r\n    this.showReassignModal = false;\r\n    this.showAddUpdateModal = false;\r\n    this.showBulkStatusModal = false;\r\n    this.showBulkReassignModal = false;\r\n    this.updateBodyClass();\r\n  }\r\n\r\n  private canOpenModal(): boolean {\r\n    return !this.showAddTaskModal && \r\n           !this.showEditTaskModal && \r\n           !this.showStatusUpdateModal && \r\n           !this.showReassignModal && \r\n           !this.showAddUpdateModal && \r\n           !this.showBulkStatusModal && \r\n           !this.showBulkReassignModal;\r\n  }\r\n\r\n  private updateBodyClass() {\r\n    const hasOpenModal = this.showAddTaskModal || \r\n                        this.showEditTaskModal || \r\n                        this.showTaskDetailsModal || \r\n                        this.showStatusUpdateModal || \r\n                        this.showReassignModal || \r\n                        this.showAddUpdateModal || \r\n                        this.showBulkStatusModal || \r\n                        this.showBulkReassignModal;\r\n    \r\n    if (hasOpenModal) {\r\n      document.body.classList.add('modal-open');\r\n    } else {\r\n      document.body.classList.remove('modal-open');\r\n    }\r\n  }\r\n\r\n  // Task actions\r\n  openAddTaskModal() {\r\n    if (this.canOpenModal()) {\r\n      this.closeAllModals();\r\n      this.showAddTaskModal = true;\r\n      this.addTaskForm.reset();\r\n      this.updateBodyClass();\r\n    }\r\n  }\r\n\r\n  openEditTaskModal(task: Task) {\r\n    if (this.canOpenModal()) {\r\n      this.closeAllModals();\r\n      this.currentTask = task;\r\n      \r\n      // Populate the edit form with task data\r\n      this.editTaskForm.patchValue({\r\n        title: task.title,\r\n        description: task.description,\r\n        assigneeUserId: task.assigneeUserId,\r\n        priority: task.priority,\r\n        dueDate: this.formatDateForInput(task.dueDate),\r\n        sourceType: task.sourceType\r\n      });\r\n      \r\n      this.showEditTaskModal = true;\r\n      this.updateBodyClass();\r\n    }\r\n  }\r\n\r\n  openTaskDetailsModal(task: Task) {\r\n    if (this.canOpenModal()) {\r\n      this.closeAllModals();\r\n      this.currentTask = task;\r\n      this.showTaskDetailsModal = true;\r\n      this.loadTaskAttachments(task.id);\r\n      this.loadTaskUpdates(task.id);\r\n      this.loadTaskFeedback(task.id);\r\n      this.updateBodyClass();\r\n    }\r\n  }\r\n\r\n  openStatusUpdateModal(task: Task) {\r\n    if (this.canOpenModal()) {\r\n      this.closeAllModals();\r\n      this.currentTask = task;\r\n      this.showStatusUpdateModal = true;\r\n      this.statusUpdateForm.reset();\r\n      this.updateBodyClass();\r\n    }\r\n  }\r\n\r\n  openReassignModal(task: Task) {\r\n    if (this.canOpenModal()) {\r\n      this.closeAllModals();\r\n      this.currentTask = task;\r\n      this.showReassignModal = true;\r\n      this.reassignForm.reset();\r\n      this.updateBodyClass();\r\n    }\r\n  }\r\n\r\n  openAddUpdateModal(task: Task) {\r\n    if (this.canOpenModal()) {\r\n      this.closeAllModals();\r\n      this.currentTask = task;\r\n      this.showAddUpdateModal = true;\r\n      this.addUpdateForm.reset();\r\n      this.updateBodyClass();\r\n    }\r\n  }\r\n\r\n  openBulkStatusModal() {\r\n    if (this.canOpenModal()) {\r\n      this.closeAllModals();\r\n      this.showBulkStatusModal = true;\r\n      this.bulkStatusForm.reset();\r\n      this.updateBodyClass();\r\n    }\r\n  }\r\n\r\n  openBulkReassignModal() {\r\n    if (this.canOpenModal()) {\r\n      this.closeAllModals();\r\n      this.showBulkReassignModal = true;\r\n      this.bulkReassignForm.reset();\r\n      this.updateBodyClass();\r\n    }\r\n  }\r\n\r\n  private async loadTaskAttachments(taskId: number) {\r\n    return new Promise<void>((resolve, reject) => {\r\n      this.tasksService.getTaskAttachments(taskId).subscribe({\r\n        next: (response) => {\r\n          if (response.success && response.data) {\r\n            this.currentTaskAttachments = response.data;\r\n          }\r\n          resolve();\r\n        },\r\n        error: reject\r\n      });\r\n    });\r\n  }\r\n\r\n  private async loadTaskUpdates(taskId: number) {\r\n    return new Promise<void>((resolve, reject) => {\r\n      this.tasksService.getTaskUpdates(taskId).subscribe({\r\n        next: (response) => {\r\n          if (response.success && response.data) {\r\n            this.currentTaskUpdates = response.data;\r\n          }\r\n          resolve();\r\n        },\r\n        error: reject\r\n      });\r\n    });\r\n  }\r\n\r\n  private async loadTaskFeedback(taskId: number) {\r\n    return new Promise<void>((resolve, reject) => {\r\n      this.tasksService.getTaskFeedback(taskId).subscribe({\r\n        next: (response) => {\r\n          if (response.success && response.data) {\r\n            this.currentTaskFeedback = response.data;\r\n          } else {\r\n            this.currentTaskFeedback = [];\r\n          }\r\n          resolve();\r\n        },\r\n        error: (error) => {\r\n          console.error('Error loading task feedback:', error);\r\n          this.currentTaskFeedback = [];\r\n          resolve();\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  // Form submissions\r\n  async onSubmitAddTask() {\r\n    if (this.addTaskForm.valid) {\r\n      try {\r\n        const formValue = this.addTaskForm.value;\r\n        \r\n        // Ensure priority is sent as a number\r\n        const taskData = {\r\n          title: formValue.title,\r\n          description: formValue.description || '',\r\n          assigneeUserId: formValue.assigneeUserId,\r\n          priority: Number(formValue.priority),\r\n          dueDate: formValue.dueDate,\r\n          sourceType: Number(formValue.sourceType || 0)\r\n        };\r\n        \r\n        console.log('Submitting task data:', taskData);\r\n        \r\n        const response = await this.tasksService.createTask(taskData).toPromise();\r\n        \r\n        if (response && response.success) {\r\n          await this.loadTasks();\r\n          await this.loadAllTasksForCounting();\r\n          this.closeModal('showAddTaskModal');\r\n          \r\n          // Show success confirmation\r\n          if (this.confirmationModal) {\r\n            const modalData = {\r\n              title: this.translate('tasks.dialogs.createSuccess'),\r\n              message: this.translate('tasks.dialogs.createSuccess'),\r\n              confirmText: this.translate('common.ok'),\r\n              cancelText: this.translate('common.close'),\r\n              type: 'info' as const\r\n            };\r\n            this.confirmationModal.show(modalData);\r\n            \r\n            // Handle the confirmation\r\n            const subscription = this.confirmationModal.confirm.subscribe(() => {\r\n              subscription.unsubscribe();\r\n            });\r\n          }\r\n        }\r\n      } catch (error) {\r\n        console.error('Error creating task:', error);\r\n        this.showErrorMessage(this.translate('tasks.dialogs.createError'));\r\n      }\r\n    }\r\n  }\r\n\r\n  async onSubmitEditTask() {\r\n    if (this.editTaskForm.valid && this.currentTask) {\r\n      try {\r\n        const formValue = this.editTaskForm.value;\r\n        \r\n        // Ensure all fields are properly formatted\r\n        const taskData = {\r\n          title: formValue.title,\r\n          description: formValue.description || '',\r\n          assigneeUserId: formValue.assigneeUserId,\r\n          priority: Number(formValue.priority),\r\n          dueDate: formValue.dueDate,\r\n          sourceType: Number(formValue.sourceType || 0)\r\n        };\r\n        \r\n        console.log('Updating task data:', taskData);\r\n        \r\n        await this.tasksService.updateTask(this.currentTask.id, taskData).toPromise();\r\n        await this.loadTasks();\r\n        await this.loadAllTasksForCounting();\r\n        this.closeModal('showEditTaskModal');\r\n        \r\n        // Show success confirmation\r\n        if (this.confirmationModal) {\r\n          const modalData = {\r\n            title: this.translate('tasks.dialogs.updateSuccess'),\r\n            message: this.translate('tasks.dialogs.updateSuccess'),\r\n            confirmText: this.translate('common.ok'),\r\n            cancelText: this.translate('common.close'),\r\n            type: 'info' as const\r\n          };\r\n          this.confirmationModal.show(modalData);\r\n          \r\n          // Handle the confirmation\r\n          const subscription = this.confirmationModal.confirm.subscribe(() => {\r\n            subscription.unsubscribe();\r\n          });\r\n        }\r\n      } catch (error) {\r\n        console.error('Error updating task:', error);\r\n        this.showErrorMessage(this.translate('tasks.dialogs.updateError'));\r\n      }\r\n    }\r\n  }\r\n\r\n  // Task actions\r\n  async deleteTask(task: Task) {\r\n    if (!this.confirmationModal) {\r\n      console.error('Confirmation modal not initialized');\r\n      return;\r\n    }\r\n\r\n    const modalData = {\r\n      title: this.translate('tasks.dialogs.confirmDelete'),\r\n      message: this.translate('tasks.dialogs.confirmDelete'),\r\n      confirmText: this.translate('common.delete'),\r\n      cancelText: this.translate('common.cancel'),\r\n      type: 'delete' as const\r\n    };\r\n\r\n    this.confirmationModal.show(modalData);\r\n    \r\n    // Handle confirm and cancel events\r\n    const confirmSubscription = this.confirmationModal.confirm.subscribe(async () => {\r\n      try {\r\n        await this.tasksService.deleteTask(task.id).toPromise();\r\n        await this.loadTasks();\r\n        await this.loadAllTasksForCounting();\r\n        \r\n        // Close task details modal if it's open\r\n        if (this.showTaskDetailsModal && this.currentTask?.id === task.id) {\r\n          this.closeModal('showTaskDetailsModal');\r\n        }\r\n        \r\n        // Show success message\r\n        this.showSuccessMessage(this.translate('tasks.dialogs.deleteSuccess'));\r\n        \r\n        // Clean up subscriptions\r\n        confirmSubscription.unsubscribe();\r\n        cancelSubscription.unsubscribe();\r\n      } catch (error) {\r\n        console.error('Error deleting task:', error);\r\n        this.showErrorMessage(this.translate('tasks.dialogs.deleteError'));\r\n        \r\n        // Clean up subscriptions\r\n        confirmSubscription.unsubscribe();\r\n        cancelSubscription.unsubscribe();\r\n      }\r\n    });\r\n\r\n    const cancelSubscription = this.confirmationModal.cancel.subscribe(() => {\r\n      // Just clean up subscriptions when cancelled\r\n      confirmSubscription.unsubscribe();\r\n      cancelSubscription.unsubscribe();\r\n    });\r\n  }\r\n\r\n  // Utility methods\r\n  translate(key: string): string {\r\n    return this.translationService.translate(key);\r\n  }\r\n\r\n  // Message display methods\r\n  showSuccessMessage(message: string) {\r\n    // You can implement a toast notification here\r\n    console.log('Success:', message);\r\n  }\r\n\r\n  showErrorMessage(message: string) {\r\n    // You can implement a toast notification here\r\n    console.log('Error:', message);\r\n  }\r\n\r\n  isRTL(): boolean {\r\n    return this.langService.isRTL();\r\n  }\r\n\r\n  getStatusClass(status: number): string {\r\n    const statusKey = this.STATUS_MAP[status as keyof typeof this.STATUS_MAP];\r\n    return statusKey ? `status-${statusKey}` : '';\r\n  }\r\n\r\n  getPriorityClass(priority: number): string {\r\n    const priorityKey = this.PRIORITY_MAP[priority as keyof typeof this.PRIORITY_MAP];\r\n    return priorityKey ? `priority-${priorityKey}` : '';\r\n  }\r\n\r\n  getPriorityText(priority: number): string {\r\n    const priorityKey = this.PRIORITY_MAP[priority as keyof typeof this.PRIORITY_MAP];\r\n    return priorityKey ? this.translate(`tasks.priority.${priorityKey}`) : '';\r\n  }\r\n\r\n  getStatusText(status: number): string {\r\n    const statusKey = this.STATUS_MAP[status as keyof typeof this.STATUS_MAP];\r\n    return statusKey ? this.translate(`tasks.status.${statusKey}`) : '';\r\n  }\r\n\r\n  // Form validation helpers\r\n  isTitleInvalid(form: FormGroup): boolean {\r\n    const titleControl = form.get('title');\r\n    return titleControl ? (titleControl.invalid && (titleControl.dirty || titleControl.touched)) : false;\r\n  }\r\n\r\n  getTitleErrorMessage(form: FormGroup): string {\r\n    const titleControl = form.get('title');\r\n    if (titleControl?.errors) {\r\n      if (titleControl.errors['required']) {\r\n        return this.translate('tasks.form.titleRequired');\r\n      }\r\n      if (titleControl.errors['maxlength']) {\r\n        return this.translate('tasks.form.titleTooLong');\r\n      }\r\n    }\r\n    return '';\r\n  }\r\n\r\n  formatDate(dateString: string): string {\r\n    if (!dateString) return '';\r\n    const date = new Date(dateString);\r\n    return date.toLocaleDateString(this.langService.getCurrentLang() === 'ar' ? 'ar-EG' : 'en-US');\r\n  }\r\n\r\n  formatDateForInput(dateString: string): string {\r\n    if (!dateString) return '';\r\n    const date = new Date(dateString);\r\n    // Format for datetime-local input: YYYY-MM-DDTHH:mm\r\n    const year = date.getFullYear();\r\n    const month = String(date.getMonth() + 1).padStart(2, '0');\r\n    const day = String(date.getDate()).padStart(2, '0');\r\n    const hours = String(date.getHours()).padStart(2, '0');\r\n    const minutes = String(date.getMinutes()).padStart(2, '0');\r\n    return `${year}-${month}-${day}T${hours}:${minutes}`;\r\n  }\r\n\r\n  // Close modals\r\n  closeModal(modalName: string) {\r\n    switch (modalName) {\r\n      case 'showAddTaskModal':\r\n        this.showAddTaskModal = false;\r\n        this.addTaskForm.reset();\r\n        break;\r\n      case 'showEditTaskModal':\r\n        this.showEditTaskModal = false;\r\n        this.editTaskForm.reset();\r\n        break;\r\n      case 'showTaskDetailsModal':\r\n        this.showTaskDetailsModal = false;\r\n        this.currentTask = null;\r\n        this.currentTaskDetails = null;\r\n        this.currentTaskAttachments = [];\r\n        this.currentTaskUpdates = [];\r\n        break;\r\n      case 'showStatusUpdateModal':\r\n        this.showStatusUpdateModal = false;\r\n        this.statusUpdateForm.reset();\r\n        break;\r\n      case 'showReassignModal':\r\n        this.showReassignModal = false;\r\n        this.reassignForm.reset();\r\n        break;\r\n      case 'showAddUpdateModal':\r\n        this.showAddUpdateModal = false;\r\n        this.addUpdateForm.reset();\r\n        break;\r\n      case 'showBulkStatusModal':\r\n        this.showBulkStatusModal = false;\r\n        this.bulkStatusForm.reset();\r\n        break;\r\n      case 'showBulkReassignModal':\r\n        this.showBulkReassignModal = false;\r\n        this.bulkReassignForm.reset();\r\n        break;\r\n    }\r\n    \r\n    // Don't close the details modal when closing other modals\r\n    if (modalName !== 'showTaskDetailsModal') {\r\n      // Keep details modal open if it was open\r\n      if (this.showTaskDetailsModal && this.currentTask) {\r\n        // Details modal stays open\r\n      }\r\n    }\r\n  }\r\n\r\n  // Bulk operations\r\n  async bulkUpdateStatus() {\r\n    if (this.bulkStatusForm.valid) {\r\n      const formData = this.bulkStatusForm.value;\r\n      \r\n      // Filter out completed/stopped tasks\r\n      const eligibleTaskIds = Array.from(this.selectedTasks).filter(taskId => {\r\n        const task = this.tasks.find(t => t.id === taskId);\r\n        return task && task.status !== 2 && task.status !== 3;\r\n      });\r\n      \r\n      const completedTaskIds = Array.from(this.selectedTasks).filter(taskId => {\r\n        const task = this.tasks.find(t => t.id === taskId);\r\n        return task && (task.status === 2 || task.status === 3);\r\n      });\r\n      \r\n      if (eligibleTaskIds.length === 0) {\r\n        this.showErrorMessage('All selected tasks are already completed or stopped and cannot be updated.');\r\n        return;\r\n      }\r\n      \r\n      if (completedTaskIds.length > 0) {\r\n        console.log('Skipping completed/stopped tasks:', completedTaskIds);\r\n      }\r\n      \r\n      const bulkUpdate: BulkStatusUpdate = {\r\n        bulkCloseDto: {\r\n          taskIds: eligibleTaskIds,\r\n          status: Number(formData.status),\r\n          note: formData.note\r\n        }\r\n      };\r\n\r\n      try {\r\n        const response = await this.tasksService.bulkUpdateStatus(bulkUpdate).toPromise();\r\n        if (response.success) {\r\n          this.showBulkStatusModal = false;\r\n          this.bulkStatusForm.reset();\r\n          this.selectedTasks.clear();\r\n          this.updateBulkToolbar();\r\n          await this.loadTasks();\r\n          await this.loadAllTasksForCounting();\r\n          \r\n          // Show success message with info about skipped tasks\r\n          let message = 'Status updated successfully for selected tasks.';\r\n          if (completedTaskIds.length > 0) {\r\n            message += ` ${completedTaskIds.length} completed/stopped tasks were skipped.`;\r\n          }\r\n          this.showSuccessMessage(message);\r\n        }\r\n      } catch (error: any) {\r\n        console.error('Error updating bulk status:', error);\r\n        \r\n        // Handle specific error cases\r\n        if (error.error && error.error.message) {\r\n          this.showErrorMessage(error.error.message);\r\n        } else {\r\n          this.showErrorMessage('Error updating task statuses. Please try again.');\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  async bulkReassign() {\r\n    if (this.bulkReassignForm.valid) {\r\n      const formData = this.bulkReassignForm.value;\r\n      const bulkReassign: BulkReassignUpdate = {\r\n        taskIds: Array.from(this.selectedTasks),\r\n        newAssigneeUserId: formData.newAssigneeUserId,\r\n        note: formData.note\r\n      };\r\n\r\n      try {\r\n        const response = await this.tasksService.bulkReassignTasks(bulkReassign).toPromise();\r\n        if (response.success) {\r\n          this.showBulkReassignModal = false;\r\n          this.bulkReassignForm.reset();\r\n          this.selectedTasks.clear();\r\n          this.updateBulkToolbar();\r\n          await this.loadTasks();\r\n          await this.loadAllTasksForCounting();\r\n          this.showSuccessMessage(this.translate('tasks.dialogs.bulkReassignSuccess'));\r\n        }\r\n      } catch (error) {\r\n        console.error('Error bulk reassigning:', error);\r\n        this.showErrorMessage(this.translate('tasks.dialogs.bulkReassignError'));\r\n      }\r\n    }\r\n  }\r\n\r\n  // Check if any selected tasks are completed or stopped\r\n  hasCompletedOrStoppedTasks(): boolean {\r\n    return Array.from(this.selectedTasks).some(taskId => {\r\n      const task = this.tasks.find(t => t.id === taskId);\r\n      return task && (task.status === 2 || task.status === 3);\r\n    });\r\n  }\r\n\r\n  // Status update\r\n  async updateTaskStatus() {\r\n    if (this.statusUpdateForm.valid && this.currentTask) {\r\n      const formData = this.statusUpdateForm.value;\r\n      const newStatus = Number(formData.status);\r\n      \r\n      console.log('Current task status:', this.currentTask.status);\r\n      console.log('Attempting to update to status:', newStatus);\r\n      console.log('Current task:', this.currentTask);\r\n      \r\n      // Check if trying to update to the same status\r\n      if (newStatus === this.currentTask.status) {\r\n        this.showErrorMessage('Cannot update to the same status');\r\n        return;\r\n      }\r\n      \r\n      // Check if task is already in a \"closed\" state (status 2 = done, 3 = stopped)\r\n      if (this.currentTask.status === 2 || this.currentTask.status === 3) {\r\n        this.showErrorMessage('Cannot update status of a completed or stopped task');\r\n        return;\r\n      }\r\n      \r\n      // The API expects status and note directly\r\n      const statusUpdate = {\r\n        status: newStatus,\r\n        note: formData.note || ''\r\n      };\r\n\r\n      console.log('Sending status update:', statusUpdate);\r\n\r\n      try {\r\n        const response = await this.tasksService.updateTaskStatus(this.currentTask.id, statusUpdate).toPromise();\r\n        if (response && response.success) {\r\n          this.showStatusUpdateModal = false;\r\n          this.statusUpdateForm.reset();\r\n          await this.loadTasks();\r\n          await this.loadAllTasksForCounting();\r\n          this.showSuccessMessage(this.translate('tasks.dialogs.statusUpdateSuccess'));\r\n        } else if (response && !response.success) {\r\n          // Handle API error messages\r\n          this.showErrorMessage(response.message || this.translate('tasks.dialogs.statusUpdateError'));\r\n        }\r\n      } catch (error: any) {\r\n        console.error('Error updating task status:', error);\r\n        console.error('Error details:', error.error);\r\n        \r\n        // Check if it's an API error response\r\n        if (error.error && error.error.message) {\r\n          // Handle specific error cases\r\n          if (error.error.message.includes('already closed')) {\r\n            this.showErrorMessage('This task cannot be updated because it is already completed or stopped. Please select a different task.');\r\n          } else {\r\n            this.showErrorMessage(error.error.message);\r\n          }\r\n        } else {\r\n          this.showErrorMessage(this.translate('tasks.dialogs.statusUpdateError'));\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  // Add task update\r\n  async addTaskUpdate() {\r\n    if (this.addUpdateForm.valid && this.currentTask) {\r\n      const formData = this.addUpdateForm.value;\r\n      const taskUpdate: TaskUpdate = {\r\n        note: formData.note\r\n      };\r\n\r\n      try {\r\n        const response = await this.tasksService.addTaskUpdate(this.currentTask.id, taskUpdate).toPromise();\r\n        if (response.success) {\r\n          this.showAddUpdateModal = false;\r\n          this.addUpdateForm.reset();\r\n          await this.loadTaskUpdates(this.currentTask.id);\r\n          await this.loadAllTasksForCounting();\r\n          // Show success message\r\n        }\r\n      } catch (error) {\r\n        console.error('Error adding task update:', error);\r\n        // Show error message\r\n      }\r\n    }\r\n  }\r\n\r\n  // Reassign task\r\n  async reassignTask() {\r\n    if (this.reassignForm.valid && this.currentTask) {\r\n      const formData = this.reassignForm.value;\r\n      const reassignData: UpdateTaskRequest = {\r\n        ...this.currentTask,\r\n        assigneeUserId: formData.newAssigneeUserId\r\n      };\r\n\r\n      try {\r\n        const response = await this.tasksService.updateTask(this.currentTask.id, reassignData).toPromise();\r\n        if (response.success) {\r\n          this.showReassignModal = false;\r\n          this.reassignForm.reset();\r\n          await this.loadTasks();\r\n          await this.loadAllTasksForCounting();\r\n          // Show success message\r\n        }\r\n      } catch (error) {\r\n        console.error('Error reassigning task:', error);\r\n        // Show error message\r\n      }\r\n    }\r\n  }\r\n\r\n  // File handling\r\n  onFileSelected(event: any, taskId?: number) {\r\n    const files = event.target.files;\r\n    if (files && files.length > 0) {\r\n      if (taskId) {\r\n        // Upload attachment to existing task\r\n        this.uploadAttachment(taskId, files[0]);\r\n      } else {\r\n        // Store file for new task creation\r\n        this.selectedFiles = Array.from(files);\r\n      }\r\n    }\r\n  }\r\n\r\n  async uploadAttachment(taskId: number, file: File) {\r\n    try {\r\n      const formData = new FormData();\r\n      formData.append('file', file);\r\n      \r\n      await this.tasksService.addTaskAttachment(taskId, formData).toPromise();\r\n      \r\n      // Reload task attachments\r\n      if (this.currentTask && this.currentTask.id === taskId) {\r\n        await this.loadTaskAttachments(taskId);\r\n      }\r\n      \r\n      // Show success message\r\n      console.log('File uploaded successfully');\r\n    } catch (error) {\r\n      console.error('Error uploading file:', error);\r\n      // Show error message\r\n    }\r\n  }\r\n\r\n  async deleteAttachment(attachmentId: number, taskId: number) {\r\n    try {\r\n      await this.tasksService.deleteAttachment(taskId, attachmentId).toPromise();\r\n      \r\n      // Reload task attachments\r\n      if (this.currentTask && this.currentTask.id === taskId) {\r\n        await this.loadTaskAttachments(taskId);\r\n      }\r\n      \r\n      // Show success message\r\n      console.log('Attachment deleted successfully');\r\n    } catch (error) {\r\n      console.error('Error deleting attachment:', error);\r\n      // Show error message\r\n    }\r\n  }\r\n\r\n  removeSelectedFile(index: number) {\r\n    if (this.selectedFiles) {\r\n      this.selectedFiles.splice(index, 1);\r\n    }\r\n  }\r\n\r\n  // KPI Data\r\n  get totalTasksCount(): number {\r\n    if (this.isManager) {\r\n      return this.managerTasksOverview?.totalTasks || 0;\r\n    }\r\n    return this.tasksOverview?.totalTasks || 0;\r\n  }\r\n\r\n  get completedTasksCount(): number {\r\n    if (this.isManager) {\r\n      return this.managerTasksOverview?.completedTasks || 0;\r\n    }\r\n    return this.tasksOverview?.completedTasks || 0;\r\n  }\r\n\r\n  get inProgressTasksCount(): number {\r\n    if (this.isManager) {\r\n      return this.managerTasksOverview?.statusDistribution?.find(s => s.status === 'In_Progress')?.count || 0;\r\n    }\r\n    return this.tasksOverview?.statusDistribution?.find(s => s.status === 'In_Progress')?.count || 0;\r\n  }\r\n\r\n  get pendingTasksCount(): number {\r\n    if (this.isManager) {\r\n      return this.managerTasksOverview?.pendingTasks || 0;\r\n    }\r\n    return this.tasksOverview?.pendingTasks || 0;\r\n  }\r\n\r\n  get lateTasksCount(): number {\r\n    if (this.isManager) {\r\n      return this.managerTasksOverview?.overdueTasks || 0;\r\n    }\r\n    return this.tasksOverview?.overdueTasks || 0;\r\n  }\r\n\r\n  get completionRate(): number {\r\n    if (this.isManager) {\r\n      return this.managerTasksOverview?.completionRate || 0;\r\n    }\r\n    return this.tasksOverview?.completionRate || 0;\r\n  }\r\n\r\n  getStatusDisplayName(status: string): string {\r\n    const statusMap: { [key: string]: string } = {\r\n      'New': this.translate('tasks.status.new'),\r\n      'In_Progress': this.translate('tasks.status.inProgress'),\r\n      'Done': this.translate('tasks.status.done'),\r\n      'Stopped': this.translate('tasks.status.stopped'),\r\n      'Late': this.translate('tasks.status.late')\r\n    };\r\n    return statusMap[status] || status;\r\n  }\r\n\r\n  getPriorityDisplayName(priority: string): string {\r\n    const priorityMap: { [key: string]: string } = {\r\n      'High': this.translate('tasks.priority.high'),\r\n      'Medium': this.translate('tasks.priority.medium'),\r\n      'Low': this.translate('tasks.priority.low')\r\n    };\r\n    return priorityMap[priority] || priority;\r\n  }\r\n\r\n  getEfficiencyScore(): string {\r\n    const overview = this.isManager ? this.managerTasksOverview : this.tasksOverview;\r\n    if (!overview) return 'N/A';\r\n    \r\n    const score = Math.round(\r\n      (overview.completedTasks / overview.totalTasks) * 100\r\n    );\r\n    \r\n    if (score >= 90) return 'A+';\r\n    if (score >= 80) return 'A';\r\n    if (score >= 70) return 'B+';\r\n    if (score >= 60) return 'B';\r\n    if (score >= 50) return 'C+';\r\n    if (score >= 40) return 'C';\r\n    return 'D';\r\n  }\r\n\r\n  getProductivityTrend(): string {\r\n    const overview = this.isManager ? this.managerTasksOverview : this.tasksOverview;\r\n    if (!overview) return 'N/A';\r\n    \r\n    const overdueRatio = overview.overdueTasks / overview.totalTasks;\r\n    \r\n    if (overdueRatio <= 0.1) return '📈 Excellent';\r\n    if (overdueRatio <= 0.2) return '📊 Good';\r\n    if (overdueRatio <= 0.3) return '📋 Fair';\r\n    return '⚠️ Needs Attention';\r\n  }\r\n\r\n  getStatusColor(status: string): string {\r\n    const colorMap: { [key: string]: string } = {\r\n      'New': '#3b82f6',\r\n      'In_Progress': '#f59e0b',\r\n      'Done': '#10b981',\r\n      'Stopped': '#6b7280',\r\n      'Late': '#ef4444'\r\n    };\r\n    return colorMap[status] || '#6b7280';\r\n  }\r\n\r\n  // Get status distribution for display\r\n  getStatusDistribution() {\r\n    if (this.isManager) {\r\n      return this.managerTasksOverview?.statusDistribution || [];\r\n    }\r\n    return this.tasksOverview?.statusDistribution || [];\r\n  }\r\n\r\n  // Get priority distribution for display\r\n  getPriorityDistribution() {\r\n    if (this.isManager) {\r\n      return this.managerTasksOverview?.priorityDistribution || [];\r\n    }\r\n    return this.tasksOverview?.priorityDistribution || [];\r\n  }\r\n}", "\r\n<div class=\"container-fluid py-4\" [dir]=\"isRTL() ? 'rtl' : 'ltr'\">\r\n\r\n\r\n  <!-- KPI Cards Section -->\r\n  <div class=\"row mb-4 kpi-cards-row d-flex g-4\">\r\n    <div class=\"col-lg-2 col-md-4 col-sm-6 mb-4\">\r\n      <div class=\"kpi-card kpi-total\">\r\n        <div class=\"kpi-content\">\r\n          <div class=\"kpi-icon\">\r\n            <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n              <rect x=\"3\" y=\"3\" width=\"18\" height=\"18\" rx=\"2\" stroke=\"currentColor\" stroke-width=\"2\" fill=\"none\"/>\r\n              <line x1=\"9\" y1=\"9\" x2=\"15\" y2=\"9\" stroke=\"currentColor\" stroke-width=\"2\"/>\r\n              <line x1=\"9\" y1=\"12\" x2=\"15\" y2=\"12\" stroke=\"currentColor\" stroke-width=\"2\"/>\r\n              <line x1=\"9\" y1=\"15\" x2=\"15\" y2=\"15\" stroke=\"currentColor\" stroke-width=\"2\"/>\r\n            </svg>\r\n          </div>\r\n          <div class=\"kpi-info\">\r\n            <div class=\"kpi-number\">{{ totalTasksCount }}</div>\r\n            <div class=\"kpi-label\">{{ translate('tasks.kpi.totalTasks') }}</div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    \r\n    <div class=\"col-lg-2 col-md-4 col-sm-6 mb-4\">\r\n      <div class=\"kpi-card kpi-progress\">\r\n        <div class=\"kpi-content\">\r\n          <div class=\"kpi-icon\">\r\n            <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n              <circle cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" stroke-width=\"2\" fill=\"none\"/>\r\n              <polyline points=\"12,6 12,12 16,14\" stroke=\"currentColor\" stroke-width=\"2\" fill=\"none\"/>\r\n            </svg>\r\n          </div>\r\n          <div class=\"kpi-info\">\r\n            <div class=\"kpi-number\">{{ inProgressTasksCount }}</div>\r\n            <div class=\"kpi-label\">{{ translate('tasks.kpi.inProgressTasks') }}</div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    \r\n    <div class=\"col-lg-2 col-md-4 col-sm-6 mb-4\">\r\n      <div class=\"kpi-card kpi-completed\">\r\n        <div class=\"kpi-content\">\r\n          <div class=\"kpi-icon\">\r\n            <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n              <path d=\"M20 6L9 17L4 12\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/>\r\n            </svg>\r\n          </div>\r\n          <div class=\"kpi-info\">\r\n            <div class=\"kpi-number\">{{ completedTasksCount }}</div>\r\n            <div class=\"kpi-label\">{{ translate('tasks.kpi.completedTasks') }}</div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    \r\n    <div class=\"col-lg-2 col-md-4 col-sm-6 mb-4\">\r\n      <div class=\"kpi-card kpi-late\">\r\n        <div class=\"kpi-content\">\r\n          <div class=\"kpi-icon\">\r\n            <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n              <circle cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" stroke-width=\"2\" fill=\"none\"/>\r\n              <path d=\"M12 6v6l4 2\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/>\r\n              <path d=\"M12 18a6 6 0 1 1 0-12 6 6 0 0 1 0 12z\" stroke=\"currentColor\" stroke-width=\"2\" fill=\"none\"/>\r\n            </svg>\r\n          </div>\r\n          <div class=\"kpi-info\">\r\n            <div class=\"kpi-number\">{{ lateTasksCount }}</div>\r\n            <div class=\"kpi-label\">{{ translate('tasks.kpi.overdueTasks') }}</div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- <div class=\"col-md-2 mb-3\">\r\n      <div class=\"kpi-card kpi-pending\">\r\n        <div class=\"kpi-content\">\r\n          <div class=\"kpi-icon\">\r\n            <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n              <circle cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" stroke-width=\"2\" fill=\"none\"/>\r\n              <path d=\"M12 2v4M12 18v4M4.93 4.93l2.83 2.83M16.24 16.24l2.83 2.83M2 12h4M18 12h4M4.93 19.07l2.83-2.83M16.24 7.76l2.83-2.83\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/>\r\n            </svg>\r\n          </div>\r\n          <div class=\"kpi-info\">\r\n            <div class=\"kpi-number\">{{ pendingTasksCount }}</div>\r\n            <div class=\"kpi-label\">{{ translate('tasks.kpi.pendingTasks') }}</div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div> -->\r\n\r\n    <div class=\"col-lg-2 col-md-4 col-sm-6 mb-4\">\r\n      <div class=\"kpi-card kpi-completion-rate\">\r\n        <div class=\"kpi-content\">\r\n          <div class=\"kpi-icon\">\r\n            <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n              <path d=\"M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/>\r\n            </svg>\r\n          </div>\r\n          <div class=\"kpi-info\">\r\n            <div class=\"kpi-number\">{{ completionRate | number:'1.1-1' }}%</div>\r\n            <div class=\"kpi-label\">{{ translate('tasks.kpi.completionRate') }}</div>\r\n            <div class=\"completion-progress\">\r\n              <div class=\"progress-bar\">\r\n                <div class=\"progress-fill\" [style.width.%]=\"completionRate\"></div>\r\n              </div>\r\n              <div class=\"progress-labels\">\r\n                <span class=\"progress-min\">0%</span>\r\n                <span class=\"progress-max\">100%</span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n\r\n  <!-- Header Section -->\r\n  <div class=\"d-flex justify-content-between align-items-start mb-4 top-header\">\r\n\r\n    \r\n    <div class=\"text-end\">\r\n      <h1 class=\"page-title mb-1\" [attr.dir]=\"isRTL() ? 'rtl' : 'ltr'\">{{ translate('tasks.title') }}</h1>\r\n      <p class=\"subtle\">{{ translate('tasks.subtitle') }}</p>\r\n    </div>\r\n    <button class=\"btn btn-add gap-2\" (click)=\"openAddTaskModal()\">\r\n      {{ translate('tasks.add_task') }}\r\n      <span class=\"plus\">+</span>\r\n    </button>\r\n  </div>\r\n\r\n  <!-- Kanban Board -->\r\n  <div class=\"kanban\">\r\n    <!-- New Column -->\r\n    <div class=\"kanban-col\">\r\n      <div class=\"col-head blue\">\r\n        {{ translate('tasks.status.new') }}\r\n        <span class=\"task-count\">({{ getStatusTaskCount(0) }})</span>\r\n        <div class=\"task-count-detail\" *ngIf=\"getStatusTasksOnOtherPages(0) > 0\">\r\n        </div>\r\n      </div>\r\n      <div class=\"task-list\">\r\n        <div *ngFor=\"let task of getTasksByStatus(0)\" \r\n             class=\"task-card status-new compact\"\r\n             (click)=\"openTaskDetailsModal(task)\">\r\n          \r\n          <input type=\"checkbox\" \r\n                 class=\"bulk-check form-check-input\" \r\n                 [checked]=\"selectedTasks.has(task.id)\"\r\n                 (click)=\"$event.stopPropagation()\"\r\n                 (change)=\"toggleTaskSelection(task.id)\">\r\n          \r\n\r\n\r\n          <!-- Task Content -->\r\n          <div class=\"task-content\">\r\n            <h6 class=\"task-title mb-2\">{{ task.title }}</h6>\r\n            \r\n            <p class=\"task-desc mb-2\">{{ task.description }}</p>\r\n            \r\n            <div class=\"task-dates\">\r\n              <small class=\"text-muted d-block\">\r\n                <strong>{{ translate('tasks.task.createdAt') }}:</strong> {{ formatDate(task.createdAt) }}\r\n              </small>\r\n              <small class=\"text-muted d-block\">\r\n                <strong>{{ translate('tasks.task.dueDate') }}:</strong> {{ formatDate(task.dueDate) }}\r\n              </small>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        \r\n      </div>\r\n    </div>\r\n\r\n    <!-- In Progress Column -->\r\n    <div class=\"kanban-col\">\r\n      <div class=\"col-head orange\">\r\n        {{ translate('tasks.status.inProgress') }}\r\n        <span class=\"task-count\">({{ getStatusTaskCount(1) }})</span>\r\n        <div class=\"task-count-detail\" *ngIf=\"getStatusTasksOnOtherPages(1) > 0\">\r\n        </div>\r\n      </div>\r\n      <div class=\"task-list\">\r\n        <div *ngFor=\"let task of getTasksByStatus(1)\" \r\n             class=\"task-card status-progress compact\"\r\n             (click)=\"openTaskDetailsModal(task)\">\r\n          \r\n          <input type=\"checkbox\" \r\n                 class=\"bulk-check form-check-input\" \r\n                 [checked]=\"selectedTasks.has(task.id)\"\r\n                 (click)=\"$event.stopPropagation()\"\r\n                 (change)=\"toggleTaskSelection(task.id)\"\r\n                 [style.display]=\"showBulkToolbar ? 'block' : 'none'\">\r\n\r\n          <div class=\"task-content\">\r\n            <h6 class=\"task-title mb-2\">{{ task.title }}</h6>\r\n            \r\n            <p class=\"task-desc mb-2\">{{ task.description }}</p>\r\n            \r\n            <div class=\"task-dates\">\r\n              <small class=\"text-muted d-block\">\r\n                <strong>{{ translate('tasks.task.createdAt') }}:</strong> {{ formatDate(task.createdAt) }}\r\n              </small>\r\n              <small class=\"text-muted d-block\">\r\n                <strong>{{ translate('tasks.task.dueDate') }}:</strong> {{ formatDate(task.dueDate) }}\r\n              </small>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        \r\n      </div>\r\n    </div>\r\n\r\n    <!-- Done Column -->\r\n    <div class=\"kanban-col\">\r\n      <div class=\"col-head green\">\r\n        {{ translate('tasks.status.done') }}\r\n        <span class=\"task-count\">({{ getStatusTaskCount(2) }})</span>\r\n        <div class=\"task-count-detail\" *ngIf=\"getStatusTasksOnOtherPages(2) > 0\">\r\n        </div>\r\n      </div>\r\n      <div class=\"task-list\">\r\n        <div *ngFor=\"let task of getTasksByStatus(2)\" \r\n             class=\"task-card status-done compact\"\r\n             (click)=\"openTaskDetailsModal(task)\">\r\n          \r\n          <input type=\"checkbox\" \r\n                 class=\"bulk-check form-check-input\" \r\n                 [checked]=\"selectedTasks.has(task.id)\"\r\n                 (click)=\"$event.stopPropagation()\"\r\n                 (change)=\"toggleTaskSelection(task.id)\">\r\n          \r\n\r\n\r\n          <div class=\"task-content\">\r\n            <h6 class=\"task-title mb-2\">{{ task.title }}</h6>\r\n            \r\n            <p class=\"task-desc mb-2\">{{ task.description }}</p>\r\n            \r\n            <div class=\"task-dates\">\r\n              <small class=\"text-muted d-block\">\r\n                <strong>{{ translate('tasks.task.createdAt') }}:</strong> {{ formatDate(task.createdAt) }}\r\n              </small>\r\n              <small class=\"text-muted d-block\">\r\n                <strong>{{ translate('tasks.task.dueDate') }}:</strong> {{ formatDate(task.dueDate) }}\r\n              </small>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        \r\n      </div>\r\n    </div>\r\n\r\n    <!-- Stopped Column -->\r\n    <div class=\"kanban-col\">\r\n      <div class=\"col-head gray\">\r\n        {{ translate('tasks.status.stopped') }}\r\n        <span class=\"task-count\">({{ getStatusTaskCount(3) }})</span>\r\n        <div class=\"task-count-detail\" *ngIf=\"getStatusTasksOnOtherPages(3) > 0\">\r\n        </div>\r\n      </div>\r\n      <div class=\"task-list\">\r\n        <div *ngFor=\"let task of getTasksByStatus(3)\" \r\n             class=\"task-card status-stopped compact\"\r\n             (click)=\"openTaskDetailsModal(task)\">\r\n          \r\n          <input type=\"checkbox\" \r\n                 class=\"bulk-check form-check-input\" \r\n                 [checked]=\"selectedTasks.has(task.id)\"\r\n                 (click)=\"$event.stopPropagation()\"\r\n                 (change)=\"toggleTaskSelection(task.id)\"\r\n                 [style.display]=\"showBulkToolbar ? 'block' : 'none'\">\r\n\r\n          <div class=\"task-content\">\r\n            <h6 class=\"task-title mb-2\">{{ task.title }}</h6>\r\n            \r\n            <p class=\"task-desc mb-2\">{{ task.description }}</p>\r\n            \r\n            <div class=\"task-dates\">\r\n              <small class=\"text-muted d-block\">\r\n                <strong>{{ translate('tasks.task.createdAt') }}:</strong> {{ formatDate(task.createdAt) }}\r\n              </small>\r\n              <small class=\"text-muted d-block\">\r\n                <strong>{{ translate('tasks.task.dueDate') }}:</strong> {{ formatDate(task.dueDate) }}\r\n              </small>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        \r\n      </div>\r\n    </div>\r\n\r\n    <!-- Late Column -->\r\n    <div class=\"kanban-col\">\r\n      <div class=\"col-head red\">\r\n        {{ translate('tasks.status.late') }}\r\n        <span class=\"task-count\">({{ getStatusTaskCount(4) }})</span>\r\n        <div class=\"task-count-detail\" *ngIf=\"getStatusTasksOnOtherPages(4) > 0\">\r\n        </div>\r\n      </div>\r\n      <div class=\"task-list\">\r\n        <div *ngFor=\"let task of getTasksByStatus(4)\" \r\n             class=\"task-card status-late compact\"\r\n             (click)=\"openTaskDetailsModal(task)\">\r\n          \r\n          <input type=\"checkbox\" \r\n                 class=\"bulk-check form-check-input\" \r\n                 [checked]=\"selectedTasks.has(task.id)\"\r\n                 (click)=\"$event.stopPropagation()\"\r\n                 (change)=\"toggleTaskSelection(task.id)\">\r\n\r\n          <div class=\"task-content\">\r\n            <h6 class=\"task-title mb-2\">{{ task.title }}</h6>\r\n            \r\n            <p class=\"task-desc mb-2\">{{ task.description }}</p>\r\n            \r\n            <div class=\"task-dates\">\r\n              <small class=\"text-muted d-block\">\r\n                <strong>{{ translate('tasks.task.createdAt') }}:</strong> {{ formatDate(task.createdAt) }}\r\n              </small>\r\n              <small class=\"text-muted d-block\">\r\n                <strong>{{ translate('tasks.task.dueDate') }}:</strong> {{ formatDate(task.dueDate) }}\r\n              </small>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        \r\n      </div>\r\n    </div>\r\n\r\n    <!-- Returned Column -->\r\n    <div class=\"kanban-col\">\r\n      <div class=\"col-head purple\">\r\n        {{ translate('tasks.status.returned') }}\r\n        <span class=\"task-count\">({{ getStatusTaskCount(5) }})</span>\r\n        <div class=\"task-count-detail\" *ngIf=\"getStatusTasksOnOtherPages(5) > 0\">\r\n        </div>\r\n      </div>\r\n      <div class=\"task-list\">\r\n        <div *ngFor=\"let task of getTasksByStatus(5)\" \r\n             class=\"task-card status-returned compact\"\r\n             (click)=\"openTaskDetailsModal(task)\">\r\n          \r\n          <input type=\"checkbox\" \r\n                 class=\"bulk-check form-check-input\" \r\n                 [checked]=\"selectedTasks.has(task.id)\"\r\n                 (click)=\"$event.stopPropagation()\"\r\n                 (change)=\"toggleTaskSelection(task.id)\">\r\n\r\n          <div class=\"task-content\">\r\n            <h6 class=\"task-title mb-2\">{{ task.title }}</h6>\r\n            \r\n            <p class=\"task-desc mb-2\">{{ task.description }}</p>\r\n            \r\n            <div class=\"task-dates\">\r\n              <small class=\"text-muted d-block\">\r\n                <strong>{{ translate('tasks.task.createdAt') }}:</strong> {{ formatDate(task.createdAt) }}\r\n              </small>\r\n              <small class=\"text-muted d-block\">\r\n                <strong>{{ translate('tasks.task.dueDate') }}:</strong> {{ formatDate(task.dueDate) }}\r\n              </small>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        \r\n      </div>\r\n    </div>\r\n\r\n    <!-- Review Column -->\r\n    <div class=\"kanban-col\">\r\n      <div class=\"col-head yellow\">\r\n        {{ translate('tasks.status.review') }}\r\n        <span class=\"task-count\">({{ getStatusTaskCount(6) }})</span>\r\n        <div class=\"task-count-detail\" *ngIf=\"getStatusTasksOnOtherPages(6) > 0\">\r\n        </div>\r\n      </div>\r\n      <div class=\"task-list\">\r\n        <div *ngFor=\"let task of getTasksByStatus(6)\" \r\n             class=\"task-card status-review compact\"\r\n             (click)=\"openTaskDetailsModal(task)\">\r\n          \r\n          <input type=\"checkbox\" \r\n                 class=\"bulk-check form-check-input\" \r\n                 [checked]=\"selectedTasks.has(task.id)\"\r\n                 (click)=\"$event.stopPropagation()\"\r\n                 (change)=\"toggleTaskSelection(task.id)\">\r\n\r\n          <div class=\"task-content\">\r\n            <h6 class=\"task-title mb-2\">{{ task.title }}</h6>\r\n            \r\n            <p class=\"task-desc mb-2\">{{ task.description }}</p>\r\n            \r\n            <div class=\"task-dates\">\r\n              <small class=\"text-muted d-block\">\r\n                <strong>{{ translate('tasks.task.createdAt') }}:</strong> {{ formatDate(task.createdAt) }}\r\n              </small>\r\n              <small class=\"text-muted d-block\">\r\n                <strong>{{ translate('tasks.task.dueDate') }}:</strong> {{ formatDate(task.dueDate) }}\r\n              </small>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        \r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <!-- Pagination Controls -->\r\n  <div class=\"pagination-container\" *ngIf=\"getMaxPagesForAnyStatus() > 1\">\r\n    <nav aria-label=\"Task pagination\">\r\n      <ul class=\"pagination justify-content-center\">\r\n        <!-- Previous Button -->\r\n        <li class=\"page-item\" [class.disabled]=\"currentPage === 1\">\r\n          <a class=\"page-link\" href=\"#\" (click)=\"goToPage(currentPage - 1); $event.preventDefault()\">\r\n            <div>{{translate('common.previous')}}</div>\r\n          </a>\r\n        </li>\r\n        \r\n        <!-- Page Numbers -->\r\n        <li class=\"page-item\" *ngFor=\"let page of getPageNumbers()\" [class.active]=\"page === currentPage\">\r\n          <a class=\"page-link\" href=\"#\" (click)=\"goToPage(page); $event.preventDefault()\">{{ page }}</a>\r\n        </li>\r\n        \r\n        <!-- Next Button -->\r\n        <li class=\"page-item\" [class.disabled]=\"currentPage === getMaxPagesForAnyStatus()\">\r\n          <a class=\"page-link\" href=\"#\" (click)=\"goToPage(currentPage + 1); $event.preventDefault()\">\r\n            <div>{{translate('common.next')}}</div>\r\n          </a>\r\n        </li>\r\n      </ul>\r\n    </nav>\r\n    \r\n    <div class=\"pagination-info text-center mt-3\">\r\n      <span class=\"text-muted\">\r\n        {{ translate('common.showing') }} {{ getStartIndex() }} - {{ getEndIndex() }} \r\n        {{ translate('common.of') }} {{ getTotalTasks() }} {{ translate('common.results') }}\r\n        <br>\r\n        <small>{{ translate('tasks.pagination.note') }}</small>\r\n      </span>\r\n    </div>\r\n  </div>\r\n\r\n  <!-- Bulk Actions Toolbar -->\r\n  <div class=\"bulk-bar\" [class.show]=\"showBulkToolbar\">\r\n    <div class=\"d-flex justify-content-between align-items-center\">\r\n      <div class=\"d-flex align-items-center gap-3\">\r\n        <button class=\"btn btn-sm btn-outline-primary\" (click)=\"selectAllTasks()\">\r\n          {{ translate('tasks.bulk.selectAll') }}\r\n        </button>\r\n                 <span class=\"text-muted\">{{ translate('tasks.bulk.selected').replace('{count}', selectedTasks.size.toString()) }}</span>\r\n      </div>\r\n      \r\n      <div class=\"d-flex gap-2\">\r\n        <button class=\"btn btn-sm btn-outline-warning\" (click)=\"showBulkStatusModal = true\">\r\n          {{ translate('tasks.bulk.updateStatus') }}\r\n        </button>\r\n        <button class=\"btn btn-sm btn-outline-info\" (click)=\"showBulkReassignModal = true\">\r\n          {{ translate('tasks.bulk.reassign') }}\r\n        </button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <!-- Loading Spinner -->\r\n  <div *ngIf=\"isLoading\" class=\"text-center py-5\">\r\n    <div class=\"spinner-border text-primary\" role=\"status\">\r\n      <span class=\"visually-hidden\">Loading...</span>\r\n    </div>\r\n  </div>\r\n\r\n  <!-- Add Task Modal -->\r\n  <div class=\"modal fade\" [class.show]=\"showAddTaskModal\" [style.display]=\"showAddTaskModal ? 'block' : 'none'\">\r\n    <div class=\"modal-dialog modal-lg\">\r\n      <div class=\"modal-content\">\r\n        <div class=\"modal-header\" [dir]=\"isRTL() ? 'rtl' : 'ltr'\">\r\n          <h5 class=\"modal-title\">{{ translate('tasks.add_task') }}</h5>\r\n        </div>\r\n        \r\n        <form [formGroup]=\"addTaskForm\" (ngSubmit)=\"onSubmitAddTask()\">\r\n          <div class=\"modal-body\">\r\n            <div class=\"row\">\r\n              <div class=\"col-12 mb-3\">\r\n                <label class=\"form-label\">{{ translate('tasks.form.title') }}</label>\r\n                <input type=\"text\" class=\"form-control\" formControlName=\"title\" name=\"title\"\r\n                       [class.is-invalid]=\"isTitleInvalid(addTaskForm)\"\r\n                       [placeholder]=\"translate('tasks.form.titlePlaceholder')\"\r\n                       maxlength=\"30\">\r\n                <div class=\"d-flex justify-content-between align-items-center mt-1\">\r\n                  <small class=\"text-danger\" *ngIf=\"isTitleInvalid(addTaskForm)\">\r\n                    {{ getTitleErrorMessage(addTaskForm) }}\r\n                  </small>\r\n                  <small class=\"text-muted ms-auto\">\r\n                    {{ addTaskForm.get('title')?.value?.length || 0 }}/30\r\n                  </small>\r\n                </div>\r\n              </div>\r\n              \r\n              <div class=\"col-md-6 mb-3\">\r\n                <label class=\"form-label\">{{ translate('tasks.form.assignTo') }}</label>\r\n                <select class=\"form-select\" formControlName=\"assigneeUserId\" name=\"assigneeUserId\">\r\n                  <option value=\"\">{{ translate('tasks.form.selectMembers') }}</option>\r\n                  <option *ngFor=\"let user of users\" [value]=\"user.id\">{{ user.name}}</option>\r\n                </select>\r\n              </div>\r\n              <div class=\"col-md-6 mb-3\">\r\n                <label class=\"form-label\">{{ translate('tasks.form.priority') }}</label>\r\n                <select class=\"form-select\" formControlName=\"priority\" name=\"priority\">\r\n                  <option value=\"\">{{ translate('tasks.form.selectPriority') }}</option>\r\n                  <option value=\"1\">{{ translate('tasks.priority.high') }}</option>\r\n                  <option value=\"2\">{{ translate('tasks.priority.medium') }}</option>\r\n                  <option value=\"3\">{{ translate('tasks.priority.low') }}</option>\r\n                </select>\r\n              </div>\r\n\r\n              \r\n              <div class=\"col-12 mb-3\">\r\n                <label class=\"form-label\">{{ translate('tasks.form.description') }}</label>\r\n                <textarea class=\"form-control\" rows=\"3\" formControlName=\"description\" name=\"description\"\r\n                          [placeholder]=\"translate('tasks.form.descriptionPlaceholder')\"></textarea>\r\n              </div>\r\n              \r\n              <div class=\"col-12 mb-3\">\r\n                <label class=\"form-label\">{{ translate('tasks.form.dueDate') }}</label>\r\n                <input type=\"datetime-local\" class=\"form-control\" formControlName=\"dueDate\" name=\"dueDate\">\r\n              </div>\r\n              \r\n              <div class=\"col-12 mb-3\">\r\n                <label class=\"form-label\">{{ translate('tasks.form.attachments') }}</label>\r\n                <div class=\"border rounded p-4 text-center text-muted\">\r\n                  <i class=\"fas fa-cloud-upload-alt fa-2x mb-2\"></i>\r\n                  <p class=\"mb-2\">{{ translate('tasks.form.dragDropFiles') }}</p>\r\n                  <input type=\"file\" #fileInput class=\"d-none\" (change)=\"onFileSelected($event)\" multiple>\r\n                  <button type=\"button\" class=\"btn btn-outline-secondary btn-sm\" (click)=\"fileInput.click()\">\r\n                    {{ translate('tasks.form.browseFiles') }}\r\n                  </button>\r\n                </div>\r\n                \r\n                <!-- Selected Files List -->\r\n                <div *ngIf=\"selectedFiles && selectedFiles.length > 0\" class=\"mt-2\">\r\n                  <div *ngFor=\"let file of selectedFiles; let i = index\" class=\"d-flex align-items-center p-2 border rounded mb-1\">\r\n                    <i class=\"fas fa-file me-2 text-muted\"></i>\r\n                    <span class=\"flex-grow-1\">{{ file.name }}</span>\r\n                    <button type=\"button\" class=\"btn btn-sm btn-outline-danger\" (click)=\"removeSelectedFile(i)\">\r\n                      <i class=\"fas fa-times\"></i>\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          \r\n          <div class=\"modal-footer\">\r\n            <button type=\"submit\" class=\"btn btn-primary\" [disabled]=\"!addTaskForm.valid\">\r\n              {{ translate('common.save') }}\r\n            </button>\r\n            <button type=\"button\" class=\"btn btn-secondary\" (click)=\"closeModal('showAddTaskModal')\">\r\n              {{ translate('common.cancel') }}\r\n            </button>\r\n           \r\n          </div>\r\n        </form>\r\n      </div>\r\n      </div>\r\n    </div>\r\n    \r\n  <!-- Edit Task Modal -->\r\n  <div class=\"modal fade\" [class.show]=\"showEditTaskModal\" [style.display]=\"showEditTaskModal ? 'block' : 'none'\">\r\n    <div class=\"modal-dialog modal-lg\">\r\n      <div class=\"modal-content\">\r\n        <div class=\"modal-header\" [dir]=\"isRTL() ? 'rtl' : 'ltr'\">\r\n          <h5 class=\"modal-title\">{{ translate('tasks.edit_task') }}</h5>\r\n        </div>\r\n        \r\n        <form [formGroup]=\"editTaskForm\" (ngSubmit)=\"onSubmitEditTask()\">\r\n          <div class=\"modal-body\">\r\n            <div class=\"row\">\r\n              <div class=\"col-12 mb-3\">\r\n                <label class=\"form-label\">{{ translate('tasks.form.title') }}</label>\r\n                <input type=\"text\" class=\"form-control\" formControlName=\"title\" name=\"editTitle\"\r\n                       [class.is-invalid]=\"isTitleInvalid(editTaskForm)\"\r\n                       [placeholder]=\"translate('tasks.form.titlePlaceholder')\"\r\n                       maxlength=\"30\">\r\n                <div class=\"d-flex justify-content-between align-items-center mt-1\">\r\n                  <small class=\"text-danger\" *ngIf=\"isTitleInvalid(editTaskForm)\">\r\n                    {{ getTitleErrorMessage(editTaskForm) }}\r\n                  </small>\r\n                  <small class=\"text-muted ms-auto\">\r\n                    {{ editTaskForm.get('title')?.value?.length || 0 }}/30\r\n                  </small>\r\n                </div>\r\n              </div>\r\n              \r\n              <div class=\"col-md-6 mb-3\">\r\n                <label class=\"form-label\">{{ translate('tasks.form.startDate') }}</label>\r\n                <input type=\"datetime-local\" class=\"form-control\" formControlName=\"dueDate\" name=\"editStartDate\">\r\n              </div>\r\n              \r\n              <div class=\"col-md-6 mb-3\">\r\n                <label class=\"form-label\">{{ translate('tasks.form.endDate') }}</label>\r\n                <input type=\"datetime-local\" class=\"form-control\" formControlName=\"dueDate\" name=\"editEndDate\">\r\n              </div>\r\n              \r\n              <div class=\"col-12 mb-3\">\r\n                <label class=\"form-label\">{{ translate('tasks.form.assignTo') }}</label>\r\n                <select class=\"form-select\" formControlName=\"assigneeUserId\" name=\"editAssigneeUserId\">\r\n                  <option value=\"\">{{ translate('tasks.form.selectMembers') }}</option>\r\n                  <option *ngFor=\"let user of users\" [value]=\"user.id\">{{ user.name}}</option>\r\n                </select>\r\n              </div>\r\n              \r\n\r\n              \r\n              <div class=\"col-12 mb-3\">\r\n                <label class=\"form-label\">{{ translate('tasks.form.description') }}</label>\r\n                <textarea class=\"form-control\" rows=\"3\" formControlName=\"description\" name=\"editDescription\"\r\n                          [placeholder]=\"translate('tasks.form.descriptionPlaceholder')\"></textarea>\r\n              </div>\r\n              \r\n              <div class=\"col-md-6 mb-3\">\r\n                <label class=\"form-label\">{{ translate('tasks.form.priority') }}</label>\r\n                <select class=\"form-select\" formControlName=\"priority\" name=\"editPriority\">\r\n                  <option value=\"\">{{ translate('tasks.form.selectPriority') }}</option>\r\n                  <option value=\"1\">{{ translate('tasks.priority.high') }}</option>\r\n                  <option value=\"2\">{{ translate('tasks.priority.medium') }}</option>\r\n                  <option value=\"3\">{{ translate('tasks.priority.low') }}</option>\r\n                </select>\r\n              </div>\r\n              \r\n              <div class=\"col-12 mb-3\">\r\n                <label class=\"form-label\">{{ translate('tasks.form.attachments') }}</label>\r\n                <div class=\"border rounded p-4 text-center text-muted\">\r\n                  <i class=\"fas fa-cloud-upload-alt fa-2x mb-2\"></i>\r\n                  <p class=\"mb-2\">{{ translate('tasks.form.dragDropFiles') }}</p>\r\n                  <input type=\"file\" #editFileInput class=\"d-none\" (change)=\"onFileSelected($event, currentTask?.id)\" multiple>\r\n                  <button type=\"button\" class=\"btn btn-outline-secondary btn-sm\" (click)=\"editFileInput.click()\">\r\n                    {{ translate('tasks.form.browseFiles') }}\r\n                  </button>\r\n                </div>\r\n                \r\n                <!-- Selected Files List -->\r\n                <div *ngIf=\"selectedFiles && selectedFiles.length > 0\" class=\"mt-2\">\r\n                  <div *ngFor=\"let file of selectedFiles; let i = index\" class=\"d-flex align-items-center p-2 border rounded mb-1\">\r\n                    <i class=\"fas fa-file me-2 text-muted\"></i>\r\n                    <span class=\"flex-grow-1\">{{ file.name }}</span>\r\n                    <button type=\"button\" class=\"btn btn-sm btn-outline-danger\" (click)=\"removeSelectedFile(i)\">\r\n                      <i class=\"fas fa-times\"></i>\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          \r\n          <div class=\"modal-footer\">\r\n            \r\n            <button type=\"submit\" class=\"btn btn-primary\" [disabled]=\"!editTaskForm.valid\">\r\n              {{ translate('common.save') }}\r\n            </button>\r\n            <button type=\"button\" class=\"btn btn-secondary\" (click)=\"closeModal('showEditTaskModal')\">\r\n              {{ translate('common.cancel') }}\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n      </div>\r\n      </div>\r\n\r\n  <!-- Task Details Modal -->\r\n  <div class=\"modal fade\" [class.show]=\"showTaskDetailsModal\" [style.display]=\"showTaskDetailsModal ? 'block' : 'none'\">\r\n    <div class=\"modal-dialog modal-xl\">\r\n      <div class=\"modal-content\">\r\n        <div class=\"modal-header\" [dir]=\"isRTL() ? 'rtl' : 'ltr'\">\r\n          <h5 class=\"modal-title\">{{ translate('tasks.task_details') }}</h5>\r\n        </div>\r\n        \r\n        <div class=\"modal-body\" *ngIf=\"currentTask\">\r\n          <div class=\"row\">\r\n            <div class=\"col-md-8\">\r\n              <h4 class=\"mb-3\">{{ currentTask.title }}</h4>\r\n              \r\n              <div class=\"row mb-4\">\r\n                <div class=\"col-md-6\">\r\n                  <div class=\"d-flex align-items-center mb-2\">\r\n                    <i class=\"fas fa-user me-2 text-muted\"></i>\r\n                    <span class=\"text-muted\">{{ translate('tasks.task.createdBy') }}:</span>\r\n                    <span class=\"ms-2\">{{ currentTask.createdByName }}</span>\r\n                  </div>\r\n                  \r\n                  <div class=\"d-flex align-items-center mb-2\">\r\n                    <i class=\"fas fa-clock me-2 text-muted\"></i>\r\n                    <span class=\"text-muted\">{{ translate('tasks.task.status') }}:</span>\r\n                    <span class=\"ms-2 badge\" [class]=\"getStatusClass(currentTask.status)\">\r\n                      {{ getStatusText(currentTask.status) }}\r\n      </span>\r\n    </div>\r\n  </div>\r\n\r\n                <div class=\"col-md-6\">\r\n                  <div class=\"d-flex align-items-center mb-2\">\r\n                    <i class=\"fas fa-calendar me-2 text-muted\"></i>\r\n                    <span class=\"text-muted\">{{ translate('tasks.task.duration') }}:</span>\r\n                    <span class=\"ms-2\">{{ formatDate(currentTask.createdAt) }} - {{ formatDate(currentTask.dueDate) }}</span>\r\n                  </div>\r\n                  \r\n                  <div class=\"d-flex align-items-center mb-2\">\r\n                    <i class=\"fas fa-users me-2 text-muted\"></i>\r\n                    <span class=\"text-muted\">{{ translate('tasks.task.assignee') }}:</span>\r\n                    <span class=\"ms-2\">{{ currentTask.assigneeName || translate('tasks.task.noAssignee') }}</span>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              \r\n              <div class=\"mb-4\">\r\n                <h6>{{ translate('tasks.task.description') }}</h6>\r\n                <div class=\"bg-light p-3 rounded\">\r\n                  {{ currentTask.description || translate('tasks.task.noSubtasks') }}\r\n                </div>\r\n              </div>\r\n              \r\n              <div class=\"mb-4\">\r\n                <h6>{{ translate('tasks.task.attachments') }}</h6>\r\n                <div class=\"bg-light p-3 rounded\" *ngIf=\"currentTaskAttachments.length === 0\">\r\n                  {{ translate('tasks.task.noAttachments') }}\r\n                </div>\r\n                <div *ngFor=\"let attachment of currentTaskAttachments\" class=\"d-flex align-items-center p-2 border-bottom\">\r\n                  <i class=\"fas fa-file me-2\"></i>\r\n                  <div class=\"flex-grow-1\">\r\n                    <div class=\"fw-bold\">{{ attachment.fileName }}</div>\r\n                    <small class=\"text-muted\">{{ attachment.uploadedByName }} - {{ formatDate(attachment.uploadedAt) }}</small>\r\n                  </div>\r\n                  <button type=\"button\" class=\"btn btn-sm btn-outline-danger\" (click)=\"deleteAttachment(attachment.id, currentTask!.id)\">\r\n                    <svg class=\"nav-icon\" width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" \r\n                        fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" \r\n                        stroke-linecap=\"round\" stroke-linejoin=\"round\" aria-label=\"Delete\">\r\n                      <polyline points=\"3 6 5 6 21 6\"></polyline>\r\n                      <path d=\"M19 6l-1 14a2 2 0 0 1-2 2H8a2 2 0 0 1-2-2L5 6\"></path>\r\n                      <path d=\"M10 11v6\"></path>\r\n                      <path d=\"M14 11v6\"></path>\r\n                      <path d=\"M9 6V4a1 1 0 0 1 1-1h4a1 1 0 0 1 1 1v2\"></path>\r\n                    </svg>\r\n\r\n                  </button>\r\n                </div>\r\n                \r\n                <!-- Add New Attachment -->\r\n                <div class=\"mt-3\">\r\n                  <input type=\"file\" #detailsFileInput class=\"d-none\" (change)=\"onFileSelected($event, currentTask.id)\">\r\n                  <button type=\"button\" class=\"btn btn-outline-primary btn-sm\" (click)=\"detailsFileInput.click()\">\r\n                    <svg width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" class=\"me-1\">\r\n                      <line x1=\"8\" y1=\"1\" x2=\"8\" y2=\"15\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\"/>\r\n                      <line x1=\"1\" y1=\"8\" x2=\"15\" y2=\"8\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\"/>\r\n                    </svg>\r\n                    {{ translate('tasks.task.addAttachment') }}\r\n                  </button>\r\n                </div>\r\n              </div>\r\n              \r\n\r\n              \r\n              <div class=\"mb-4\">\r\n                <h6>{{ translate('tasks.task.updatesTimeline') }}</h6>\r\n                <div class=\"bg-light p-3 rounded\" *ngIf=\"currentTaskUpdates.length === 0\">\r\n                  {{ translate('tasks.task.noUpdates') }}\r\n                </div>\r\n                <div *ngFor=\"let update of currentTaskUpdates\" class=\"d-flex align-items-start p-2 border-bottom\">\r\n                  <div class=\"flex-grow-1\">\r\n                    <div class=\"fw-bold\">{{ update.note }}</div>\r\n                    <small class=\"text-muted\">{{ update.createdByName }} - {{ formatDate(update.createdAt) }}</small>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              \r\n              <!-- Feedback Section -->\r\n              <div class=\"mb-4\">\r\n                <h6>{{ translate('tasks.task.feedback') }}</h6>\r\n                <div class=\"bg-light p-3 rounded\" *ngIf=\"currentTaskFeedback.length === 0\">\r\n                  {{ translate('tasks.task.noFeedback') }}\r\n                </div>\r\n                <div *ngFor=\"let feedback of currentTaskFeedback\" class=\"d-flex align-items-start p-2 border-bottom\">\r\n                  <div class=\"flex-grow-1\">\r\n                    <div class=\"fw-bold\">{{ feedback.feedbackText }}</div>\r\n                    <small class=\"text-muted\">{{ feedback.employeeName }} - {{ formatDate(feedback.createdAt) }}</small>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            \r\n            <div class=\"col-md-4\">\r\n              <div class=\"d-grid gap-2\">\r\n                <button class=\"btn edit-task-btn\" (click)=\"openEditTaskModal(currentTask)\">\r\n                  {{ translate('tasks.actions.edit') }}\r\n                </button>\r\n                <button class=\"btn btn-outline-warning\" (click)=\"showStatusUpdateModal = true\">\r\n                  {{ translate('tasks.actions.changeStatus') }}\r\n                </button>\r\n                <button class=\"btn btn-outline-info\" (click)=\"showAddUpdateModal = true\">\r\n                  {{ translate('tasks.actions.addUpdate') }}\r\n                </button>\r\n                <!-- <button class=\"btn btn-reassign\" (click)=\"showReassignModal = true\">\r\n                  {{ translate('tasks.actions.reassign') }}\r\n                </button> -->\r\n                <button class=\"btn btn-outline-danger\" (click)=\"deleteTask(currentTask)\">\r\n                  {{ translate('tasks.actions.delete') }}\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        \r\n        <div class=\"modal-footer\">\r\n          <button type=\"button\" class=\"btn btn-secondary\" (click)=\"closeModal('showTaskDetailsModal')\">\r\n            {{ translate('common.cancel') }}\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <!-- Status Update Modal -->\r\n  <div class=\"modal fade\" [class.show]=\"showStatusUpdateModal\" [style.display]=\"showStatusUpdateModal ? 'block' : 'none'\">\r\n    <div class=\"modal-dialog\">\r\n      <div class=\"modal-content\">\r\n        <div class=\"modal-header\" [dir]=\"isRTL() ? 'rtl' : 'ltr'\">\r\n          <h5 class=\"modal-title\">{{ translate('tasks.dialogs.statusUpdate') }}</h5>\r\n        </div>\r\n        \r\n        <form [formGroup]=\"statusUpdateForm\" (ngSubmit)=\"updateTaskStatus()\">\r\n          <div class=\"modal-body\">\r\n            <!-- Warning message for completed/stopped tasks -->\r\n            <div *ngIf=\"currentTask && (currentTask.status === 2 || currentTask.status === 3)\" \r\n                 class=\"alert alert-warning mb-3\">\r\n              <i class=\"fas fa-exclamation-triangle me-2\"></i>\r\n              {{ translate('tasks.dialogs.taskCompletedWarning') }}\r\n            </div>\r\n            \r\n            <div class=\"mb-3\">\r\n              <label class=\"form-label\">{{ translate('tasks.bulk.newStatus') }}</label>\r\n              <select class=\"form-select\" formControlName=\"status\" \r\n                      [disabled]=\"!!(currentTask && (currentTask.status === 2 || currentTask.status === 3))\">\r\n                <option value=\"\">{{ translate('tasks.form.selectStatus') }}</option>\r\n                <option value=\"0\" [disabled]=\"!!(currentTask && currentTask.status === 0)\">{{ translate('tasks.status.new') }}</option>\r\n                <option value=\"1\" [disabled]=\"!!(currentTask && currentTask.status === 1)\">{{ translate('tasks.status.inProgress') }}</option>\r\n                <option value=\"2\" [disabled]=\"!!(currentTask && currentTask.status === 2)\">{{ translate('tasks.status.done') }}</option>\r\n                <option value=\"3\" [disabled]=\"!!(currentTask && currentTask.status === 3)\">{{ translate('tasks.status.stopped') }}</option>\r\n                <option value=\"4\" [disabled]=\"!!(currentTask && currentTask.status === 4)\">{{ translate('tasks.status.late') }}</option>\r\n                <option value=\"5\" [disabled]=\"!!(currentTask && currentTask.status === 5)\">{{ translate('tasks.status.returned') }}</option>\r\n                <option value=\"6\" [disabled]=\"!!(currentTask && currentTask.status === 6)\">{{ translate('tasks.status.review') }}</option>\r\n              </select>\r\n            </div>\r\n            \r\n            <div class=\"mb-3\">\r\n              <label class=\"form-label\">{{ translate('tasks.bulk.note') }}</label>\r\n              <textarea class=\"form-control\" rows=\"3\" formControlName=\"note\"\r\n                        [placeholder]=\"translate('tasks.bulk.notePlaceholder')\"\r\n                        [disabled]=\"!!(currentTask && (currentTask.status === 2 || currentTask.status === 3))\"></textarea>\r\n            </div>\r\n          </div>\r\n          \r\n          <div class=\"modal-footer\">\r\n            <button type=\"submit\" class=\"btn btn-warning\" \r\n            [disabled]=\"!statusUpdateForm.valid || !!(currentTask && (currentTask.status === 2 || currentTask.status === 3))\">\r\n              {{ translate('common.save') }}\r\n            </button>\r\n            <button type=\"button\" class=\"btn btn-secondary\" (click)=\"closeModal('showStatusUpdateModal')\">\r\n              {{ translate('common.cancel') }}\r\n            </button>\r\n         \r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <!-- Add Update Modal -->\r\n  <div class=\"modal fade\" [class.show]=\"showAddUpdateModal\" [style.display]=\"showAddUpdateModal ? 'block' : 'none'\">\r\n    <div class=\"modal-dialog\">\r\n      <div class=\"modal-content\">\r\n        <div class=\"modal-header\" [dir]=\"isRTL() ? 'rtl' : 'ltr'\">\r\n          <h5 class=\"modal-title\">{{ translate('tasks.dialogs.addUpdate') }}</h5>\r\n        </div>\r\n        \r\n        <form [formGroup]=\"addUpdateForm\" (ngSubmit)=\"addTaskUpdate()\">\r\n          <div class=\"modal-body\">\r\n            <div class=\"mb-3\">\r\n              <label class=\"form-label\">{{ translate('tasks.bulk.note') }}</label>\r\n              <textarea class=\"form-control\" rows=\"3\" formControlName=\"note\"\r\n                        [placeholder]=\"translate('tasks.bulk.notePlaceholder')\"></textarea>\r\n            </div>\r\n          </div>\r\n          \r\n          <div class=\"modal-footer\">\r\n            <button type=\"submit\" class=\"btn btn-info\" [disabled]=\"!addUpdateForm.valid\">\r\n              {{ translate('common.save') }}\r\n            </button>\r\n            <button type=\"button\" class=\"btn btn-secondary\" (click)=\"closeModal('showAddUpdateModal')\">\r\n              {{ translate('common.cancel') }}\r\n            </button>\r\n            \r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <!-- Reassign Modal -->\r\n  <div class=\"modal fade\" [class.show]=\"showReassignModal\" [style.display]=\"showReassignModal ? 'block' : 'none'\">\r\n    <div class=\"modal-dialog\">\r\n      <div class=\"modal-content\">\r\n        <div class=\"modal-header\" [dir]=\"isRTL() ? 'rtl' : 'ltr'\">\r\n          <h5 class=\"modal-title\">{{ translate('tasks.dialogs.reassign') }}</h5>\r\n        </div>\r\n        \r\n        <form [formGroup]=\"reassignForm\" (ngSubmit)=\"reassignTask()\">\r\n          <div class=\"modal-body\">\r\n            <div class=\"mb-3\">\r\n              <label class=\"form-label\">{{ translate('tasks.bulk.newAssignee') }}</label>\r\n              <select class=\"form-select\" formControlName=\"newAssigneeUserId\">\r\n                <option value=\"\">{{ translate('tasks.form.selectMembers') }}</option>\r\n                <option *ngFor=\"let employee of directEmployees\" [value]=\"employee.id\">{{ employee.name}}</option>\r\n              </select>\r\n            </div>\r\n            \r\n            <div class=\"mb-3\">\r\n              <label class=\"form-label\">{{ translate('tasks.bulk.note') }}</label>\r\n              <textarea class=\"form-control\" rows=\"3\" formControlName=\"note\"\r\n                        [placeholder]=\"translate('tasks.bulk.notePlaceholder')\"></textarea>\r\n            </div>\r\n          </div>\r\n          \r\n          <div class=\"modal-footer\">\r\n            \r\n            <button type=\"submit\" class=\"btn btn-secondary\" [disabled]=\"!reassignForm.valid\">\r\n              {{ translate('common.save') }}\r\n            </button>\r\n            <button type=\"button\" class=\"btn btn-secondary\" (click)=\"closeModal('showReassignModal')\">\r\n              {{ translate('common.cancel') }}\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <!-- Bulk Status Update Modal -->\r\n  <div class=\"modal fade\" [class.show]=\"showBulkStatusModal\" [style.display]=\"showBulkStatusModal ? 'block' : 'none'\">\r\n    <div class=\"modal-dialog\">\r\n      <div class=\"modal-content\">\r\n        <div class=\"modal-header\" [dir]=\"isRTL() ? 'rtl' : 'ltr'\">\r\n          <h5 class=\"modal-title\">{{ translate('tasks.bulk.updateStatus') }}</h5>\r\n        </div>\r\n        \r\n        <form [formGroup]=\"bulkStatusForm\" (ngSubmit)=\"bulkUpdateStatus()\">\r\n          <div class=\"modal-body\">\r\n            <!-- Warning message for completed/stopped tasks -->\r\n            <div *ngIf=\"hasCompletedOrStoppedTasks()\" \r\n                 class=\"alert alert-warning mb-3\">\r\n              <i class=\"fas fa-exclamation-triangle me-2\"></i>\r\n              {{ translate('tasks.bulk.completedTasksWarning') }}\r\n            </div>\r\n            \r\n            <div class=\"mb-3\">\r\n              <label class=\"form-label\">{{ translate('tasks.bulk.newStatus') }}</label>\r\n              <select class=\"form-select\" formControlName=\"status\">\r\n                <option value=\"\">{{ translate('tasks.form.selectStatus') }}</option>\r\n                <option value=\"0\">{{ translate('tasks.status.new') }}</option>\r\n                <option value=\"1\">{{ translate('tasks.status.inProgress') }}</option>\r\n                <option value=\"2\">{{ translate('tasks.status.done') }}</option>\r\n                <option value=\"3\">{{ translate('tasks.status.stopped') }}</option>\r\n                <option value=\"4\">{{ translate('tasks.status.late') }}</option>\r\n                <option value=\"5\">{{ translate('tasks.status.returned') }}</option>\r\n                <option value=\"6\">{{ translate('tasks.status.review') }}</option>\r\n              </select>\r\n            </div>\r\n            \r\n            <div class=\"mb-3\">\r\n              <label class=\"form-label\">{{ translate('tasks.bulk.note') }}</label>\r\n              <textarea class=\"form-control\" rows=\"3\" formControlName=\"note\"\r\n                        [placeholder]=\"translate('tasks.bulk.notePlaceholder')\"></textarea>\r\n            </div>\r\n          </div>\r\n          \r\n          <div class=\"modal-footer\">\r\n            \r\n            <button type=\"submit\" class=\"btn btn-warning\" [disabled]=\"!bulkStatusForm.valid\">\r\n              {{ translate('common.save') }}\r\n            </button>\r\n            <button type=\"button\" class=\"btn btn-secondary\" (click)=\"closeModal('showBulkStatusModal')\">\r\n              {{ translate('common.cancel') }}\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <!-- Bulk Reassign Modal -->\r\n  <div class=\"modal fade\" [class.show]=\"showBulkReassignModal\" [style.display]=\"showBulkReassignModal ? 'block' : 'none'\">\r\n    <div class=\"modal-dialog\">\r\n      <div class=\"modal-content\">\r\n        <div class=\"modal-header\" [dir]=\"isRTL() ? 'rtl' : 'ltr'\">\r\n          <h5 class=\"modal-title\">{{ translate('tasks.bulk.reassign') }}</h5>\r\n        </div>\r\n        \r\n        <form [formGroup]=\"bulkReassignForm\" (ngSubmit)=\"bulkReassign()\">\r\n          <div class=\"modal-body\">\r\n            <div class=\"mb-3\">\r\n              <label class=\"form-label\">{{ translate('tasks.bulk.newAssignee') }}</label>\r\n              <select class=\"form-select\" formControlName=\"newAssigneeUserId\">\r\n                <option value=\"\">{{ translate('tasks.form.selectMembers') }}</option>\r\n                <option *ngFor=\"let employee of directEmployees\" [value]=\"employee.id\">{{ employee.name}}</option>\r\n              </select>\r\n            </div>\r\n            \r\n            <div class=\"mb-3\">\r\n              <label class=\"form-label\">{{ translate('tasks.bulk.note') }}</label>\r\n              <textarea class=\"form-control\" rows=\"3\" formControlName=\"note\"\r\n                        [placeholder]=\"translate('tasks.bulk.notePlaceholder')\"></textarea>\r\n            </div>\r\n          </div>\r\n          \r\n          <div class=\"modal-footer\">\r\n            \r\n            <button type=\"submit\" class=\"btn btn-info\" [disabled]=\"!bulkReassignForm.valid\">\r\n              {{ translate('common.save') }}\r\n            </button>\r\n            <button type=\"button\" class=\"btn btn-secondary\" (click)=\"closeModal('showBulkReassignModal')\">\r\n              {{ translate('common.cancel') }}\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <!-- Confirmation Modal -->\r\n  <app-confirmation-modal #confirmationModal></app-confirmation-modal>\r\n</div>\r\n", "import { Component, OnInit, ViewChild, ChangeDetectorRef } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule, FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { TasksService, TaskFeedbackRequest } from '../../../services/tasks.service';\r\nimport { TranslationService } from '../../../services/translation.service';\r\nimport { LangService } from '../../../services/lang.service';\r\nimport { ConfirmationModalComponent } from '../../shared/confirmation-modal/confirmation-modal.component';\r\nimport { Task, TasksRoot, TaskFeedback } from '../../../models/tasks.model';\r\n\r\n@Component({\r\n  selector: 'app-my-tasks',\r\n  standalone: false,\r\n  templateUrl: './my-tasks.component.html',\r\n  styleUrls: ['./my-tasks.component.css']\r\n})\r\nexport class MyTasksComponent implements OnInit {\r\n  @ViewChild('confirmationModal') confirmationModal!: ConfirmationModalComponent;\r\n\r\n  // Data\r\n  tasks: Task[] = [];\r\n  allTasksForCounting: Task[] = []; // Store all tasks for status counting\r\n  \r\n  // Language\r\n  currentLang = 'en';\r\n  \r\n  // UI state\r\n  isLoading = false;\r\n  \r\n  // Pagination state\r\n  currentPage = 1;\r\n  pageSize = 5; // 5 tasks per column per page\r\n  totalCount = 0;\r\n  totalPages = 1;\r\n  \r\n  // Modal visibility\r\n  showFeedbackModal = false;\r\n  showTaskDetailsModal = false;\r\n  \r\n  // Current task and details\r\n  currentTask: Task | null = null;\r\n  currentTaskDetails: Task | null = null;\r\n  currentTaskFeedback: TaskFeedback[] = [];\r\n  \r\n  // Forms\r\n  feedbackForm!: FormGroup;\r\n  \r\n  // Status mapping\r\n  readonly STATUS_MAP = {\r\n    0: 'new',\r\n    1: 'inProgress', \r\n    2: 'done',\r\n    3: 'stopped',\r\n    4: 'late',\r\n    5: 'returned',\r\n    6: 'review'\r\n  };\r\n  \r\n  readonly PRIORITY_MAP = {\r\n    1: 'high',\r\n    2: 'medium', \r\n    3: 'low'\r\n  };\r\n\r\n  constructor(\r\n    private tasksService: TasksService,\r\n    private translationService: TranslationService,\r\n    private langService: LangService,\r\n    private fb: FormBuilder,\r\n    private cdr: ChangeDetectorRef\r\n  ) {\r\n    this.initializeForms();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.loadData();\r\n    this.langService.currentLang$.subscribe(lang => {\r\n      this.currentLang = lang;\r\n      this.cdr.detectChanges();\r\n    });\r\n  }\r\n\r\n  private initializeForms() {\r\n    this.feedbackForm = this.fb.group({\r\n      feedbackText: ['', [Validators.minLength(10)]]\r\n    });\r\n  }\r\n\r\n  private async loadData() {\r\n    this.isLoading = true;\r\n    try {\r\n      await this.loadMyTasks();\r\n    } catch (error) {\r\n      console.error('Error loading data:', error);\r\n    } finally {\r\n      this.isLoading = false;\r\n    }\r\n  }\r\n\r\n  private async loadMyTasks() {\r\n    return new Promise<void>((resolve, reject) => {\r\n      this.tasksService.getEmployeeTasks().subscribe({\r\n        next: (response) => {\r\n          if (response.success && response.data?.items) {\r\n            // Filter tasks to only show New, In_Progress, and returned statuses\r\n            this.tasks = response.data.items.filter(task => \r\n              task.status === 0 || task.status === 1 || task.status === 5\r\n            );\r\n            this.allTasksForCounting = this.tasks;\r\n            this.totalCount = this.tasks.length;\r\n            this.totalPages = Math.ceil(this.totalCount / this.pageSize);\r\n          }\r\n          resolve();\r\n        },\r\n        error: reject\r\n      });\r\n    });\r\n  }\r\n\r\n  // Modal management\r\n  private closeAllModals() {\r\n    this.showFeedbackModal = false;\r\n    this.showTaskDetailsModal = false;\r\n    this.updateBodyClass();\r\n  }\r\n\r\n  private canOpenModal(): boolean {\r\n    return !this.showFeedbackModal && !this.showTaskDetailsModal;\r\n  }\r\n\r\n  private updateBodyClass() {\r\n    const hasOpenModal = this.showFeedbackModal || this.showTaskDetailsModal;\r\n    \r\n    if (hasOpenModal) {\r\n      document.body.classList.add('modal-open');\r\n    } else {\r\n      document.body.classList.remove('modal-open');\r\n    }\r\n  }\r\n\r\n  // Task actions\r\n  openTaskDetailsModal(task: Task) {\r\n    if (this.canOpenModal()) {\r\n      this.closeAllModals();\r\n      this.currentTask = task;\r\n      this.showTaskDetailsModal = true;\r\n      this.loadTaskFeedback(task.id);\r\n      this.updateBodyClass();\r\n    }\r\n  }\r\n\r\n  openFeedbackModal(task: Task) {\r\n    // Close all modals first, then open feedback modal\r\n    this.closeAllModals();\r\n    this.currentTask = task;\r\n    this.showFeedbackModal = true;\r\n    this.feedbackForm.reset();\r\n    this.updateBodyClass();\r\n  }\r\n\r\n  private async loadTaskFeedback(taskId: number) {\r\n    return new Promise<void>((resolve, reject) => {\r\n      this.tasksService.getTaskFeedback(taskId).subscribe({\r\n        next: (response) => {\r\n          if (response.success && response.data) {\r\n            this.currentTaskFeedback = response.data;\r\n          }\r\n          resolve();\r\n        },\r\n        error: reject\r\n      });\r\n    });\r\n  }\r\n\r\n  // Form submissions\r\n  async onSubmitFeedback() {\r\n    if (this.feedbackForm.valid && this.currentTask) {\r\n      try {\r\n        const formValue = this.feedbackForm.value;\r\n        \r\n        const feedbackData: TaskFeedbackRequest = {\r\n          feedbackText: formValue.feedbackText\r\n        };\r\n        \r\n        const response = await this.tasksService.submitTaskFeedback(this.currentTask.id, feedbackData).toPromise();\r\n        \r\n        if (response && response.success) {\r\n          await this.loadMyTasks();\r\n          this.closeModal('showFeedbackModal');\r\n          \r\n          // Show success confirmation\r\n          if (this.confirmationModal) {\r\n            const modalData = {\r\n              title: this.translate('tasks.myTasks.dialogs.feedbackSuccess'),\r\n              message: this.translate('tasks.myTasks.dialogs.feedbackSuccess'),\r\n              confirmText: this.translate('common.ok'),\r\n              cancelText: this.translate('common.close'),\r\n              type: 'info' as const\r\n            };\r\n            this.confirmationModal.show(modalData);\r\n            \r\n            // Handle the confirmation\r\n            const subscription = this.confirmationModal.confirm.subscribe(() => {\r\n              subscription.unsubscribe();\r\n            });\r\n          }\r\n        }\r\n      } catch (error) {\r\n        console.error('Error submitting feedback:', error);\r\n        this.showErrorMessage(this.translate('tasks.myTasks.dialogs.feedbackError'));\r\n      }\r\n    }\r\n  }\r\n\r\n  // Utility methods\r\n  translate(key: string): string {\r\n    return this.translationService.translate(key);\r\n  }\r\n\r\n  // Message display methods\r\n  showSuccessMessage(message: string) {\r\n    console.log('Success:', message);\r\n  }\r\n\r\n  showErrorMessage(message: string) {\r\n    console.log('Error:', message);\r\n  }\r\n\r\n  isRTL(): boolean {\r\n    return this.langService.isRTL();\r\n  }\r\n\r\n  getStatusClass(status: number): string {\r\n    const statusKey = this.STATUS_MAP[status as keyof typeof this.STATUS_MAP];\r\n    return statusKey ? `status-${statusKey}` : '';\r\n  }\r\n\r\n  getPriorityClass(priority: number): string {\r\n    const priorityKey = this.PRIORITY_MAP[priority as keyof typeof this.PRIORITY_MAP];\r\n    return priorityKey ? `priority-${priorityKey}` : '';\r\n  }\r\n\r\n  getPriorityText(priority: number): string {\r\n    const priorityKey = this.PRIORITY_MAP[priority as keyof typeof this.PRIORITY_MAP];\r\n    return priorityKey ? this.translate(`tasks.priority.${priorityKey}`) : '';\r\n  }\r\n\r\n  getStatusText(status: number): string {\r\n    const statusKey = this.STATUS_MAP[status as keyof typeof this.STATUS_MAP];\r\n    return statusKey ? this.translate(`tasks.status.${statusKey}`) : '';\r\n  }\r\n\r\n  formatDate(dateString: string): string {\r\n    if (!dateString) return '';\r\n    const date = new Date(dateString);\r\n    return date.toLocaleDateString(this.langService.getCurrentLang() === 'ar' ? 'ar-EG' : 'en-US');\r\n  }\r\n\r\n  // Close modals\r\n  closeModal(modalName: string) {\r\n    switch (modalName) {\r\n      case 'showFeedbackModal':\r\n        this.showFeedbackModal = false;\r\n        this.feedbackForm.reset();\r\n        break;\r\n      case 'showTaskDetailsModal':\r\n        this.showTaskDetailsModal = false;\r\n        this.currentTask = null;\r\n        this.currentTaskDetails = null;\r\n        this.currentTaskFeedback = [];\r\n        break;\r\n    }\r\n    \r\n    this.updateBodyClass();\r\n  }\r\n\r\n  // Check if task can have feedback submitted\r\n  canSubmitFeedback(task: Task): boolean {\r\n    return task.status === 0 || task.status === 1 || task.status === 5;\r\n  }\r\n\r\n  // Get tasks by status for display with pagination\r\n  getTasksByStatus(status: number): Task[] {\r\n    // Get all tasks of this status from all loaded data\r\n    const allStatusTasks = this.allTasksForCounting.filter(task => task.status === status);\r\n    \r\n    // Calculate pagination for this specific status\r\n    const tasksPerPage = 5; // 5 tasks per column per page\r\n    const startIndex = (this.currentPage - 1) * tasksPerPage;\r\n    const endIndex = startIndex + tasksPerPage;\r\n    \r\n    // Return the tasks for this status on the current page\r\n    return allStatusTasks.slice(startIndex, endIndex);\r\n  }\r\n\r\n  getStatusTaskCount(status: number): number {\r\n    return this.allTasksForCounting.filter(task => task.status === status).length;\r\n  }\r\n\r\n  // Pagination methods\r\n  goToPage(page: number) {\r\n    if (page >= 1 && page <= this.getMaxPagesForAnyStatus() && page !== this.currentPage) {\r\n      this.currentPage = page;\r\n      // No need to reload from server, just update the display\r\n    }\r\n  }\r\n  \r\n  getMaxPagesForAnyStatus(): number {\r\n    // Find the status with the most tasks to determine total pages\r\n    const maxTasks = Math.max(\r\n      this.getStatusTaskCount(0), // New\r\n      this.getStatusTaskCount(1), // In Progress\r\n      this.getStatusTaskCount(5)  // Returned\r\n    );\r\n    \r\n    return Math.ceil(maxTasks / 5); // 5 tasks per column per page\r\n  }\r\n\r\n  getPageNumbers(): number[] {\r\n    const pages: number[] = [];\r\n    const maxPages = this.getMaxPagesForAnyStatus();\r\n    const startPage = Math.max(1, this.currentPage - 2);\r\n    const endPage = Math.min(maxPages, this.currentPage + 2);\r\n    \r\n    for (let i = startPage; i <= endPage; i++) {\r\n      pages.push(i);\r\n    }\r\n    return pages;\r\n  }\r\n\r\n  getStartIndex(): number {\r\n    return (this.currentPage - 1) * 5 + 1; // 5 tasks per column per page\r\n  }\r\n\r\n  getEndIndex(): number {\r\n    const maxTasks = Math.max(\r\n      this.getStatusTaskCount(0),\r\n      this.getStatusTaskCount(1),\r\n      this.getStatusTaskCount(5)\r\n    );\r\n    return Math.min(this.currentPage * 5, maxTasks);\r\n  }\r\n\r\n  getTotalTasks(): number {\r\n    return this.totalCount;\r\n  }\r\n\r\n  getStatusTasksOnOtherPages(status: number): number {\r\n    // Calculate how many tasks of this status are on other pages\r\n    const totalForStatus = this.getStatusTaskCount(status);\r\n    const onCurrentPage = this.tasks.filter(task => task.status === status).length;\r\n    return Math.max(0, totalForStatus - onCurrentPage);\r\n  }\r\n}\r\n", "<div class=\"container-fluid py-4\" [dir]=\"isRTL() ? 'rtl' : 'ltr'\">\r\n\r\n  <!-- Header Section -->\r\n  <div class=\"d-flex justify-content-between align-items-start mb-4 top-header\">\r\n    <div class=\"text-end\">\r\n      <h1 class=\"page-title mb-1\" [attr.dir]=\"isRTL() ? 'rtl' : 'ltr'\">{{ translate('tasks.myTasks.title') }}</h1>\r\n      <p class=\"subtle\">{{ translate('tasks.myTasks.subtitle') }}</p>\r\n    </div>\r\n  </div>\r\n\r\n  <!-- Kanban Board -->\r\n  <div class=\"kanban\">\r\n    <!-- New Column -->\r\n    <div class=\"kanban-col\">\r\n      <div class=\"col-head blue\">\r\n        {{ translate('tasks.status.new') }}\r\n        <span class=\"task-count\">({{ getStatusTaskCount(0) }})</span>\r\n        <div class=\"task-count-detail\" *ngIf=\"getStatusTasksOnOtherPages(0) > 0\">\r\n        </div>\r\n      </div>\r\n      <div class=\"task-list\">\r\n        <div *ngFor=\"let task of getTasksByStatus(0)\" \r\n             class=\"task-card status-new compact\"\r\n             (click)=\"openTaskDetailsModal(task)\">\r\n          \r\n          <!-- Task Content -->\r\n          <div class=\"task-content\">\r\n            <h6 class=\"task-title mb-2\">{{ task.title }}</h6>\r\n            \r\n            \r\n            <div class=\"task-dates\">\r\n              <small class=\"text-muted d-block\">\r\n                <strong>{{ translate('tasks.task.createdAt') }}:</strong> {{ formatDate(task.createdAt) }}\r\n              </small>\r\n              <small class=\"text-muted d-block\">\r\n                <strong>{{ translate('tasks.task.dueDate') }}:</strong> {{ formatDate(task.dueDate) }}\r\n              </small>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- In Progress Column -->\r\n    <div class=\"kanban-col\">\r\n      <div class=\"col-head orange\">\r\n        {{ translate('tasks.status.inProgress') }}\r\n        <span class=\"task-count\">({{ getStatusTaskCount(1) }})</span>\r\n        <div class=\"task-count-detail\" *ngIf=\"getStatusTasksOnOtherPages(1) > 0\">\r\n        </div>\r\n      </div>\r\n      <div class=\"task-list\">\r\n        <div *ngFor=\"let task of getTasksByStatus(1)\" \r\n             class=\"task-card status-progress compact\"\r\n             (click)=\"openTaskDetailsModal(task)\">\r\n          \r\n          <div class=\"task-content\">\r\n            <h6 class=\"task-title mb-2\">{{ task.title | slice:0:20 }}{{ task.title.length > 20 ? '...' : '' }}</h6>\r\n            \r\n            <!-- <p class=\"task-desc\">{{ task.description | slice:0:50 }}{{ task.description.length > 50 ? '...' : '' }}</p> -->\r\n            \r\n            <!-- Removed department information -->\r\n            \r\n            <div class=\"task-dates\">\r\n              <small class=\"text-muted d-block\">\r\n                <strong>{{ translate('tasks.task.createdAt') }}:</strong> {{ formatDate(task.createdAt) }}\r\n              </small>\r\n              <small class=\"text-muted d-block\">\r\n                <strong>{{ translate('tasks.task.dueDate') }}:</strong> {{ formatDate(task.dueDate) }}\r\n              </small>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Returned Column -->\r\n    <div class=\"kanban-col\">\r\n      <div class=\"col-head purple\">\r\n        {{ translate('tasks.status.returned') }}\r\n        <span class=\"task-count\">({{ getStatusTaskCount(5) }})</span>\r\n        <div class=\"task-count-detail\" *ngIf=\"getStatusTasksOnOtherPages(5) > 0\">\r\n        </div>\r\n      </div>\r\n      <div class=\"task-list\">\r\n        <div *ngFor=\"let task of getTasksByStatus(5)\" \r\n             class=\"task-card status-returned compact\"\r\n             (click)=\"openTaskDetailsModal(task)\">\r\n          \r\n          <div class=\"task-content\">\r\n            <h6 class=\"task-title mb-2\">{{ task.title | slice:0:20 }}{{ task.title.length > 20 ? '...' : '' }}</h6>\r\n            \r\n            \r\n            <!-- Removed department information -->\r\n            \r\n            <div class=\"task-dates\">\r\n              <small class=\"text-muted d-block\">\r\n                <strong>{{ translate('tasks.task.createdAt') }}:</strong> {{ formatDate(task.createdAt) }}\r\n              </small>\r\n              <small class=\"text-muted d-block\">\r\n                <strong>{{ translate('tasks.task.dueDate') }}:</strong> {{ formatDate(task.dueDate) }}\r\n              </small>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <!-- Pagination Controls -->\r\n  <div class=\"pagination-container\" *ngIf=\"getMaxPagesForAnyStatus() > 1\">\r\n    <nav aria-label=\"Task pagination\">\r\n      <ul class=\"pagination justify-content-center\">\r\n        <!-- Previous Button -->\r\n        <li class=\"page-item\" [class.disabled]=\"currentPage === 1\">\r\n          <a class=\"page-link\" href=\"#\" (click)=\"goToPage(currentPage - 1); $event.preventDefault()\">\r\n            <div>{{translate('common.previous')}}</div>\r\n          </a>\r\n        </li>\r\n        \r\n        <!-- Page Numbers -->\r\n        <li class=\"page-item\" *ngFor=\"let page of getPageNumbers()\" [class.active]=\"page === currentPage\">\r\n          <a class=\"page-link\" href=\"#\" (click)=\"goToPage(page); $event.preventDefault()\">{{ page }}</a>\r\n        </li>\r\n        \r\n        <!-- Next Button -->\r\n        <li class=\"page-item\" [class.disabled]=\"currentPage === getMaxPagesForAnyStatus()\">\r\n          <a class=\"page-link\" href=\"#\" (click)=\"goToPage(currentPage + 1); $event.preventDefault()\">\r\n            <div>{{translate('common.next')}}</div>\r\n          </a>\r\n        </li>\r\n      </ul>\r\n    </nav>\r\n    \r\n    <div class=\"pagination-info text-center mt-3\">\r\n      <span class=\"text-muted\">\r\n        {{ translate('common.showing') }} {{ getStartIndex() }} - {{ getEndIndex() }} \r\n        {{ translate('common.of') }} {{ getTotalTasks() }} {{ translate('common.results') }}\r\n        <br>\r\n        <small>{{ translate('tasks.pagination.note') }}</small>\r\n      </span>\r\n    </div>\r\n  </div>\r\n\r\n  <!-- Loading Spinner -->\r\n  <div *ngIf=\"isLoading\" class=\"text-center py-5\">\r\n    <div class=\"spinner-border text-primary\" role=\"status\">\r\n      <span class=\"visually-hidden\">Loading...</span>\r\n    </div>\r\n  </div>\r\n\r\n  <!-- Task Details Modal -->\r\n  <div class=\"modal fade\" [class.show]=\"showTaskDetailsModal\" [style.display]=\"showTaskDetailsModal ? 'block' : 'none'\" tabindex=\"-1\" role=\"dialog\">\r\n    <div class=\"modal-dialog modal-xl\">\r\n      <div class=\"modal-content\">\r\n        <div class=\"modal-header\" [dir]=\"isRTL() ? 'rtl' : 'ltr'\">\r\n          <h5 class=\"modal-title\">{{ translate('tasks.task_details') }}</h5>\r\n        </div>\r\n        \r\n        <div class=\"modal-body\" *ngIf=\"currentTask\">\r\n          <div class=\"row\">\r\n            <div class=\"col-md-8\">\r\n              <h4 class=\"mb-3\">{{ currentTask.title }}</h4>\r\n              \r\n              <div class=\"row mb-4\">\r\n                <div class=\"col-md-6\">\r\n                  <div class=\"d-flex align-items-center mb-2\">\r\n                    <i class=\"fas fa-user me-2 text-muted\"></i>\r\n                    <span class=\"text-muted\">{{ translate('tasks.task.createdBy') }}:</span>\r\n                    <span class=\"ms-2\">{{ currentTask.createdByName }}</span>\r\n                  </div>\r\n                  \r\n                  <div class=\"d-flex align-items-center mb-2\">\r\n                    <i class=\"fas fa-clock me-2 text-muted\"></i>\r\n                    <span class=\"text-muted\">{{ translate('tasks.task.status') }}:</span>\r\n                    <span class=\"ms-2 badge\" [class]=\"getStatusClass(currentTask.status)\">\r\n                      {{ getStatusText(currentTask.status) }}\r\n                    </span>\r\n                  </div>\r\n                </div>\r\n\r\n                <div class=\"col-md-6\">\r\n                  <div class=\"d-flex align-items-center mb-2\">\r\n                    <i class=\"fas fa-calendar me-2 text-muted\"></i>\r\n                    <span class=\"text-muted\">{{ translate('tasks.task.duration') }}:</span>\r\n                    <span class=\"ms-2\">{{ formatDate(currentTask.createdAt) }} - {{ formatDate(currentTask.dueDate) }}</span>\r\n                  </div>\r\n                  \r\n                  <div class=\"d-flex align-items-center mb-2\">\r\n                    <i class=\"fas fa-users me-2 text-muted\"></i>\r\n                    <span class=\"text-muted\">{{ translate('tasks.task.assignee') }}:</span>\r\n                    <span class=\"ms-2\">{{ currentTask.assigneeName || translate('tasks.task.noAssignee') }}</span>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              \r\n              <div class=\"mb-4\">\r\n                <h6>{{ translate('tasks.task.description') }}</h6>\r\n                <div class=\"bg-light p-3 rounded\">\r\n                  {{ currentTask.description || translate('tasks.task.noSubtasks') }}\r\n                </div>\r\n              </div>\r\n              \r\n              <!-- Feedback Section -->\r\n              <div class=\"mb-4\">\r\n                <h6>{{ translate('tasks.task.feedback') }}</h6>\r\n                <div class=\"bg-light p-3 rounded\" *ngIf=\"currentTaskFeedback.length === 0\">\r\n                  {{ translate('tasks.task.noFeedback') }}\r\n                </div>\r\n                <div *ngFor=\"let feedback of currentTaskFeedback\" class=\"d-flex align-items-start p-2 border-bottom\">\r\n                  <div class=\"flex-grow-1\">\r\n                    <div class=\"fw-bold\">{{ feedback.feedbackText }}</div>\r\n                    <small class=\"text-muted\">{{ feedback.employeeName }} - {{ formatDate(feedback.createdAt) }}</small>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            \r\n            <div class=\"col-md-4\">\r\n              <div class=\"d-grid gap-2\">\r\n                <button class=\"btn btn-primary\" \r\n                        (click)=\"openFeedbackModal(currentTask)\"\r\n                        [disabled]=\"!canSubmitFeedback(currentTask)\">\r\n                  {{ translate('tasks.myTasks.actions.submitFeedback') }}\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        \r\n        <div class=\"modal-footer\">\r\n          <button type=\"button\" class=\"btn btn-secondary\" (click)=\"closeModal('showTaskDetailsModal')\">\r\n            {{ translate('common.close') }}\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <!-- Feedback Modal -->\r\n  <div class=\"modal fade\" [class.show]=\"showFeedbackModal\" [style.display]=\"showFeedbackModal ? 'block' : 'none'\" tabindex=\"-1\" role=\"dialog\">\r\n    <div class=\"modal-dialog\">\r\n      <div class=\"modal-content\">\r\n        <div class=\"modal-header\" [dir]=\"isRTL() ? 'rtl' : 'ltr'\">\r\n          <h5 class=\"modal-title\">{{ translate('tasks.myTasks.dialogs.submitFeedback') }}</h5>\r\n        </div>\r\n        \r\n        <form [formGroup]=\"feedbackForm\" (ngSubmit)=\"onSubmitFeedback()\">\r\n          <div class=\"modal-body\">\r\n            <div class=\"mb-3\">\r\n              <label class=\"form-label\">{{ translate('tasks.myTasks.form.feedbackText') }}</label>\r\n              <textarea class=\"form-control\" rows=\"4\" formControlName=\"feedbackText\"\r\n                        [placeholder]=\"translate('tasks.myTasks.form.feedbackPlaceholder')\"\r\n                        [class.is-invalid]=\"feedbackForm.get('feedbackText')?.invalid && feedbackForm.get('feedbackText')?.touched\">\r\n              </textarea>\r\n              <div class=\"invalid-feedback\" *ngIf=\"feedbackForm.get('feedbackText')?.invalid && feedbackForm.get('feedbackText')?.touched\">\r\n                <div *ngIf=\"feedbackForm.get('feedbackText')?.errors?.['minlength']\">\r\n                  {{ translate('tasks.myTasks.form.feedbackMinLength') }}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          \r\n          <div class=\"modal-footer\">\r\n           \r\n            <button type=\"submit\" class=\"btn btn-primary\">\r\n              {{ translate('common.submit') }}\r\n            </button>\r\n            <button type=\"button\" class=\"btn btn-secondary\" (click)=\"closeModal('showFeedbackModal')\">\r\n              {{ translate('common.cancel') }}\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <!-- Modal Backdrop -->\r\n  <div class=\"modal-backdrop fade\" [class.show]=\"showFeedbackModal || showTaskDetailsModal\" *ngIf=\"showFeedbackModal || showTaskDetailsModal\"></div>\r\n\r\n  <!-- Confirmation Modal -->\r\n  <app-confirmation-modal #confirmationModal></app-confirmation-modal>\r\n</div>", "import { Component, OnInit, ViewChild, ChangeDetectorRef } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule, FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { TasksService, CreateTaskRequest, UpdateTaskRequest } from '../../../services/tasks.service';\r\nimport { TranslationService } from '../../../services/translation.service';\r\nimport { LangService } from '../../../services/lang.service';\r\nimport { ConfirmationModalComponent } from '../../shared/confirmation-modal/confirmation-modal.component';\r\nimport { Task, TasksRoot } from '../../../models/tasks.model';\r\nimport { UsersService } from '../../../services/users.service';\r\n\r\n@Component({\r\n  selector: 'app-all-tasks',\r\n  standalone: false,\r\n  templateUrl: './all-tasks.component.html',\r\n  styleUrls: ['./all-tasks.component.css']\r\n})\r\nexport class AllTasksComponent implements OnInit {\r\n  @ViewChild('confirmationModal') confirmationModal!: ConfirmationModalComponent;\r\n\r\n  // Data\r\n  tasks: Task[] = [];\r\n  \r\n  // Language\r\n  currentLang = 'en';\r\n  \r\n  // UI state\r\n  isLoading = false;\r\n  \r\n  // Pagination state\r\n  currentPage = 1;\r\n  pageSize = 10;\r\n  totalCount = 0;\r\n  totalPages = 1;\r\n  pageSizeOptions = [5, 10, 15, 20];\r\n  \r\n  // Filters\r\n  filterForm!: FormGroup;\r\n  \r\n  // Tab state\r\n  selectedStatus: number | null = null;\r\n  allTasksForCounting: Task[] = []; // Store all tasks for counting by status\r\n  \r\n  // Modal visibility\r\n  showAddTaskModal = false;\r\n  showEditTaskModal = false;\r\n  showTaskDetailsModal = false;\r\n  \r\n  // Current task and details\r\n  currentTask: Task | null = null;\r\n  currentTaskDetails: Task | null = null;\r\n  \r\n  // Forms\r\n  addTaskForm!: FormGroup;\r\n  editTaskForm!: FormGroup;\r\n  \r\n  // Users for dropdowns\r\n  users: Array<{ id: string; name: string; departmentName: string }> = [];\r\n  \r\n  // Status mapping\r\n  readonly STATUS_MAP = {\r\n    0: 'new',\r\n    1: 'inProgress', \r\n    2: 'done',\r\n    3: 'stopped',\r\n    4: 'late',\r\n    5: 'returned',\r\n    6: 'review'\r\n  };\r\n  \r\n  readonly PRIORITY_MAP = {\r\n    1: 'high',\r\n    2: 'medium', \r\n    3: 'low'\r\n  };\r\n\r\n  constructor(\r\n    private tasksService: TasksService,\r\n    private usersService: UsersService,\r\n    private translationService: TranslationService,\r\n    private langService: LangService,\r\n    private fb: FormBuilder,\r\n    private cdr: ChangeDetectorRef\r\n  ) {\r\n    this.initializeForms();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.loadData();\r\n    this.langService.currentLang$.subscribe(lang => {\r\n      this.currentLang = lang;\r\n      this.cdr.detectChanges();\r\n    });\r\n  }\r\n\r\n  private initializeForms() {\r\n    this.filterForm = this.fb.group({\r\n      status: [''],\r\n      dueDateFrom: [''],\r\n      dueDateTo: ['']\r\n    });\r\n\r\n    this.addTaskForm = this.fb.group({\r\n      title: ['', [Validators.required, Validators.maxLength(30)]],\r\n      description: [''],\r\n      assigneeUserId: ['', Validators.required],\r\n      priority: ['', Validators.required],\r\n      dueDate: ['', Validators.required],\r\n      sourceType: [0]\r\n    });\r\n\r\n    this.editTaskForm = this.fb.group({\r\n      title: ['', [Validators.required, Validators.maxLength(40)]],\r\n      description: [''],\r\n      assigneeUserId: ['', Validators.required],\r\n      priority: ['', Validators.required],\r\n      dueDate: ['', Validators.required],\r\n      sourceType: [0]\r\n    });\r\n  }\r\n\r\n  private async loadData() {\r\n    this.isLoading = true;\r\n    try {\r\n      await Promise.all([\r\n        this.loadAllTasks(),\r\n        this.loadUsers()\r\n      ]);\r\n    } catch (error) {\r\n      console.error('Error loading data:', error);\r\n    } finally {\r\n      this.isLoading = false;\r\n    }\r\n  }\r\n\r\n  private async loadUsers() {\r\n    return new Promise<void>((resolve, reject) => {\r\n      this.usersService.getUserNames().subscribe({\r\n        next: (users) => {\r\n          this.users = users;\r\n          resolve();\r\n        },\r\n        error: reject\r\n      });\r\n    });\r\n  }\r\n\r\n  private async loadAllTasks() {\r\n    return new Promise<void>((resolve, reject) => {\r\n      const formValue = this.filterForm.value;\r\n      \r\n      // Use selectedStatus from tab if available, otherwise use form status\r\n      const statusFilter = this.selectedStatus !== null ? this.selectedStatus : (formValue.status || undefined);\r\n      \r\n      this.tasksService.getAllTasksWithFilters(\r\n        this.currentPage,\r\n        this.pageSize,\r\n        statusFilter,\r\n        formValue.dueDateFrom || undefined,\r\n        formValue.dueDateTo || undefined\r\n      ).subscribe({\r\n        next: (response) => {\r\n          if (response.success && response.data?.items) {\r\n            this.tasks = response.data.items;\r\n            this.totalCount = response.data.totalCount;\r\n            this.totalPages = Math.ceil(this.totalCount / this.pageSize);\r\n            \r\n            // Load all tasks for counting (first page with large page size)\r\n            this.loadAllTasksForCounting();\r\n          }\r\n          resolve();\r\n        },\r\n        error: reject\r\n      });\r\n    });\r\n  }\r\n\r\n  private async loadAllTasksForCounting() {\r\n    return new Promise<void>((resolve, reject) => {\r\n      const formValue = this.filterForm.value;\r\n      \r\n      this.tasksService.getAllTasksWithFilters(\r\n        1,\r\n        1000, // Large page size to get all tasks\r\n        undefined, // No status filter for counting\r\n        formValue.dueDateFrom || undefined,\r\n        formValue.dueDateTo || undefined\r\n      ).subscribe({\r\n        next: (response) => {\r\n          if (response.success && response.data?.items) {\r\n            this.allTasksForCounting = response.data.items;\r\n          }\r\n          resolve();\r\n        },\r\n        error: reject\r\n      });\r\n    });\r\n  }\r\n\r\n  // Filter methods\r\n  onFilterChange() {\r\n    this.currentPage = 1; // Reset to first page when filtering\r\n    this.selectedStatus = null; // Reset tab selection when using filters\r\n    this.loadData();\r\n  }\r\n\r\n  clearFilters() {\r\n    this.filterForm.reset();\r\n    this.selectedStatus = null; // Reset tab selection\r\n    this.currentPage = 1;\r\n    this.loadData();\r\n  }\r\n\r\n  // Tab methods\r\n  onStatusTabClick(status: number | null) {\r\n    this.selectedStatus = status;\r\n    this.currentPage = 1; // Reset to first page when changing tabs\r\n    this.loadData();\r\n  }\r\n\r\n  getStatusCount(status: number | null): number {\r\n    if (status === null) {\r\n      return this.allTasksForCounting.length;\r\n    }\r\n    return this.allTasksForCounting.filter(task => task.status === status).length;\r\n  }\r\n\r\n  // Pagination methods\r\n  goToPage(page: number) {\r\n    if (page >= 1 && page <= this.totalPages && page !== this.currentPage) {\r\n      this.currentPage = page;\r\n      this.loadData();\r\n    }\r\n  }\r\n\r\n  changePageSize(pageSize: number) {\r\n    this.pageSize = pageSize;\r\n    this.currentPage = 1;\r\n    this.loadData();\r\n  }\r\n\r\n  getPageNumbers(): number[] {\r\n    const pages: number[] = [];\r\n    const startPage = Math.max(1, this.currentPage - 2);\r\n    const endPage = Math.min(this.totalPages, this.currentPage + 2);\r\n    \r\n    for (let i = startPage; i <= endPage; i++) {\r\n      pages.push(i);\r\n    }\r\n    return pages;\r\n  }\r\n\r\n  getStartIndex(): number {\r\n    return (this.currentPage - 1) * this.pageSize + 1;\r\n  }\r\n\r\n  getEndIndex(): number {\r\n    return Math.min(this.currentPage * this.pageSize, this.totalCount);\r\n  }\r\n\r\n  // Utility methods\r\n  translate(key: string): string {\r\n    return this.translationService.translate(key);\r\n  }\r\n\r\n  isRTL(): boolean {\r\n    return this.langService.isRTL();\r\n  }\r\n\r\n  getStatusClass(status: number): string {\r\n    const statusKey = this.STATUS_MAP[status as keyof typeof this.STATUS_MAP];\r\n    return statusKey ? `status-${statusKey}` : '';\r\n  }\r\n\r\n  getPriorityClass(priority: number): string {\r\n    const priorityKey = this.PRIORITY_MAP[priority as keyof typeof this.PRIORITY_MAP];\r\n    return priorityKey ? `priority-${priorityKey}` : '';\r\n  }\r\n\r\n  getPriorityText(priority: number): string {\r\n    const priorityKey = this.PRIORITY_MAP[priority as keyof typeof this.PRIORITY_MAP];\r\n    return priorityKey ? this.translate(`tasks.priority.${priorityKey}`) : '';\r\n  }\r\n\r\n  getStatusText(status: number): string {\r\n    const statusKey = this.STATUS_MAP[status as keyof typeof this.STATUS_MAP];\r\n    return statusKey ? this.translate(`tasks.status.${statusKey}`) : '';\r\n  }\r\n\r\n  formatDate(dateString: string): string {\r\n    if (!dateString) return '';\r\n    const date = new Date(dateString);\r\n    return date.toLocaleDateString(this.langService.getCurrentLang() === 'ar' ? 'ar-EG' : 'en-US');\r\n  }\r\n\r\n  formatDateTime(dateString: string): string {\r\n    if (!dateString) return '';\r\n    const date = new Date(dateString);\r\n    return date.toLocaleString(this.langService.getCurrentLang() === 'ar' ? 'ar-EG' : 'en-US');\r\n  }\r\n\r\n  // Get status options for filter dropdown\r\n  getStatusOptions() {\r\n    return [\r\n      { value: '', text: this.translate('tasks.all_tasks.all_statuses') },\r\n      { value: 0, text: this.translate('tasks.status.new') },\r\n      { value: 1, text: this.translate('tasks.status.inProgress') },\r\n      { value: 2, text: this.translate('tasks.status.done') },\r\n      { value: 3, text: this.translate('tasks.status.stopped') },\r\n      { value: 4, text: this.translate('tasks.status.late') },\r\n      { value: 5, text: this.translate('tasks.status.returned') },\r\n      { value: 6, text: this.translate('tasks.status.review') }\r\n    ];\r\n  }\r\n\r\n  // Modal management methods\r\n  openAddTaskModal() {\r\n    this.closeAllModals();\r\n    this.showAddTaskModal = true;\r\n    this.addTaskForm.reset();\r\n    this.updateBodyClass();\r\n  }\r\n\r\n  openEditTaskModal(task: Task) {\r\n    this.closeAllModals();\r\n    this.currentTask = task;\r\n    this.showEditTaskModal = true;\r\n    this.editTaskForm.patchValue({\r\n      title: task.title,\r\n      description: task.description,\r\n      assigneeUserId: task.assigneeUserId,\r\n      priority: task.priority,\r\n      dueDate: task.dueDate.split('T')[0], // Format for date input\r\n      sourceType: task.sourceType\r\n    });\r\n    this.updateBodyClass();\r\n  }\r\n\r\n  openTaskDetailsModal(task: Task) {\r\n    this.closeAllModals();\r\n    this.currentTask = task;\r\n    this.showTaskDetailsModal = true;\r\n    this.loadTaskDetails(task.id);\r\n    this.updateBodyClass();\r\n  }\r\n\r\n  closeAllModals() {\r\n    this.showAddTaskModal = false;\r\n    this.showEditTaskModal = false;\r\n    this.showTaskDetailsModal = false;\r\n    this.updateBodyClass();\r\n  }\r\n\r\n  private updateBodyClass() {\r\n    const hasOpenModal = this.showAddTaskModal || this.showEditTaskModal || this.showTaskDetailsModal;\r\n    \r\n    if (hasOpenModal) {\r\n      document.body.classList.add('modal-open');\r\n    } else {\r\n      document.body.classList.remove('modal-open');\r\n    }\r\n  }\r\n\r\n  private async loadTaskDetails(taskId: number) {\r\n    return new Promise<void>((resolve, reject) => {\r\n      this.tasksService.getTaskById(taskId).subscribe({\r\n        next: (response) => {\r\n          if (response.success && response.data) {\r\n            this.currentTaskDetails = response.data;\r\n          }\r\n          resolve();\r\n        },\r\n        error: reject\r\n      });\r\n    });\r\n  }\r\n\r\n  // Form submissions\r\n  async onSubmitAddTask() {\r\n    if (this.addTaskForm.valid) {\r\n      try {\r\n        const formValue = this.addTaskForm.value;\r\n        const taskData: CreateTaskRequest = {\r\n          title: formValue.title,\r\n          description: formValue.description,\r\n          assigneeUserId: formValue.assigneeUserId,\r\n          priority: formValue.priority,\r\n          dueDate: new Date(formValue.dueDate).toISOString(),\r\n          sourceType: formValue.sourceType\r\n        };\r\n\r\n        const response = await this.tasksService.createTask(taskData).toPromise();\r\n        \r\n        if (response && response.success) {\r\n          this.closeAllModals();\r\n          this.loadData();\r\n          this.showSuccessMessage(this.translate('tasks.add_task_success'));\r\n        }\r\n      } catch (error) {\r\n        console.error('Error creating task:', error);\r\n        this.showErrorMessage(this.translate('tasks.add_task_error'));\r\n      }\r\n    }\r\n  }\r\n\r\n  async onSubmitEditTask() {\r\n    if (this.editTaskForm.valid && this.currentTask) {\r\n      try {\r\n        const formValue = this.editTaskForm.value;\r\n        const taskData: UpdateTaskRequest = {\r\n          title: formValue.title,\r\n          description: formValue.description,\r\n          assigneeUserId: formValue.assigneeUserId,\r\n          priority: formValue.priority,\r\n          dueDate: new Date(formValue.dueDate).toISOString(),\r\n          sourceType: formValue.sourceType\r\n        };\r\n\r\n        const response = await this.tasksService.updateTask(this.currentTask.id, taskData).toPromise();\r\n        \r\n        if (response && response.success) {\r\n          this.closeAllModals();\r\n          this.loadData();\r\n          this.showSuccessMessage(this.translate('tasks.edit_task_success'));\r\n        }\r\n      } catch (error) {\r\n        console.error('Error updating task:', error);\r\n        this.showErrorMessage(this.translate('tasks.edit_task_error'));\r\n      }\r\n    }\r\n  }\r\n\r\n  async deleteTask(task: Task) {\r\n    if (this.confirmationModal) {\r\n      const modalData = {\r\n        title: this.translate('tasks.delete_task'),\r\n        message: this.translate('tasks.confirm_delete_task').replace('{name}', task.title),\r\n        confirmText: this.translate('common.delete'),\r\n        cancelText: this.translate('common.cancel'),\r\n        type: 'delete' as const\r\n      };\r\n      \r\n      this.confirmationModal.show(modalData);\r\n      \r\n      const subscription = this.confirmationModal.confirm.subscribe(async () => {\r\n        try {\r\n          const response = await this.tasksService.deleteTask(task.id).toPromise();\r\n          \r\n          if (response && response.success) {\r\n            this.loadData();\r\n            this.showSuccessMessage(this.translate('tasks.delete_task_success'));\r\n          }\r\n        } catch (error) {\r\n          console.error('Error deleting task:', error);\r\n          this.showErrorMessage(this.translate('tasks.delete_task_error'));\r\n        }\r\n        \r\n        subscription.unsubscribe();\r\n      });\r\n    }\r\n  }\r\n\r\n  // Utility methods for messages\r\n  showSuccessMessage(message: string) {\r\n    console.log('Success:', message);\r\n    // You can implement toast notifications here\r\n  }\r\n\r\n  showErrorMessage(message: string) {\r\n    console.log('Error:', message);\r\n    // You can implement toast notifications here\r\n  }\r\n}\r\n", "<div class=\"all-tasks-container\" [dir]=\"isRTL() ? 'rtl' : 'ltr'\">\r\n  <!-- Loading Spinner -->\r\n  <div *ngIf=\"isLoading\" class=\"loading-overlay\">\r\n    <div class=\"loading-spinner\">\r\n      <div class=\"spinner\"></div>\r\n      <p>{{ translate('common.loading') }}</p>\r\n    </div>\r\n  </div>\r\n\r\n  <!-- Header Section -->\r\n  <div class=\"all-tasks-header mb-4\">\r\n    <div class=\"d-flex justify-content-between align-items-center\">\r\n      <h1 class=\"all-tasks-title\">{{ translate('tasks.all_tasks.title') }}</h1>\r\n      <div class=\"d-flex gap-2\">\r\n        <!-- Add Task Button -->\r\n        <button class=\"btn btn-primary\" (click)=\"openAddTaskModal()\">\r\n          <i class=\"bi bi-plus-circle me-2\"></i>\r\n          {{ translate('tasks.add_task') }}\r\n        </button>\r\n        \r\n        <!-- Page Size Selector -->\r\n        <!-- <div class=\"d-flex align-items-center gap-2\">\r\n          <label class=\"form-label mb-0\">{{ translate('tasks.all_tasks.items_per_page') }}:</label>\r\n          <select class=\"form-select form-select-sm\" style=\"width: auto;\" \r\n                  [value]=\"pageSize\" \r\n                  (change)=\"changePageSize(+$any($event.target).value)\">\r\n            <option *ngFor=\"let size of pageSizeOptions\" [value]=\"size\">{{ size }}</option>\r\n          </select>\r\n        </div> -->\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <!-- Search and Filters Section -->\r\n  <div class=\"search-section mb-4\">\r\n    <div class=\"row\">\r\n      <div class=\"col-md-4\">\r\n        <label class=\"form-label\">{{ translate('tasks.all_tasks.status') }}</label>\r\n        <select class=\"form-control\" formControlName=\"status\" (change)=\"onFilterChange()\">\r\n          <option *ngFor=\"let option of getStatusOptions()\" [value]=\"option.value\">\r\n            {{ option.text }}\r\n          </option>\r\n        </select>\r\n      </div>\r\n      <div class=\"col-md-3\">\r\n        <label class=\"form-label\">{{ translate('tasks.all_tasks.due_date_from') }}</label>\r\n        <input type=\"date\" class=\"form-control\" formControlName=\"dueDateFrom\" (change)=\"onFilterChange()\">\r\n      </div>\r\n      <div class=\"col-md-3\">\r\n        <label class=\"form-label\">{{ translate('tasks.all_tasks.due_date_to') }}</label>\r\n        <input type=\"date\" class=\"form-control\" formControlName=\"dueDateTo\" (change)=\"onFilterChange()\">\r\n      </div>\r\n      <div class=\"col-md-2\">\r\n        <label class=\"form-label\">&nbsp;</label>\r\n        <button type=\"button\" class=\"btn btn-outline-secondary w-100\" (click)=\"clearFilters()\">\r\n          <i class=\"bi bi-x-circle me-2\"></i>\r\n          {{ translate('tasks.all_tasks.clear_filters') }}\r\n        </button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <!-- Status Tabs Section -->\r\n  <div class=\"status-tabs-section mb-4\">\r\n    <div class=\"status-tabs-container\">\r\n      <ul class=\"nav nav-tabs status-tabs p-2\" role=\"tablist\">\r\n        <li class=\"nav-item\" role=\"presentation\">\r\n          <button\r\n            class=\"nav-link status-tab px-2\"\r\n            [class.active]=\"selectedStatus === null\"\r\n            (click)=\"onStatusTabClick(null)\"\r\n            type=\"button\"\r\n          >\r\n            <span class=\"px-2\">{{ translate('tasks.all_tasks.all_statuses') }}</span>\r\n            <span\r\n              class=\"badge bg-secondary ms-4 \"\r\n              *ngIf=\"getStatusCount(null) > 0\"\r\n              >{{ getStatusCount(null) }}</span\r\n            >\r\n          </button>\r\n        </li>\r\n        <li class=\"nav-item\" role=\"presentation\">\r\n          <button\r\n            class=\"nav-link status-tab\"\r\n            [class.active]=\"selectedStatus === 0\"\r\n            (click)=\"onStatusTabClick(0)\"\r\n            type=\"button\"\r\n          >\r\n            <i class=\"bi bi-plus-circle me-2\"></i>\r\n            <span class=\"px-2\">{{ translate('tasks.status.new') }}</span>\r\n            <span\r\n              class=\"badge bg-secondary ms-2\"\r\n              *ngIf=\"getStatusCount(0) > 0\"\r\n              >{{ getStatusCount(0) }}</span\r\n            >\r\n          </button>\r\n        </li>\r\n        <li class=\"nav-item\" role=\"presentation\">\r\n          <button\r\n            class=\"nav-link status-tab\"\r\n            [class.active]=\"selectedStatus === 1\"\r\n            (click)=\"onStatusTabClick(1)\"\r\n            type=\"button\"\r\n          >\r\n            <span class=\"px-2\">{{ translate('tasks.status.inProgress') }}</span>\r\n            <span\r\n              class=\"badge bg-secondary ms-2\"\r\n              *ngIf=\"getStatusCount(1) > 0\"\r\n              >{{ getStatusCount(1) }}</span\r\n            >\r\n          </button>\r\n        </li>\r\n        <li class=\"nav-item\" role=\"presentation\">\r\n          <button\r\n            class=\"nav-link status-tab\"\r\n            [class.active]=\"selectedStatus === 2\"\r\n            (click)=\"onStatusTabClick(2)\"\r\n            type=\"button\"\r\n          >\r\n            <i class=\"bi bi-check-circle me-2\"></i>\r\n            <span class=\"px-2\">{{ translate('tasks.status.done') }}</span>\r\n            <span\r\n              class=\"badge bg-secondary ms-2\"\r\n              *ngIf=\"getStatusCount(2) > 0\"\r\n              >{{ getStatusCount(2) }}</span\r\n            >\r\n          </button>\r\n        </li>\r\n        <li class=\"nav-item\" role=\"presentation\">\r\n          <button\r\n            class=\"nav-link status-tab\"\r\n            [class.active]=\"selectedStatus === 3\"\r\n            (click)=\"onStatusTabClick(3)\"\r\n            type=\"button\"\r\n          >\r\n            <i class=\"bi bi-pause-circle me-2\"></i>\r\n            <span class=\"px-2\">{{ translate('tasks.status.stopped') }}</span>\r\n            <span\r\n              class=\"badge bg-secondary ms-2\"\r\n              *ngIf=\"getStatusCount(3) > 0\"\r\n              >{{ getStatusCount(3) }}</span\r\n            >\r\n          </button>\r\n        </li>\r\n        <li class=\"nav-item\" role=\"presentation\">\r\n          <button\r\n            class=\"nav-link status-tab\"\r\n            [class.active]=\"selectedStatus === 4\"\r\n            (click)=\"onStatusTabClick(4)\"\r\n            type=\"button\"\r\n          >\r\n            <i class=\"bi bi-exclamation-triangle me-2\"></i>\r\n            <span class=\"px-2\">{{ translate('tasks.status.late') }}</span>\r\n            <span\r\n              class=\"badge bg-secondary ms-2\"\r\n              *ngIf=\"getStatusCount(4) > 0\"\r\n              >{{ getStatusCount(4) }}</span\r\n            >\r\n          </button>\r\n        </li>\r\n        <li class=\"nav-item\" role=\"presentation\">\r\n          <button\r\n            class=\"nav-link status-tab\"\r\n            [class.active]=\"selectedStatus === 5\"\r\n            (click)=\"onStatusTabClick(5)\"\r\n            type=\"button\"\r\n          >\r\n            <i class=\"bi bi-arrow-return-left me-2\"></i>\r\n            <span class=\"px-2\">{{ translate('tasks.status.returned') }}</span>\r\n            <span\r\n              class=\"badge bg-secondary ms-2\"\r\n              *ngIf=\"getStatusCount(5) > 0\"\r\n              >{{ getStatusCount(5) }}</span\r\n            >\r\n          </button>\r\n        </li>\r\n        <li class=\"nav-item\" role=\"presentation\">\r\n          <button\r\n            class=\"nav-link status-tab\"\r\n            [class.active]=\"selectedStatus === 6\"\r\n            (click)=\"onStatusTabClick(6)\"\r\n            type=\"button\"\r\n          >\r\n            <i class=\"bi bi-eye me-2\"></i>\r\n            <span class=\"px-2\">{{ translate('tasks.status.review') }}</span>\r\n            <span\r\n              class=\"badge bg-secondary ms-2\"\r\n              *ngIf=\"getStatusCount(6) > 0\"\r\n              >{{ getStatusCount(6) }}</span\r\n            >\r\n          </button>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  </div>\r\n\r\n  <!-- Results Summary -->\r\n  <div class=\"results-summary mb-3\">\r\n    <div class=\"d-flex justify-content-between align-items-center\">\r\n      <p class=\"mb-0 text-muted\">\r\n        {{ translate('tasks.all_tasks.showing') }} \r\n        {{ getStartIndex() }} - {{ getEndIndex() }} \r\n        {{ translate('tasks.all_tasks.of') }} \r\n        {{ totalCount }} \r\n        {{ translate('tasks.all_tasks.tasks') }}\r\n      </p>\r\n    </div>\r\n  </div>\r\n\r\n<!-- Tasks Cards -->\r\n<div class=\"tasks-cards-container\">\r\n  <div class=\"row g-4\">\r\n    <div class=\"col-lg-4 col-md-6 col-sm-12\" *ngFor=\"let task of tasks\">\r\n      <div class=\"task-card\">\r\n        <div class=\"card-header\">\r\n          <div class=\"d-flex justify-content-between align-items-start\">\r\n            <h6 class=\"task-title mb-0\">{{ task.title }}</h6>\r\n            <div class=\"task-badges\">\r\n              <span class=\"badge me-1\" [class]=\"getPriorityClass(task.priority)\">\r\n                {{ getPriorityText(task.priority) }}\r\n              </span>\r\n              <span class=\"badge\" [class]=\"getStatusClass(task.status)\">\r\n                {{ getStatusText(task.status) }}\r\n              </span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        \r\n        <div class=\"card-body\">\r\n          <!-- Description -->\r\n          <div class=\"task-description mb-3\" *ngIf=\"task.description\">\r\n            <p class=\"mb-0 text-muted\">{{ task.description }}</p>\r\n          </div>\r\n          \r\n          <!-- Assignee -->\r\n          <div class=\"task-info-item mb-2\">\r\n            <i class=\"bi bi-person-fill me-2 text-muted\"></i>\r\n            <span class=\"text-muted\">{{ translate('tasks.all_tasks.assignee') }}:</span>\r\n            <span class=\"ms-1\">{{ task.assigneeName || '-' }}</span>\r\n          </div>\r\n          \r\n          <!-- Department -->\r\n          <div class=\"task-info-item mb-2\">\r\n            <i class=\"bi bi-building me-2 text-muted\"></i>\r\n            <span class=\"text-muted\">{{ translate('tasks.all_tasks.department') }}:</span>\r\n            <span class=\"ms-1\">{{ task.deptName }}</span>\r\n          </div>\r\n          \r\n          <!-- Due Date -->\r\n          <div class=\"task-info-item mb-2\">\r\n            <i class=\"bi bi-calendar-date me-2 text-muted\"></i>\r\n            <span class=\"text-muted\">{{ translate('tasks.all_tasks.due_date') }}:</span>\r\n            <span class=\"ms-1\">{{ formatDate(task.dueDate) }}</span>\r\n          </div>\r\n          \r\n          <!-- Created Date -->\r\n          <div class=\"task-info-item mb-2\">\r\n            <i class=\"bi bi-clock me-2 text-muted\"></i>\r\n            <span class=\"text-muted\">{{ translate('tasks.all_tasks.created_at') }}:</span>\r\n            <span class=\"ms-1\">{{ formatDateTime(task.createdAt) }}</span>\r\n          </div>\r\n          \r\n          <!-- Action Buttons -->\r\n          <div class=\"task-actions\">\r\n            <button class=\"btn btn-sm btn-outline-primary me-2\" (click)=\"openTaskDetailsModal(task)\">\r\n              {{ translate('common.details') }}\r\n            </button>\r\n            <button class=\"btn btn-sm btn-outline-secondary me-2\" (click)=\"openEditTaskModal(task)\">\r\n              {{ translate('common.edit') }}\r\n            </button>\r\n            <button class=\"btn btn-sm btn-outline-danger\" (click)=\"deleteTask(task)\">\r\n              {{ translate('common.delete') }}\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <!-- Empty State -->\r\n  <div *ngIf=\"tasks.length === 0 && !isLoading\" class=\"empty-state text-center py-5\">\r\n    <div class=\"empty-icon mb-3\">\r\n      <i class=\"bi bi-list-task fa-3x text-muted\"></i>\r\n    </div>\r\n    <h5 class=\"text-muted\">{{ translate('tasks.all_tasks.no_tasks') }}</h5>\r\n    <p class=\"text-muted\">{{ translate('tasks.all_tasks.no_tasks_description') }}</p>\r\n  </div>\r\n</div>\r\n\r\n<!-- Pagination -->\r\n<div *ngIf=\"totalPages > 1\" class=\"pagination-container mt-4\">\r\n  <nav aria-label=\"Tasks pagination\">\r\n    <ul class=\"pagination justify-content-center\">\r\n      <!-- Previous Button -->\r\n      <li class=\"page-item\" [class.disabled]=\"currentPage === 1\">\r\n        <button class=\"page-link\" \r\n                (click)=\"goToPage(currentPage - 1)\"\r\n                [disabled]=\"currentPage === 1\">\r\n          <i class=\"fas fa-chevron-left\"></i>\r\n          {{ translate('common.previous') }}\r\n        </button>\r\n      </li>\r\n\r\n      <!-- Page Numbers -->\r\n      <li *ngFor=\"let page of getPageNumbers()\" \r\n          class=\"page-item\" \r\n          [class.active]=\"page === currentPage\">\r\n        <button class=\"page-link\" (click)=\"goToPage(page)\">\r\n          {{ page }}\r\n        </button>\r\n      </li>\r\n\r\n      <!-- Next Button -->\r\n      <li class=\"page-item\" [class.disabled]=\"currentPage === totalPages\">\r\n        <button class=\"page-link\" \r\n                (click)=\"goToPage(currentPage + 1)\"\r\n                [disabled]=\"currentPage === totalPages\">\r\n          {{ translate('common.next') }}\r\n          <i class=\"fas fa-chevron-right\"></i>\r\n        </button>\r\n      </li>\r\n    </ul>\r\n  </nav>\r\n\r\n  <!-- Page Info -->\r\n  <div class=\"text-center mt-2\">\r\n    <small class=\"text-muted\">\r\n      {{ translate('tasks.all_tasks.page') }} {{ currentPage }} {{ translate('tasks.all_tasks.of') }} {{ totalPages }}\r\n    </small>\r\n  </div>\r\n</div>\r\n\r\n<!-- Add Task Modal -->\r\n<div class=\"modal fade\" [class.show]=\"showAddTaskModal\" [style.display]=\"showAddTaskModal ? 'block' : 'none'\">\r\n  <div class=\"modal-dialog modal-lg\">\r\n    <div class=\"modal-content\">\r\n       <div class=\"modal-header\">\r\n         <button type=\"button\" class=\"btn-close\" (click)=\"closeAllModals()\"></button>\r\n         <h5 class=\"modal-title\">{{ translate('tasks.add_task') }}</h5>\r\n       </div>\r\n      <div class=\"modal-body\">\r\n        <form [formGroup]=\"addTaskForm\" (ngSubmit)=\"onSubmitAddTask()\">\r\n          <div class=\"row\">\r\n             <div class=\"col-md-12 mb-3\">\r\n               <label class=\"form-label\">{{ translate('tasks.all_tasks.title_column') }}</label>\r\n               <input type=\"text\" class=\"form-control\" formControlName=\"title\" \r\n                      [placeholder]=\"translate('tasks.title_placeholder')\">\r\n             </div>\r\n             <div class=\"col-md-12 mb-3\">\r\n               <label class=\"form-label\">{{ translate('tasks.all_tasks.description') }}</label>\r\n               <textarea class=\"form-control\" formControlName=\"description\" rows=\"3\"\r\n                         [placeholder]=\"translate('tasks.description_placeholder')\"></textarea>\r\n             </div>\r\n             <div class=\"col-md-6 mb-3\">\r\n               <label class=\"form-label\">{{ translate('tasks.all_tasks.assignee') }}</label>\r\n               <select class=\"form-select\" formControlName=\"assigneeUserId\">\r\n                 <option value=\"\">{{ translate('tasks.select_assignee') }}</option>\r\n                 <option *ngFor=\"let user of users\" [value]=\"user.id\">{{ user.name }}</option>\r\n               </select>\r\n             </div>\r\n             <div class=\"col-md-6 mb-3\">\r\n               <label class=\"form-label\">{{ translate('tasks.all_tasks.priority') }}</label>\r\n               <select class=\"form-select\" formControlName=\"priority\">\r\n                 <option value=\"\">{{ translate('tasks.select_priority') }}</option>\r\n                 <option value=\"1\">{{ translate('tasks.priority.high') }}</option>\r\n                 <option value=\"2\">{{ translate('tasks.priority.medium') }}</option>\r\n                 <option value=\"3\">{{ translate('tasks.priority.low') }}</option>\r\n               </select>\r\n             </div>\r\n             <div class=\"col-md-6 mb-3\">\r\n               <label class=\"form-label\">{{ translate('tasks.all_tasks.due_date') }}</label>\r\n               <input type=\"date\" class=\"form-control\" formControlName=\"dueDate\">\r\n             </div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n      <div class=\"modal-footer\">\r\n        <button type=\"button\" class=\"btn btn-secondary\" (click)=\"closeAllModals()\">\r\n          {{ translate('common.cancel') }}\r\n        </button>\r\n        <button type=\"button\" class=\"btn btn-primary\" (click)=\"onSubmitAddTask()\">\r\n          {{ translate('tasks.add_task') }}\r\n        </button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<!-- Edit Task Modal -->\r\n<div class=\"modal fade\" [class.show]=\"showEditTaskModal\" [style.display]=\"showEditTaskModal ? 'block' : 'none'\">\r\n  <div class=\"modal-dialog modal-lg\">\r\n    <div class=\"modal-content\">\r\n       <div class=\"modal-header\">\r\n         <button type=\"button\" class=\"btn-close\" (click)=\"closeAllModals()\"></button>\r\n         <h5 class=\"modal-title\">{{ translate('tasks.edit_task') }}</h5>\r\n       </div>\r\n      <div class=\"modal-body\">\r\n        <form [formGroup]=\"editTaskForm\" (ngSubmit)=\"onSubmitEditTask()\">\r\n          <div class=\"row\">\r\n             <div class=\"col-md-12 mb-3\">\r\n               <label class=\"form-label\">{{ translate('tasks.all_tasks.title_column') }}</label>\r\n               <input type=\"text\" class=\"form-control\" formControlName=\"title\">\r\n             </div>\r\n             <div class=\"col-md-12 mb-3\">\r\n               <label class=\"form-label\">{{ translate('tasks.all_tasks.description') }}</label>\r\n               <textarea class=\"form-control\" formControlName=\"description\" rows=\"3\"></textarea>\r\n             </div>\r\n             <div class=\"col-md-6 mb-3\">\r\n               <label class=\"form-label\">{{ translate('tasks.all_tasks.assignee') }}</label>\r\n               <select class=\"form-select\" formControlName=\"assigneeUserId\">\r\n                 <option value=\"\">{{ translate('tasks.select_assignee') }}</option>\r\n                 <option *ngFor=\"let user of users\" [value]=\"user.id\">{{ user.name }}</option>\r\n               </select>\r\n             </div>\r\n             <div class=\"col-md-6 mb-3\">\r\n               <label class=\"form-label\">{{ translate('tasks.all_tasks.priority') }}</label>\r\n               <select class=\"form-select\" formControlName=\"priority\">\r\n                 <option value=\"\">{{ translate('tasks.select_priority') }}</option>\r\n                 <option value=\"1\">{{ translate('tasks.priority.high') }}</option>\r\n                 <option value=\"2\">{{ translate('tasks.priority.medium') }}</option>\r\n                 <option value=\"3\">{{ translate('tasks.priority.low') }}</option>\r\n               </select>\r\n             </div>\r\n             <div class=\"col-md-6 mb-3\">\r\n               <label class=\"form-label\">{{ translate('tasks.all_tasks.due_date') }}</label>\r\n               <input type=\"date\" class=\"form-control\" formControlName=\"dueDate\">\r\n             </div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n      <div class=\"modal-footer\">\r\n        <button type=\"button\" class=\"btn btn-secondary\" (click)=\"closeAllModals()\">\r\n          {{ translate('common.cancel') }}\r\n        </button>\r\n        <button type=\"button\" class=\"btn btn-primary\" (click)=\"onSubmitEditTask()\">\r\n          {{ translate('tasks.edit_task') }}\r\n        </button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<!-- Task Details Modal -->\r\n<div class=\"modal fade task-details-modal\" [class.show]=\"showTaskDetailsModal\" [style.display]=\"showTaskDetailsModal ? 'block' : 'none'\">\r\n  <div class=\"modal-dialog modal-xl\">\r\n    <div class=\"modal-content\">\r\n      <div class=\"modal-header\">\r\n        <button type=\"button\" class=\"btn-close\" (click)=\"closeAllModals()\"></button>\r\n        <h5 class=\"modal-title\">{{ translate('tasks.task_details') }}</h5>\r\n      </div>\r\n      <div class=\"modal-body\" *ngIf=\"currentTaskDetails\">\r\n          <div class=\"task-details-header\">\r\n            <h4>{{ currentTaskDetails.title }}</h4>\r\n          </div>\r\n          \r\n          <div class=\"row\">\r\n            <div class=\"col-md-8\">\r\n              <div class=\"row mb-4\">\r\n                <div class=\"col-md-6\">\r\n                  <div class=\"d-flex align-items-center mb-3\">\r\n                    <i class=\"bi bi-person me-2 text-muted\"></i>\r\n                    <span class=\"text-muted\">{{ translate('tasks.all_tasks.assignee') }}:</span>\r\n                    <span class=\"ms-2 fw-medium\">{{ currentTaskDetails.assigneeName }}</span>\r\n                  </div>\r\n                  \r\n                <div class=\"d-flex align-items-center mb-3\">\r\n                  <i class=\"bi bi-clock me-2 text-muted\"></i>\r\n                  <span class=\"text-muted\">{{ translate('tasks.all_tasks.status') }}:</span>\r\n                  <span class=\"ms-2 badge\" [class]=\"getStatusClass(currentTaskDetails.status)\">\r\n                    {{ getStatusText(currentTaskDetails.status) }}\r\n                  </span>\r\n                </div>\r\n                  \r\n                  <div class=\"d-flex align-items-center mb-3\">\r\n                    <i class=\"bi bi-flag me-2 text-muted\"></i>\r\n                    <span class=\"text-muted\">{{ translate('tasks.all_tasks.priority') }}:</span>\r\n                    <span class=\"ms-2 badge\" [class]=\"getPriorityClass(currentTaskDetails.priority)\">\r\n                      {{ getPriorityText(currentTaskDetails.priority) }}\r\n                    </span>\r\n                  </div>\r\n                </div>\r\n\r\n                <div class=\"col-md-6\">\r\n                  <div class=\"d-flex align-items-center mb-3\">\r\n                    <i class=\"bi bi-building me-2 text-muted\"></i>\r\n                    <span class=\"text-muted\">{{ translate('tasks.all_tasks.department') }}:</span>\r\n                    <span class=\"ms-2 fw-medium\">{{ currentTaskDetails.deptName }}</span>\r\n                  </div>\r\n                  \r\n                  <div class=\"d-flex align-items-center mb-3\">\r\n                    <i class=\"bi bi-calendar-date me-2 text-muted\"></i>\r\n                    <span class=\"text-muted\">{{ translate('tasks.all_tasks.due_date') }}:</span>\r\n                    <span class=\"ms-2 fw-medium\">{{ formatDate(currentTaskDetails.dueDate) }}</span>\r\n                  </div>\r\n                  \r\n                  <div class=\"d-flex align-items-center mb-3\">\r\n                    <i class=\"bi bi-clock me-2 text-muted\"></i>\r\n                    <span class=\"text-muted\">{{ translate('tasks.all_tasks.created_at') }}:</span>\r\n                    <span class=\"ms-2 fw-medium\">{{ formatDateTime(currentTaskDetails.createdAt) }}</span>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <div class=\"mb-4\" *ngIf=\"currentTaskDetails.description\">\r\n                <h6 class=\"text-dark mb-3\">{{ translate('tasks.all_tasks.description') }}</h6>\r\n                <div class=\"p-3 bg-light rounded\">\r\n                  <p class=\"mb-0\">{{ currentTaskDetails.description }}</p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            \r\n            <div class=\"col-md-4\">\r\n              <div class=\"task-details-stats\">\r\n                <div class=\"card-header\">\r\n                  <h6>{{ translate('tasks.all_tasks.stats') }}</h6>\r\n                </div>\r\n                <div class=\"d-flex justify-content-between align-items-center mb-3\">\r\n                  <span class=\"text-muted\">{{ translate('tasks.all_tasks.updates') }}:</span>\r\n                  <span class=\"badge bg-primary fs-6\">{{ currentTaskDetails.updatesCount }}</span>\r\n                </div>\r\n                <div class=\"d-flex justify-content-between align-items-center\">\r\n                  <span class=\"text-muted\">{{ translate('tasks.all_tasks.attachments') }}:</span>\r\n                  <span class=\"badge bg-secondary fs-6\">{{ currentTaskDetails.attachmentsCount }}</span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"modal-footer\">\r\n        <button type=\"button\" class=\"btn btn-secondary\" (click)=\"closeAllModals()\">\r\n          {{ translate('common.close') }}\r\n        </button>\r\n        <button type=\"button\" class=\"btn btn-primary\" (click)=\"openEditTaskModal(currentTask!)\">\r\n          {{ translate('common.edit') }}\r\n        </button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<!-- Confirmation Modal -->\r\n<app-confirmation-modal #confirmationModal></app-confirmation-modal>\r\n", "import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { TasksComponent } from './tasks.component';\r\nimport { MyTasksComponent } from './my-tasks/my-tasks.component';\r\nimport { AllTasksComponent } from './all-tasks/all-tasks.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: TasksComponent\r\n  },\r\n  {\r\n    path: 'my-tasks',\r\n    component: MyTasksComponent\r\n  },\r\n  {\r\n    path: 'all-tasks',\r\n    component: AllTasksComponent\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class TasksRoutingModule { }\r\n", "import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\n\r\nimport { TasksRoutingModule } from './tasks-routing-module';\r\nimport { TasksComponent } from './tasks.component';\r\nimport { MyTasksComponent } from './my-tasks/my-tasks.component';\r\nimport { AllTasksComponent } from './all-tasks/all-tasks.component';\r\nimport { ConfirmationModalComponent } from '../shared/confirmation-modal/confirmation-modal.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    TasksComponent,\r\n    MyTasksComponent,\r\n    AllTasksComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    TasksRoutingModule,\r\n    ReactiveFormsModule,\r\n    FormsModule,\r\n    ConfirmationModalComponent\r\n  ]\r\n})\r\nexport class TasksModule { }\r\n"],
  "mappings": "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",
  "names": []
}
