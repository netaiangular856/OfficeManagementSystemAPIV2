{
  "version": 3,
  "sources": ["src/app/models/letter.model.ts", "src/app/services/letters.service.ts", "src/app/components/letters/letters-confirmation-modal/letters-confirmation-modal.component.ts", "src/app/components/letters/add-letter/add-letter.ts", "src/app/components/letters/add-letter/add-letter.html", "src/app/components/letters/edit-letter/edit-letter.ts", "src/app/components/letters/edit-letter/edit-letter.html", "src/app/components/letters/add-attachment/add-attachment.ts", "src/app/components/letters/add-attachment/add-attachment.html", "src/app/components/letters/edit-attachment/edit-attachment.ts", "src/app/components/letters/edit-attachment/edit-attachment.html", "src/app/components/letters/signature-pad-modal/signature-pad-modal.component.ts", "src/app/components/letters/signature-pad-modal/signature-pad-modal.component.html", "src/app/components/letters/letter-details-modal/letter-details-modal.component.ts", "src/app/components/letters/letter-details-modal/letter-details-modal.component.html", "src/app/components/letters/letters-list/letters-list.ts", "src/app/components/letters/letters-list/letters-list.html", "src/app/components/letters/rejection-modal/rejection-modal.component.ts", "src/app/components/letters/letters-approval/letters-approval.component.ts", "src/app/components/letters/letters-approval/letters-approval.component.html", "src/app/components/letters/letters-routing.module.ts", "src/app/components/letters/letters.module.ts"],
  "sourcesContent": ["export interface LetterModel {\r\n  success: boolean;\r\n  message: string;\r\n  data: LetterData;\r\n  errors: any[];\r\n}\r\n\r\nexport interface LetterData {\r\n  totalCount: number;\r\n  page: number;\r\n  pageSize: number;\r\n  items: LetterItem[];\r\n}\r\n\r\nexport interface LetterItem {\r\n  id: number;\r\n  direction: number; // 0: In, 1: Out\r\n  letterType: number; // 0: Internal, 1: External\r\n  subject: string;\r\n  body: string;\r\n  to: string;\r\n  cc: string;\r\n  bcc: string;\r\n  letterDate: string;\r\n  referenceNumbers: string;\r\n  status?: number; // 0: Draft, 1: PendingApproval, 2: Approved, 3: Rejected, 4: Sent\r\n  approvedByUserId?: string;\r\n  approvedByName?: string;\r\n  approvedAt?: string;\r\n  approvalNotes?: string;\r\n  signatureImagePath?: string;\r\n  isEmailSent?: boolean;\r\n  emailSentAt?: string;\r\n  pdfPath?: string;\r\n  createdByUserId: string;\r\n  createdByName: string;\r\n  createdAt: string;\r\n  updatedAt: string;\r\n  attachments: LetterAttachment[];\r\n  // For internal letters\r\n  internalUserId?: string;\r\n  internalUserName?: string;\r\n}\r\n\r\nexport interface LetterAttachment {\r\n  id: number;\r\n  letterId: number;\r\n  filePath: string;\r\n  fileType: string;\r\n  fileName: string;\r\n  uploadedByUserId: string;\r\n  uploadedByName: string;\r\n  description: string;\r\n  uploadedAt: string;\r\n  documentSource: number;\r\n}\r\n\r\nexport interface CreateLetterDto {\r\n  direction: number;\r\n  letterType: number; // 0: Internal, 1: External\r\n  subject: string;\r\n  body: string;\r\n  to: string;\r\n  cc: string;\r\n  bcc: string;\r\n  letterDate: string;\r\n  internalUserId?: string;\r\n}\r\n\r\nexport interface UpdateLetterDto extends CreateLetterDto {\r\n  id: number;\r\n}\r\n\r\nexport interface LetterSearchParams {\r\n  search?: string;\r\n  PageSize?: number;\r\n  PageNumber?: number;\r\n  Confidentiality?: number;\r\n  Direction?: number;\r\n  Status?: number;\r\n  From?: string;\r\n  To?: string;\r\n}\r\n\r\nexport interface AttachmentUploadDto {\r\n  file: File;\r\n  description?: string;\r\n  documentSource?: number;\r\n}\r\n\r\n// Enums for better type safety\r\nexport enum LetterDirection {\r\n  In = 0,\r\n  Out = 1,\r\n}\r\n\r\nexport enum LetterType {\r\n  Internal = 0,\r\n  External = 1,\r\n}\r\n\r\nexport enum LetterConfidentiality {\r\n  Public = 0,\r\n  Restricted = 1,\r\n  Secret = 2,\r\n}\r\n\r\nexport enum LetterStatus {\r\n  Draft = 0,\r\n  PendingApproval = 1,\r\n  Approved = 2,\r\n  Rejected = 3,\r\n  Sent = 4,\r\n}\r\n\r\n// New interfaces for approval workflow\r\nexport interface SubmitForApprovalResponse {\r\n  success: boolean;\r\n  message: string;\r\n  data?: any;\r\n  errors: any[];\r\n}\r\n\r\nexport interface ApproveLetterRequest {\r\n  signature?: File;\r\n}\r\n\r\nexport interface RejectLetterRequest {\r\n  rejectionReason?: string;\r\n}\r\n\r\nexport interface SendEmailRequest {\r\n  to?: string;\r\n  cc?: string;\r\n  bcc?: string;\r\n  subject?: string;\r\n  body?: string;\r\n}\r\n", "import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { environment } from '../../environments/environment';\r\nimport { Observable } from 'rxjs';\r\nimport {} from '../models/letter.model';\r\nimport {\r\n  LetterModel,\r\n  LetterItem,\r\n  CreateLetterDto,\r\n  UpdateLetterDto,\r\n  LetterSearchParams,\r\n  LetterAttachment,\r\n  AttachmentUploadDto,\r\n  SubmitForApprovalResponse,\r\n  ApproveLetterRequest,\r\n  RejectLetterRequest,\r\n  SendEmailRequest,\r\n} from '../models/letter.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class LettersService {\r\n  private apiUrl = `${environment.apiBaseUrl}/Letters`;\r\n\r\n  constructor(private http: HttpClient) {}\r\n\r\n  getAllLetters(params: LetterSearchParams = {}): Observable<LetterModel> {\r\n    let url = this.apiUrl;\r\n    const queryParams = new URLSearchParams();\r\n\r\n    if (params.search) queryParams.append('search', params.search);\r\n    if (params.PageSize)\r\n      queryParams.append('PageSize', params.PageSize.toString());\r\n    if (params.PageNumber)\r\n      queryParams.append('PageNumber', params.PageNumber.toString());\r\n    if (params.Confidentiality !== undefined)\r\n      queryParams.append('Confidentiality', params.Confidentiality.toString());\r\n    if (params.Direction !== undefined)\r\n      queryParams.append('Direction', params.Direction.toString());\r\n    if (params.Status !== undefined)\r\n      queryParams.append('Status', params.Status.toString());\r\n    if (params.From) queryParams.append('From', params.From);\r\n    if (params.To) queryParams.append('To', params.To);\r\n\r\n    if (queryParams.toString()) {\r\n      url += '?' + queryParams.toString();\r\n    }\r\n\r\n    console.log('API URL:', url);\r\n    console.log('Query params:', queryParams.toString());\r\n\r\n    return this.http.get<LetterModel>(url);\r\n  }\r\n\r\n  getLetter(id: number): Observable<{\r\n    success: boolean;\r\n    message: string;\r\n    data: LetterItem;\r\n    errors: any[];\r\n  }> {\r\n    return this.http.get<{\r\n      success: boolean;\r\n      message: string;\r\n      data: LetterItem;\r\n      errors: any[];\r\n    }>(`${this.apiUrl}/${id}`);\r\n  }\r\n\r\n  createLetter(letter: CreateLetterDto): Observable<any> {\r\n    return this.http.post<any>(this.apiUrl, letter);\r\n  }\r\n\r\n  updateLetter(id: number, letter: UpdateLetterDto): Observable<any> {\r\n    return this.http.put<any>(`${this.apiUrl}/${id}`, letter);\r\n  }\r\n\r\n  deleteLetter(id: number): Observable<any> {\r\n    return this.http.delete<any>(`${this.apiUrl}/${id}`);\r\n  }\r\n\r\n  // Attachment methods\r\n  addAttachment(\r\n    letterId: number,\r\n    attachment: AttachmentUploadDto\r\n  ): Observable<any> {\r\n    const formData = new FormData();\r\n    formData.append('File', attachment.file);\r\n    if (attachment.description) {\r\n      formData.append('Description', attachment.description);\r\n    }\r\n    if (attachment.documentSource !== undefined) {\r\n      formData.append('DocumentSource', attachment.documentSource.toString());\r\n    }\r\n\r\n    return this.http.post<any>(\r\n      `${this.apiUrl}/${letterId}/attachments`,\r\n      formData\r\n    );\r\n  }\r\n\r\n  deleteAttachment(letterId: number, attachmentId: number): Observable<any> {\r\n    return this.http.delete<any>(\r\n      `${this.apiUrl}/${letterId}/attachments/${attachmentId}`\r\n    );\r\n  }\r\n\r\n  updateAttachment(\r\n    letterId: number,\r\n    attachmentId: number,\r\n    attachment: Partial<LetterAttachment>\r\n  ): Observable<any> {\r\n    return this.http.put<any>(\r\n      `${this.apiUrl}/${letterId}/attachments/${attachmentId}`,\r\n      attachment\r\n    );\r\n  }\r\n\r\n  getLetterAttachments(letterId: number): Observable<any> {\r\n    return this.http.get<any>(`${this.apiUrl}/${letterId}/attachments`);\r\n  }\r\n\r\n  // New approval workflow methods\r\n  submitForApproval(id: number): Observable<SubmitForApprovalResponse> {\r\n    return this.http.post<SubmitForApprovalResponse>(\r\n      `${this.apiUrl}/${id}/submit-for-approval`,\r\n      {}\r\n    );\r\n  }\r\n\r\n  getLettersForApproval(): Observable<LetterModel> {\r\n    return this.http.get<LetterModel>(`${this.apiUrl}/approval`);\r\n  }\r\n\r\n  approveLetter(\r\n    id: number,\r\n    signature: File,\r\n    approvalNotes?: string\r\n  ): Observable<any> {\r\n    const formData = new FormData();\r\n    formData.append('SignatureImage', signature);\r\n    if (approvalNotes && approvalNotes.trim()) {\r\n      formData.append('ApprovalNotes', approvalNotes.trim());\r\n    }\r\n    return this.http.post<any>(`${this.apiUrl}/${id}/approve`, formData);\r\n  }\r\n\r\n  rejectLetter(id: number, rejectionReason?: string): Observable<any> {\r\n    const body = rejectionReason ? { rejectionReason } : {};\r\n    return this.http.post<any>(`${this.apiUrl}/${id}/reject`, body);\r\n  }\r\n\r\n  sendEmail(id: number, emailData?: SendEmailRequest): Observable<any> {\r\n    return this.http.post<any>(\r\n      `${this.apiUrl}/${id}/send-email`,\r\n      emailData || {}\r\n    );\r\n  }\r\n\r\n  downloadLetterPdf(letterId: number): Observable<Blob> {\r\n    return this.http.get(`${this.apiUrl}/${letterId}/download-pdf`, {\r\n      responseType: 'blob',\r\n    });\r\n  }\r\n}\r\n", "import { Component, EventEmitter, Input, Output, OnDestroy } from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\nimport { TranslationService } from '../../../services/translation.service';\r\n\r\nexport interface ConfirmationData {\r\n  title: string;\r\n  message: string;\r\n  confirmText: string;\r\n  cancelText: string;\r\n  type: 'delete' | 'warning' | 'info' | 'success';\r\n}\r\n\r\n@Component({\r\n  selector: 'app-letters-confirmation-modal',\r\n  standalone: false,\r\n  template: `\r\n    <div class=\"modal fade\" [class.show]=\"isVisible\" [style.display]=\"isVisible ? 'block' : 'none'\" \r\n         tabindex=\"-1\" role=\"dialog\" [attr.aria-hidden]=\"!isVisible\">\r\n      <div class=\"modal-dialog modal-dialog-centered\" role=\"document\">\r\n        <div class=\"modal-content\">\r\n          <div class=\"modal-header\" style=\"background: #D4AF5F !important\" [class.bg-danger]=\"data?.type === 'delete'\" \r\n               [class.bg-warning]=\"data?.type === 'warning'\" \r\n               [class.bg-info]=\"data?.type === 'info'\"\r\n               [class.bg-success]=\"data?.type === 'success'\"\r\n               [dir]=\"isRTL() ? 'rtl' : 'ltr'\"\r\n               [class.rtl-header]=\"isRTL()\"\r\n               [class.ltr-header]=\"!isRTL()\">\r\n            <h5 class=\"modal-title text-white\" [class.text-end]=\"isRTL()\" [class.text-start]=\"!isRTL()\" [class.rtl-title]=\"isRTL()\" [class.ltr-title]=\"!isRTL()\">{{ data?.title }}</h5>\r\n          </div>\r\n          <div class=\"modal-body\">\r\n            <div [innerHTML]=\"data?.message\"></div>\r\n          </div>\r\n          <div class=\"modal-footer\">\r\n            <button type=\"button\" class=\"btn btn-secondary\" (click)=\"onCancel()\" *ngIf=\"data?.cancelText\">\r\n              {{ data?.cancelText }}\r\n            </button>\r\n            <button type=\"button\" \r\n                    [class]=\"'btn ' + (data?.type === 'delete' ? 'btn-danger' : 'btn-primary')\" \r\n                    (click)=\"onConfirm()\">\r\n              {{ data?.confirmText }}\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"modal-backdrop fade\" [class.show]=\"isVisible\" *ngIf=\"isVisible\"></div>\r\n  `,\r\n  styles: [`\r\n    .modal.show {\r\n      display: block !important;\r\n    }\r\n    .modal-backdrop.show {\r\n      opacity: 0.5;\r\n    }\r\n    \r\n    /* RTL Support for modal header */\r\n    .modal-header[dir=\"rtl\"],\r\n    .rtl-header {\r\n      flex-direction: row-reverse !important;\r\n      justify-content: flex-end !important;\r\n      display: flex !important;\r\n      align-items: center !important;\r\n    }\r\n    \r\n    .modal-header[dir=\"rtl\"] .modal-title,\r\n    .rtl-title {\r\n      text-align: right !important;\r\n      margin-left: auto !important;\r\n      margin-right: 0 !important;\r\n      flex: 1 !important;\r\n    }\r\n    \r\n    .modal-header[dir=\"ltr\"],\r\n    .ltr-header {\r\n      flex-direction: row !important;\r\n      justify-content: flex-start !important;\r\n      display: flex !important;\r\n      align-items: center !important;\r\n    }\r\n    \r\n    .modal-header[dir=\"ltr\"] .modal-title,\r\n    .ltr-title {\r\n      text-align: left !important;\r\n      margin-left: 0 !important;\r\n      margin-right: auto !important;\r\n      flex: 1 !important;\r\n    }\r\n  `]\r\n})\r\nexport class LettersConfirmationModalComponent implements OnDestroy {\r\n  @Input() data: ConfirmationData | null = null;\r\n  @Output() confirm = new EventEmitter<void>();\r\n  @Output() cancel = new EventEmitter<void>();\r\n  \r\n  isVisible = false;\r\n  private confirmSubject = new Subject<void>();\r\n  private cancelSubject = new Subject<void>();\r\n  private resolvePromise: ((value: boolean) => void) | null = null;\r\n\r\n  constructor(private translationService: TranslationService) {}\r\n\r\n  isRTL(): boolean {\r\n    return this.translationService.isRTL();\r\n  }\r\n\r\n  show(data: ConfirmationData): Promise<boolean> {\r\n    this.data = data;\r\n    this.isVisible = true;\r\n    document.body.classList.add('modal-open');\r\n    \r\n    return new Promise<boolean>((resolve) => {\r\n      this.resolvePromise = resolve;\r\n    });\r\n  }\r\n\r\n  hide() {\r\n    this.isVisible = false;\r\n    document.body.classList.remove('modal-open');\r\n    this.data = null;\r\n  }\r\n\r\n  onConfirm() {\r\n    this.confirm.emit();\r\n    this.confirmSubject.next();\r\n    if (this.resolvePromise) {\r\n      this.resolvePromise(true);\r\n      this.resolvePromise = null;\r\n    }\r\n    this.hide();\r\n  }\r\n\r\n  onCancel() {\r\n    this.cancel.emit();\r\n    this.cancelSubject.next();\r\n    if (this.resolvePromise) {\r\n      this.resolvePromise(false);\r\n      this.resolvePromise = null;\r\n    }\r\n    this.hide();\r\n  }\r\n\r\n  // Get the confirm subject for subscription\r\n  get confirm$() {\r\n    return this.confirmSubject.asObservable();\r\n  }\r\n\r\n  // Get the cancel subject for subscription\r\n  get cancel$() {\r\n    return this.cancelSubject.asObservable();\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.confirmSubject.complete();\r\n    this.cancelSubject.complete();\r\n  }\r\n}\r\n", "import { AfterViewInit, Component, ElementRef, ViewChild, EventEmitter, Output, ChangeDetectorRef } from '@angular/core';\r\nimport { LettersService } from '../../../services/letters.service';\r\nimport { AbstractControl, FormBuilder, FormGroup, ValidationErrors, Validators } from '@angular/forms';\r\nimport { TranslationService } from '../../../services/translation.service';\r\nimport { LettersConfirmationModalComponent } from '../letters-confirmation-modal/letters-confirmation-modal.component';\r\nimport { CreateLetterDto, LetterDirection, LetterConfidentiality, LetterStatus, LetterType } from '../../../models/letter.model';\r\nimport { UsersService } from '../../../services/users.service';\r\n\r\n@Component({\r\n  selector: 'app-add-letter',\r\n  standalone: false,\r\n  templateUrl: './add-letter.html',\r\n  styleUrl: './add-letter.css'\r\n})\r\nexport class AddLetter implements AfterViewInit {\r\n  @ViewChild('confirmationModal') confirmationModal!: LettersConfirmationModalComponent;\r\n  @Output() letterAdded = new EventEmitter<void>();\r\n  \r\n  // Custom modal properties\r\n  isOpen = false;\r\n  \r\n  addForm!: FormGroup;\r\n  users: Array<{ id: string; name: string; departmentName: string }> = [];\r\n  isLoadingUsers = false;\r\n  currentLetterType: number = LetterType.External;\r\n  \r\n  constructor(\r\n    private lettersService: LettersService,\r\n    private fb: FormBuilder,\r\n    private translationService: TranslationService,\r\n    private usersService: UsersService,\r\n    private cdr: ChangeDetectorRef\r\n  ) {}\r\n\r\n  ngAfterViewInit(): void {\r\n    // No Bootstrap modal needed\r\n  }\r\n  \r\n  open() { \r\n    this.isOpen = true;\r\n    // Load users for internal letters\r\n    this.loadUsers();\r\n    \r\n    // Reset form when opening\r\n    this.addForm.reset();\r\n    // Set default values\r\n    this.currentLetterType = LetterType.External;\r\n    this.addForm.patchValue({\r\n      direction: LetterDirection.In,\r\n      letterType: LetterType.External,\r\n      letterDate: new Date().toISOString().split('T')[0]\r\n    });\r\n    \r\n    // Set initial validation for external letters (default)\r\n    const toControl = this.addForm.get('to');\r\n    const internalUserIdControl = this.addForm.get('internalUserId');\r\n    \r\n    toControl?.setValidators([Validators.required, Validators.email]);\r\n    internalUserIdControl?.clearValidators();\r\n    \r\n    toControl?.updateValueAndValidity();\r\n    internalUserIdControl?.updateValueAndValidity();\r\n  }\r\n  \r\n  close() { \r\n    this.isOpen = false;\r\n    // Reset form when closing\r\n    this.addForm.reset();\r\n  }\r\n\r\n  // Handle backdrop click\r\n  onBackdropClick(event: Event) {\r\n    if (event.target === event.currentTarget) {\r\n      this.close();\r\n    }\r\n  }\r\n\r\n  readonly directions = [\r\n    { key: LetterDirection.In, value: \"Incoming\" },\r\n    { key: LetterDirection.Out, value: \"Outgoing\" }\r\n  ];\r\n\r\n  readonly letterTypes = [\r\n    { key: LetterType.Internal, value: \"Internal\" },\r\n    { key: LetterType.External, value: \"External\" }\r\n  ];\r\n\r\n  readonly confidentialities = [\r\n    { key: LetterConfidentiality.Public, value: \"Public\" },\r\n    { key: LetterConfidentiality.Restricted, value: \"Restricted\" },\r\n    { key: LetterConfidentiality.Secret, value: \"Secret\" }\r\n  ];\r\n\r\n  readonly statuses = [\r\n    { key: LetterStatus.Draft, value: \"Draft\" },\r\n    { key: LetterStatus.PendingApproval, value: \"PendingApproval\" },\r\n    { key: LetterStatus.Approved, value: \"Approved\" },\r\n    { key: LetterStatus.Rejected, value: \"Rejected\" },\r\n    { key: LetterStatus.Sent, value: \"Sent\" }\r\n  ];\r\n\r\n  ngOnInit() {\r\n    this.initializeForm();\r\n  }\r\n\r\n  initializeForm() {\r\n    this.addForm = this.fb.group({\r\n      direction: ['', Validators.required],\r\n      letterType: ['', Validators.required],\r\n      subject: ['', [Validators.required, Validators.minLength(3), Validators.maxLength(200)]],\r\n      body: ['', [Validators.required, Validators.minLength(10)]],\r\n      to: ['', [Validators.required, Validators.email]],\r\n      cc: [''],\r\n      bcc: [''],\r\n      letterDate: ['', Validators.required],\r\n      internalUserId: ['']\r\n    });\r\n\r\n    // Add conditional validation for 'to' field based on letter type\r\n    this.addForm.get('letterType')?.valueChanges.subscribe(letterType => {\r\n      this.currentLetterType = parseInt(letterType, 10); // Convert string to number\r\n      const toControl = this.addForm.get('to');\r\n      const internalUserIdControl = this.addForm.get('internalUserId');\r\n      \r\n      if (this.currentLetterType === LetterType.Internal) {\r\n        // For internal letters, 'to' is not required, internalUserId is required\r\n        toControl?.clearValidators();\r\n        toControl?.setValue(''); // Clear the 'to' field value\r\n        internalUserIdControl?.setValidators([Validators.required]);\r\n      } else {\r\n        // For external letters, 'to' is required, internalUserId is not required\r\n        toControl?.setValidators([Validators.required, Validators.email]);\r\n        internalUserIdControl?.clearValidators();\r\n        internalUserIdControl?.setValue(''); // Clear the internal user field value\r\n      }\r\n      \r\n      toControl?.updateValueAndValidity();\r\n      internalUserIdControl?.updateValueAndValidity();\r\n      \r\n      // Force change detection to update the template\r\n      this.cdr.detectChanges();\r\n    });\r\n  }\r\n\r\n  isFieldValid(field: string) {\r\n    const control = this.addForm.get(field);\r\n    return control?.touched && control?.invalid;\r\n  }\r\n\r\n  hasServerError(field: string) {\r\n    const control = this.addForm.get(field);\r\n    return control?.errors?.['serverError'];\r\n  }\r\n\r\n  getServerErrorMessage(field: string) {\r\n    const control = this.addForm.get(field);\r\n    return control?.errors?.['serverError'] || '';\r\n  }\r\n\r\n  loadUsers() {\r\n    this.isLoadingUsers = true;\r\n    this.usersService.getUserNames().subscribe({\r\n      next: (users) => {\r\n        this.users = users;\r\n        this.isLoadingUsers = false;\r\n      },\r\n      error: (error) => {\r\n        console.error('Error loading users:', error);\r\n        this.isLoadingUsers = false;\r\n      }\r\n    });\r\n  }\r\n\r\n  getErrorMessage(field: string) {\r\n    const control = this.addForm.get(field);\r\n    if (!control?.errors) return '';\r\n    \r\n    if (control.errors['required']) {\r\n      return this.translate('common.field_required');\r\n    }\r\n    if (control.errors['email']) {\r\n      return this.translate('common.invalid_email');\r\n    }\r\n    if (control.errors['minlength']) {\r\n      const requiredLength = control.errors['minlength']['requiredLength'];\r\n      if (requiredLength === 3) {\r\n        return this.translate('letters.min_length_3');\r\n      } else if (requiredLength === 10) {\r\n        return this.translate('letters.min_length_10');\r\n      }\r\n      return `Minimum length is ${requiredLength} characters`;\r\n    }\r\n    if (control.errors['maxlength']) {\r\n      const requiredLength = control.errors['maxlength']['requiredLength'];\r\n      if (requiredLength === 200) {\r\n        return this.translate('letters.max_length_200');\r\n      } else if (requiredLength === 500) {\r\n        return this.translate('letters.max_length_500');\r\n      }\r\n      return `Maximum length is ${requiredLength} characters`;\r\n    }\r\n    return 'Invalid field';\r\n  }\r\n\r\n  onSubmit() {\r\n    if (this.addForm.invalid) {\r\n      this.addForm.markAllAsTouched();\r\n      return;\r\n    }\r\n\r\n    const formValue = this.addForm.value;\r\n    \r\n    // Ensure all required fields are included and properly formatted\r\n    const letterData: CreateLetterDto = {\r\n      direction: parseInt(formValue.direction),\r\n      letterType: parseInt(formValue.letterType),\r\n      subject: formValue.subject,\r\n      body: formValue.body,\r\n      to: formValue.to || '',\r\n      cc: formValue.cc || '',\r\n      bcc: formValue.bcc || '',\r\n      letterDate: new Date(formValue.letterDate).toISOString(),\r\n      internalUserId: formValue.internalUserId || undefined\r\n    };\r\n\r\n    console.log('Submitting letter data:', letterData); // Debug log\r\n\r\n    this.lettersService.createLetter(letterData).subscribe({\r\n      next: (res) => {\r\n        this.showSuccessMessage(this.translate('letters.add_letter_success'));\r\n        this.close();\r\n        this.addForm.reset();\r\n        this.letterAdded.emit(); // Notify parent component\r\n      },\r\n      error: (error) => {\r\n        console.error('Error adding letter:', error);\r\n        this.handleApiErrors(error);\r\n      }\r\n    });\r\n  }\r\n\r\n  private handleApiErrors(error: any) {\r\n    console.log('Full error response:', error); // Debug log\r\n    \r\n    if (error.error?.errors) {\r\n      // Handle validation errors by setting them on form controls\r\n      const errors = error.error.errors;\r\n      console.log('API validation errors:', errors); // Debug log\r\n      \r\n      Object.keys(errors).forEach(fieldName => {\r\n        const control = this.addForm.get(this.getFormFieldName(fieldName));\r\n        if (control) {\r\n          control.setErrors({ serverError: errors[fieldName][0] });\r\n          control.markAsTouched();\r\n        } else {\r\n          console.warn(`Form control not found for field: ${fieldName}`); // Debug log\r\n        }\r\n      });\r\n    } else {\r\n      // Show generic error in alert\r\n      let errorMessage = 'Unknown error occurred';\r\n      if (error.error?.message) {\r\n        errorMessage = error.error.message;\r\n      } else if (error.message) {\r\n        errorMessage = error.message;\r\n      }\r\n      alert(this.translationService.translate('common.error') + ': ' + errorMessage);\r\n    }\r\n  }\r\n\r\n  private getFormFieldName(apiFieldName: string): string {\r\n    // Map API field names (capitalized) to form field names (lowercase)\r\n    const fieldMapping: { [key: string]: string } = {\r\n      'Direction': 'direction',\r\n      'Subject': 'subject',\r\n      'Body': 'body',\r\n      'Confidentiality': 'confidentiality',\r\n      'To': 'to',\r\n      'Cc': 'cc',\r\n      'Bcc': 'bcc',\r\n      'LetterDate': 'letterDate',\r\n      'Status': 'status',\r\n      'ReferenceNumbers': 'referenceNumbers'\r\n    };\r\n    return fieldMapping[apiFieldName] || apiFieldName.toLowerCase();\r\n  }\r\n\r\n  translate(key: string): string {\r\n    return this.translationService.translate(key);\r\n  }\r\n\r\n  isRTL(): boolean {\r\n    return this.translationService.isRTL();\r\n  }\r\n\r\n  showSuccessMessage(message: string) {\r\n    const successData = {\r\n      title: this.translate('common.success'),\r\n      message: message,\r\n      confirmText: this.translate('common.ok'),\r\n      cancelText: '',\r\n      type: 'info' as const\r\n    };\r\n    this.confirmationModal.show(successData);\r\n  }\r\n\r\n  getDirectionLabel(direction: number): string {\r\n    return this.translate('letters.directions.' + direction);\r\n  }\r\n\r\n  getConfidentialityLabel(confidentiality: number): string {\r\n    return this.translate('letters.confidentialities.' + confidentiality);\r\n  }\r\n\r\n  getStatusLabel(status: number): string {\r\n    return this.translate('letters.statuses.' + status);\r\n  }\r\n\r\n  getLetterTypeLabel(letterType: number): string {\r\n    return this.translate('letters.letter_types.' + letterType);\r\n  }\r\n\r\n  isInternalLetter(): boolean {\r\n    return this.currentLetterType === LetterType.Internal;\r\n  }\r\n}\r\n", "<!-- Add Letter Modal -->\r\n<div class=\"modal fade\" [class.show]=\"isOpen\" [style.display]=\"isOpen ? 'block' : 'none'\" \r\n     tabindex=\"-1\" role=\"dialog\" [attr.aria-hidden]=\"!isOpen\" (click)=\"onBackdropClick($event)\">\r\n  <div class=\"modal-dialog modal-lg modal-dialog-centered\" role=\"document\">\r\n    <div class=\"modal-content\">\r\n      <div class=\"modal-header bg-primary text-white\" [dir]=\"isRTL() ? 'rtl' : 'ltr'\">\r\n        <h5 class=\"modal-title\" [class.text-end]=\"isRTL()\" [class.text-start]=\"!isRTL()\">\r\n         \r\n          {{ translate('letters.add_letter') }}\r\n        </h5>\r\n      </div>\r\n      \r\n      <form [formGroup]=\"addForm\" (ngSubmit)=\"onSubmit()\">\r\n        <div class=\"modal-body\">\r\n          <div class=\"row g-3\">\r\n            <!-- Direction -->\r\n            <div class=\"col-md-6\">\r\n              <label class=\"form-label\">{{ translate('letters.direction') }} <span class=\"text-danger\">*</span></label>\r\n              <select class=\"form-select\" formControlName=\"direction\" \r\n                      [class.is-invalid]=\"isFieldValid('direction') || hasServerError('direction')\">\r\n                <option value=\"\" disabled>{{ translate('letters.direction_required') }}</option>\r\n                <option *ngFor=\"let direction of directions\" [value]=\"direction.key\">\r\n                  {{ getDirectionLabel(direction.key) }}\r\n                </option>\r\n              </select>\r\n              <div class=\"invalid-feedback\" *ngIf=\"isFieldValid('direction')\">\r\n                {{ getErrorMessage('direction') }}\r\n              </div>\r\n              <div class=\"invalid-feedback\" *ngIf=\"hasServerError('direction')\">\r\n                {{ getServerErrorMessage('direction') }}\r\n              </div>\r\n            </div>\r\n\r\n            <!-- Letter Type -->\r\n            <div class=\"col-md-6\">\r\n              <label class=\"form-label\">{{ translate('letters.letter_type') }} <span class=\"text-danger\">*</span></label>\r\n              <select class=\"form-select\" formControlName=\"letterType\" \r\n                      [class.is-invalid]=\"isFieldValid('letterType') || hasServerError('letterType')\">\r\n                <option value=\"\" disabled>{{ translate('letters.letter_type_required') }}</option>\r\n                <option *ngFor=\"let letterType of letterTypes\" [value]=\"letterType.key\">\r\n                  {{ getLetterTypeLabel(letterType.key) }}\r\n                </option>\r\n              </select>\r\n              <div class=\"invalid-feedback\" *ngIf=\"isFieldValid('letterType')\">\r\n                {{ getErrorMessage('letterType') }}\r\n              </div>\r\n              <div class=\"invalid-feedback\" *ngIf=\"hasServerError('letterType')\">\r\n                {{ getServerErrorMessage('letterType') }}\r\n              </div>\r\n            </div>\r\n\r\n\r\n            <!-- Subject -->\r\n            <div class=\"col-12\">\r\n              <label class=\"form-label\">{{ translate('letters.subject') }} <span class=\"text-danger\">*</span></label>\r\n              <input type=\"text\" class=\"form-control\" formControlName=\"subject\" \r\n                     [placeholder]=\"translate('letters.subject_placeholder')\"\r\n                     [class.is-invalid]=\"isFieldValid('subject') || hasServerError('subject')\">\r\n              <div class=\"invalid-feedback\" *ngIf=\"isFieldValid('subject')\">\r\n                {{ getErrorMessage('subject') }}\r\n              </div>\r\n              <div class=\"invalid-feedback\" *ngIf=\"hasServerError('subject')\">\r\n                {{ getServerErrorMessage('subject') }}\r\n              </div>\r\n            </div>\r\n\r\n            <!-- Body -->\r\n            <div class=\"col-12\">\r\n              <label class=\"form-label\">{{ translate('letters.body') }} <span class=\"text-danger\">*</span></label>\r\n              <textarea class=\"form-control\" formControlName=\"body\" rows=\"4\" \r\n                        [placeholder]=\"translate('letters.body_placeholder')\"\r\n                        [class.is-invalid]=\"isFieldValid('body') || hasServerError('body')\"></textarea>\r\n              <div class=\"invalid-feedback\" *ngIf=\"isFieldValid('body')\">\r\n                {{ getErrorMessage('body') }}\r\n              </div>\r\n              <div class=\"invalid-feedback\" *ngIf=\"hasServerError('body')\">\r\n                {{ getServerErrorMessage('body') }}\r\n              </div>\r\n            </div>\r\n\r\n            <!-- To (External Letters Only) -->\r\n            <div class=\"col-md-6\" *ngIf=\"!isInternalLetter()\">\r\n              <label class=\"form-label\">{{ translate('letters.to') }} <span class=\"text-danger\">*</span></label>\r\n              <input type=\"email\" class=\"form-control\" formControlName=\"to\" \r\n                     [placeholder]=\"translate('letters.to_placeholder')\"\r\n                     [class.is-invalid]=\"isFieldValid('to') || hasServerError('to')\">\r\n              <div class=\"invalid-feedback\" *ngIf=\"isFieldValid('to')\">\r\n                {{ getErrorMessage('to') }}\r\n              </div>\r\n              <div class=\"invalid-feedback\" *ngIf=\"hasServerError('to')\">\r\n                {{ getServerErrorMessage('to') }}\r\n              </div>\r\n            </div>\r\n\r\n            <!-- Internal User (Internal Letters Only) -->\r\n            <div class=\"col-md-6\" *ngIf=\"isInternalLetter()\">\r\n              <label class=\"form-label\">{{ translate('letters.internal_user') }} <span class=\"text-danger\">*</span></label>\r\n              <select class=\"form-select\" formControlName=\"internalUserId\" \r\n                      [class.is-invalid]=\"isFieldValid('internalUserId') || hasServerError('internalUserId')\"\r\n                      [disabled]=\"isLoadingUsers\">\r\n                <option value=\"\" disabled>{{ translate('letters.select_user') }}</option>\r\n                <option *ngFor=\"let user of users\" [value]=\"user.id\">\r\n                  {{ user.name }} ({{ user.departmentName }})\r\n                </option>\r\n              </select>\r\n              <div class=\"invalid-feedback\" *ngIf=\"isFieldValid('internalUserId')\">\r\n                {{ getErrorMessage('internalUserId') }}\r\n              </div>\r\n              <div class=\"invalid-feedback\" *ngIf=\"hasServerError('internalUserId')\">\r\n                {{ getServerErrorMessage('internalUserId') }}\r\n              </div>\r\n              <div class=\"form-text\" *ngIf=\"isLoadingUsers\">\r\n                {{ translate('common.loading') }}...\r\n              </div>\r\n            </div>\r\n\r\n            <!-- Letter Date -->\r\n            <div class=\"col-md-6\">\r\n              <label class=\"form-label\">{{ translate('letters.letter_date') }} <span class=\"text-danger\">*</span></label>\r\n              <input type=\"date\" class=\"form-control\" formControlName=\"letterDate\" \r\n                     [class.is-invalid]=\"isFieldValid('letterDate') || hasServerError('letterDate')\">\r\n              <div class=\"invalid-feedback\" *ngIf=\"isFieldValid('letterDate')\">\r\n                {{ getErrorMessage('letterDate') }}\r\n              </div>\r\n              <div class=\"invalid-feedback\" *ngIf=\"hasServerError('letterDate')\">\r\n                {{ getServerErrorMessage('letterDate') }}\r\n              </div>\r\n            </div>\r\n\r\n            <!-- CC -->\r\n            <div class=\"col-md-6\">\r\n              <label class=\"form-label\">{{ translate('letters.cc') }}</label>\r\n              <input type=\"text\" class=\"form-control\" formControlName=\"cc\" \r\n                     [placeholder]=\"translate('letters.cc_placeholder')\"\r\n                     [class.is-invalid]=\"isFieldValid('cc') || hasServerError('cc')\">\r\n              <div class=\"invalid-feedback\" *ngIf=\"isFieldValid('cc')\">\r\n                {{ getErrorMessage('cc') }}\r\n              </div>\r\n              <div class=\"invalid-feedback\" *ngIf=\"hasServerError('cc')\">\r\n                {{ getServerErrorMessage('cc') }}\r\n              </div>\r\n            </div>\r\n\r\n            <!-- BCC -->\r\n            <div class=\"col-md-6\">\r\n              <label class=\"form-label\">{{ translate('letters.bcc') }}</label>\r\n              <input type=\"text\" class=\"form-control\" formControlName=\"bcc\" \r\n                     [placeholder]=\"translate('letters.bcc_placeholder')\"\r\n                     [class.is-invalid]=\"isFieldValid('bcc') || hasServerError('bcc')\">\r\n              <div class=\"invalid-feedback\" *ngIf=\"isFieldValid('bcc')\">\r\n                {{ getErrorMessage('bcc') }}\r\n              </div>\r\n              <div class=\"invalid-feedback\" *ngIf=\"hasServerError('bcc')\">\r\n                {{ getServerErrorMessage('bcc') }}\r\n              </div>\r\n            </div>\r\n\r\n\r\n          </div>\r\n        </div>\r\n        \r\n        <div class=\"modal-footer\">\r\n          \r\n          <button type=\"submit\" class=\"btn btn-primary\" [disabled]=\"addForm.invalid\">\r\n            {{ translate('letters.create') }}\r\n          </button>\r\n          <button type=\"button\" class=\"btn btn-secondary\" (click)=\"close()\">\r\n            {{ translate('common.cancel') }}\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<!-- Modal Backdrop -->\r\n<div class=\"modal-backdrop fade\" [class.show]=\"isOpen\" *ngIf=\"isOpen\"></div>\r\n\r\n<!-- Confirmation Modal -->\r\n<app-letters-confirmation-modal #confirmationModal></app-letters-confirmation-modal>\r\n", "import { AfterViewInit, Component, ElementRef, ViewChild, EventEmitter, Output } from '@angular/core';\r\nimport { LettersService } from '../../../services/letters.service';\r\nimport { AbstractControl, FormBuilder, FormGroup, ValidationErrors, Validators } from '@angular/forms';\r\nimport { TranslationService } from '../../../services/translation.service';\r\nimport { LettersConfirmationModalComponent } from '../letters-confirmation-modal/letters-confirmation-modal.component';\r\nimport { UpdateLetterDto, LetterItem, LetterDirection, LetterConfidentiality, LetterStatus, LetterType } from '../../../models/letter.model';\r\nimport { UsersService } from '../../../services/users.service';\r\n\r\n@Component({\r\n  selector: 'app-edit-letter',\r\n  standalone: false,\r\n  templateUrl: './edit-letter.html',\r\n  styleUrl: './edit-letter.css'\r\n})\r\nexport class EditLetter implements AfterViewInit {\r\n  @ViewChild('confirmationModal') confirmationModal!: LettersConfirmationModalComponent;\r\n  @Output() letterUpdated = new EventEmitter<void>();\r\n  \r\n  // Custom modal properties\r\n  isOpen = false;\r\n  currentLetter: LetterItem | null = null;\r\n  \r\n  editForm!: FormGroup;\r\n  users: Array<{ id: string; name: string; departmentName: string }> = [];\r\n  isLoadingUsers = false;\r\n  currentLetterType: number = LetterType.External;\r\n  \r\n  constructor(\r\n    private lettersService: LettersService,\r\n    private fb: FormBuilder,\r\n    private translationService: TranslationService,\r\n    private usersService: UsersService\r\n  ) {}\r\n\r\n  ngAfterViewInit(): void {\r\n    // No Bootstrap modal needed\r\n  }\r\n  \r\n  open(letter: LetterItem) { \r\n    this.currentLetter = letter;\r\n    this.isOpen = true;\r\n    this.initializeForm();\r\n    this.populateForm(letter);\r\n    // Load users for internal letters\r\n    this.loadUsers();\r\n  }\r\n  \r\n  close() { \r\n    this.isOpen = false;\r\n    this.currentLetter = null;\r\n    // Reset form when closing\r\n    this.editForm.reset();\r\n  }\r\n\r\n  // Handle backdrop click\r\n  onBackdropClick(event: Event) {\r\n    if (event.target === event.currentTarget) {\r\n      this.close();\r\n    }\r\n  }\r\n\r\n  readonly directions = [\r\n    { key: LetterDirection.In, value: \"Incoming\" },\r\n    { key: LetterDirection.Out, value: \"Outgoing\" }\r\n  ];\r\n\r\n  readonly letterTypes = [\r\n    { key: LetterType.Internal, value: \"Internal\" },\r\n    { key: LetterType.External, value: \"External\" }\r\n  ];\r\n\r\n  readonly confidentialities = [\r\n    { key: LetterConfidentiality.Public, value: \"Public\" },\r\n    { key: LetterConfidentiality.Restricted, value: \"Restricted\" },\r\n    { key: LetterConfidentiality.Secret, value: \"Secret\" }\r\n  ];\r\n\r\n  readonly statuses = [\r\n    { key: LetterStatus.Draft, value: \"Draft\" },\r\n    { key: LetterStatus.PendingApproval, value: \"PendingApproval\" },\r\n    { key: LetterStatus.Approved, value: \"Approved\" },\r\n    { key: LetterStatus.Rejected, value: \"Rejected\" },\r\n    { key: LetterStatus.Sent, value: \"Sent\" }\r\n  ];\r\n\r\n  ngOnInit() {\r\n    this.initializeForm();\r\n  }\r\n\r\n  initializeForm() {\r\n    this.editForm = this.fb.group({\r\n      direction: ['', Validators.required],\r\n      letterType: ['', Validators.required],\r\n      subject: ['', [Validators.required, Validators.minLength(3), Validators.maxLength(200)]],\r\n      body: ['', [Validators.required, Validators.minLength(10)]],\r\n      to: ['', [Validators.required, Validators.email]],\r\n      cc: [''],\r\n      bcc: [''],\r\n      letterDate: ['', Validators.required],\r\n      internalUserId: ['']\r\n    });\r\n\r\n    // Add conditional validation for 'to' field based on letter type\r\n    this.editForm.get('letterType')?.valueChanges.subscribe(letterType => {\r\n      this.currentLetterType = parseInt(letterType, 10); // Convert string to number\r\n      const toControl = this.editForm.get('to');\r\n      const internalUserIdControl = this.editForm.get('internalUserId');\r\n      \r\n      if (this.currentLetterType === LetterType.Internal) {\r\n        // For internal letters, 'to' is not required, internalUserId is required\r\n        toControl?.clearValidators();\r\n        toControl?.setValue(''); // Clear the 'to' field value\r\n        internalUserIdControl?.setValidators([Validators.required]);\r\n      } else {\r\n        // For external letters, 'to' is required, internalUserId is not required\r\n        toControl?.setValidators([Validators.required, Validators.email]);\r\n        internalUserIdControl?.clearValidators();\r\n        internalUserIdControl?.setValue(''); // Clear the internal user field value\r\n      }\r\n      \r\n      toControl?.updateValueAndValidity();\r\n      internalUserIdControl?.updateValueAndValidity();\r\n    });\r\n  }\r\n\r\n  populateForm(letter: LetterItem) {\r\n    // Format the date for the date input\r\n    const letterDate = new Date(letter.letterDate);\r\n    const formattedDate = letterDate.toISOString().split('T')[0];\r\n    \r\n    const letterType = letter.letterType || LetterType.External;\r\n    this.currentLetterType = letterType;\r\n    \r\n    this.editForm.patchValue({\r\n      direction: letter.direction,\r\n      letterType: letterType,\r\n      subject: letter.subject,\r\n      body: letter.body,\r\n      to: letter.to,\r\n      cc: letter.cc || '',\r\n      bcc: letter.bcc || '',\r\n      letterDate: formattedDate,\r\n      internalUserId: letter.internalUserId || ''\r\n    });\r\n\r\n    // Trigger validation update after populating form\r\n    const toControl = this.editForm.get('to');\r\n    const internalUserIdControl = this.editForm.get('internalUserId');\r\n    \r\n    if (letterType === LetterType.Internal) {\r\n      toControl?.clearValidators();\r\n      internalUserIdControl?.setValidators([Validators.required]);\r\n    } else {\r\n      toControl?.setValidators([Validators.required, Validators.email]);\r\n      internalUserIdControl?.clearValidators();\r\n    }\r\n    \r\n    toControl?.updateValueAndValidity();\r\n    internalUserIdControl?.updateValueAndValidity();\r\n  }\r\n\r\n  isFieldValid(field: string) {\r\n    const control = this.editForm.get(field);\r\n    return control?.touched && control?.invalid;\r\n  }\r\n\r\n  hasServerError(field: string) {\r\n    const control = this.editForm.get(field);\r\n    return control?.errors?.['serverError'];\r\n  }\r\n\r\n  getServerErrorMessage(field: string) {\r\n    const control = this.editForm.get(field);\r\n    return control?.errors?.['serverError'] || '';\r\n  }\r\n\r\n  loadUsers() {\r\n    this.isLoadingUsers = true;\r\n    this.usersService.getUserNames().subscribe({\r\n      next: (users) => {\r\n        this.users = users;\r\n        this.isLoadingUsers = false;\r\n      },\r\n      error: (error) => {\r\n        console.error('Error loading users:', error);\r\n        this.isLoadingUsers = false;\r\n      }\r\n    });\r\n  }\r\n\r\n  getErrorMessage(field: string) {\r\n    const control = this.editForm.get(field);\r\n    if (!control?.errors) return '';\r\n    \r\n    if (control.errors['required']) {\r\n      return this.translate('common.field_required');\r\n    }\r\n    if (control.errors['email']) {\r\n      return this.translate('common.invalid_email');\r\n    }\r\n    if (control.errors['minlength']) {\r\n      const requiredLength = control.errors['minlength']['requiredLength'];\r\n      if (requiredLength === 3) {\r\n        return this.translate('letters.min_length_3');\r\n      } else if (requiredLength === 10) {\r\n        return this.translate('letters.min_length_10');\r\n      }\r\n      return `Minimum length is ${requiredLength} characters`;\r\n    }\r\n    if (control.errors['maxlength']) {\r\n      const requiredLength = control.errors['maxlength']['requiredLength'];\r\n      if (requiredLength === 200) {\r\n        return this.translate('letters.max_length_200');\r\n      } else if (requiredLength === 500) {\r\n        return this.translate('letters.max_length_500');\r\n      }\r\n      return `Maximum length is ${requiredLength} characters`;\r\n    }\r\n    return 'Invalid field';\r\n  }\r\n\r\n  onSubmit() {\r\n    if (this.editForm.invalid || !this.currentLetter) {\r\n      this.editForm.markAllAsTouched();\r\n      return;\r\n    }\r\n\r\n    const formValue = this.editForm.value;\r\n    \r\n    // Ensure all required fields are included and properly formatted\r\n    const letterData: UpdateLetterDto = {\r\n      id: this.currentLetter.id,\r\n      direction: parseInt(formValue.direction),\r\n      letterType: parseInt(formValue.letterType),\r\n      subject: formValue.subject,\r\n      body: formValue.body,\r\n      to: formValue.to || '',\r\n      cc: formValue.cc || '',\r\n      bcc: formValue.bcc || '',\r\n      letterDate: new Date(formValue.letterDate).toISOString(),\r\n      internalUserId: formValue.internalUserId || undefined\r\n    };\r\n\r\n    console.log('Updating letter data:', letterData); // Debug log\r\n\r\n    this.lettersService.updateLetter(this.currentLetter.id, letterData).subscribe({\r\n      next: (res) => {\r\n        this.showSuccessMessage(this.translate('letters.edit_letter_success'));\r\n        this.close();\r\n        this.editForm.reset();\r\n        this.letterUpdated.emit(); // Notify parent component\r\n      },\r\n      error: (error) => {\r\n        console.error('Error updating letter:', error);\r\n        this.handleApiErrors(error);\r\n      }\r\n    });\r\n  }\r\n\r\n  private handleApiErrors(error: any) {\r\n    console.log('Full error response:', error); // Debug log\r\n    \r\n    if (error.error?.errors) {\r\n      // Handle validation errors by setting them on form controls\r\n      const errors = error.error.errors;\r\n      console.log('API validation errors:', errors); // Debug log\r\n      \r\n      Object.keys(errors).forEach(fieldName => {\r\n        const control = this.editForm.get(this.getFormFieldName(fieldName));\r\n        if (control) {\r\n          control.setErrors({ serverError: errors[fieldName][0] });\r\n          control.markAsTouched();\r\n        } else {\r\n          console.warn(`Form control not found for field: ${fieldName}`); // Debug log\r\n        }\r\n      });\r\n    } else {\r\n      // Show generic error in alert\r\n      let errorMessage = 'Unknown error occurred';\r\n      if (error.error?.message) {\r\n        errorMessage = error.error.message;\r\n      } else if (error.message) {\r\n        errorMessage = error.message;\r\n      }\r\n      alert(this.translationService.translate('common.error') + ': ' + errorMessage);\r\n    }\r\n  }\r\n\r\n  private getFormFieldName(apiFieldName: string): string {\r\n    // Map API field names (capitalized) to form field names (lowercase)\r\n    const fieldMapping: { [key: string]: string } = {\r\n      'Direction': 'direction',\r\n      'Subject': 'subject',\r\n      'Body': 'body',\r\n      'Confidentiality': 'confidentiality',\r\n      'To': 'to',\r\n      'Cc': 'cc',\r\n      'Bcc': 'bcc',\r\n      'LetterDate': 'letterDate',\r\n      'Status': 'status',\r\n      'ReferenceNumbers': 'referenceNumbers'\r\n    };\r\n    return fieldMapping[apiFieldName] || apiFieldName.toLowerCase();\r\n  }\r\n\r\n  translate(key: string): string {\r\n    return this.translationService.translate(key);\r\n  }\r\n\r\n  isRTL(): boolean {\r\n    return this.translationService.isRTL();\r\n  }\r\n\r\n  showSuccessMessage(message: string) {\r\n    const successData = {\r\n      title: this.translate('common.success'),\r\n      message: message,\r\n      confirmText: this.translate('common.ok'),\r\n      cancelText: '',\r\n      type: 'info' as const\r\n    };\r\n    this.confirmationModal.show(successData);\r\n  }\r\n\r\n  getDirectionLabel(direction: number): string {\r\n    return this.translate('letters.directions.' + direction);\r\n  }\r\n\r\n  getConfidentialityLabel(confidentiality: number): string {\r\n    return this.translate('letters.confidentialities.' + confidentiality);\r\n  }\r\n\r\n  getStatusLabel(status: number): string {\r\n    return this.translate('letters.statuses.' + status);\r\n  }\r\n\r\n  getLetterTypeLabel(letterType: number): string {\r\n    return this.translate('letters.letter_types.' + letterType);\r\n  }\r\n\r\n  isInternalLetter(): boolean {\r\n    return this.currentLetterType === LetterType.Internal;\r\n  }\r\n}\r\n", "<!-- Edit Letter Modal -->\r\n<div class=\"modal fade\" [class.show]=\"isOpen\" [style.display]=\"isOpen ? 'block' : 'none'\" \r\n     tabindex=\"-1\" role=\"dialog\" [attr.aria-hidden]=\"!isOpen\" (click)=\"onBackdropClick($event)\">\r\n  <div class=\"modal-dialog modal-lg modal-dialog-centered\" role=\"document\">\r\n    <div class=\"modal-content\">\r\n      <div class=\"modal-header bg-warning text-dark\" [dir]=\"isRTL() ? 'rtl' : 'ltr'\">\r\n        <h5 class=\"modal-title\" [class.text-end]=\"isRTL()\" [class.text-start]=\"!isRTL()\">\r\n          {{ translate('letters.edit_letter') }}\r\n        </h5>\r\n      </div>\r\n      \r\n      <form [formGroup]=\"editForm\" (ngSubmit)=\"onSubmit()\">\r\n        <div class=\"modal-body\">\r\n          <div class=\"row g-3\">\r\n            <!-- Direction -->\r\n            <div class=\"col-md-6\">\r\n              <label class=\"form-label\">{{ translate('letters.direction') }} <span class=\"text-danger\">*</span></label>\r\n              <select class=\"form-select\" formControlName=\"direction\" \r\n                      [class.is-invalid]=\"isFieldValid('direction') || hasServerError('direction')\">\r\n                <option value=\"\">{{ translate('letters.direction_required') }}</option>\r\n                <option *ngFor=\"let direction of directions\" [value]=\"direction.key\">\r\n                  {{ getDirectionLabel(direction.key) }}\r\n                </option>\r\n              </select>\r\n              <div class=\"invalid-feedback\" *ngIf=\"isFieldValid('direction')\">\r\n                {{ getErrorMessage('direction') }}\r\n              </div>\r\n              <div class=\"invalid-feedback\" *ngIf=\"hasServerError('direction')\">\r\n                {{ getServerErrorMessage('direction') }}\r\n              </div>\r\n            </div>\r\n\r\n            <!-- Letter Type -->\r\n            <div class=\"col-md-6\">\r\n              <label class=\"form-label\">{{ translate('letters.letter_type') }} <span class=\"text-danger\">*</span></label>\r\n              <select class=\"form-select\" formControlName=\"letterType\" \r\n                      [class.is-invalid]=\"isFieldValid('letterType') || hasServerError('letterType')\">\r\n                <option value=\"\">{{ translate('letters.letter_type_required') }}</option>\r\n                <option *ngFor=\"let letterType of letterTypes\" [value]=\"letterType.key\">\r\n                  {{ getLetterTypeLabel(letterType.key) }}\r\n                </option>\r\n              </select>\r\n              <div class=\"invalid-feedback\" *ngIf=\"isFieldValid('letterType')\">\r\n                {{ getErrorMessage('letterType') }}\r\n              </div>\r\n              <div class=\"invalid-feedback\" *ngIf=\"hasServerError('letterType')\">\r\n                {{ getServerErrorMessage('letterType') }}\r\n              </div>\r\n            </div>\r\n\r\n\r\n            <!-- Subject -->\r\n            <div class=\"col-12\">\r\n              <label class=\"form-label\">{{ translate('letters.subject') }} <span class=\"text-danger\">*</span></label>\r\n              <input type=\"text\" class=\"form-control\" formControlName=\"subject\" \r\n                     [placeholder]=\"translate('letters.subject_placeholder')\"\r\n                     [class.is-invalid]=\"isFieldValid('subject') || hasServerError('subject')\">\r\n              <div class=\"invalid-feedback\" *ngIf=\"isFieldValid('subject')\">\r\n                {{ getErrorMessage('subject') }}\r\n              </div>\r\n              <div class=\"invalid-feedback\" *ngIf=\"hasServerError('subject')\">\r\n                {{ getServerErrorMessage('subject') }}\r\n              </div>\r\n            </div>\r\n\r\n            <!-- Body -->\r\n            <div class=\"col-12\">\r\n              <label class=\"form-label\">{{ translate('letters.body') }} <span class=\"text-danger\">*</span></label>\r\n              <textarea class=\"form-control\" formControlName=\"body\" rows=\"4\" \r\n                        [placeholder]=\"translate('letters.body_placeholder')\"\r\n                        [class.is-invalid]=\"isFieldValid('body') || hasServerError('body')\"></textarea>\r\n              <div class=\"invalid-feedback\" *ngIf=\"isFieldValid('body')\">\r\n                {{ getErrorMessage('body') }}\r\n              </div>\r\n              <div class=\"invalid-feedback\" *ngIf=\"hasServerError('body')\">\r\n                {{ getServerErrorMessage('body') }}\r\n              </div>\r\n            </div>\r\n\r\n            <!-- To (External Letters Only) -->\r\n            <div class=\"col-md-6\" *ngIf=\"!isInternalLetter()\">\r\n              <label class=\"form-label\">{{ translate('letters.to') }} <span class=\"text-danger\">*</span></label>\r\n              <input type=\"email\" class=\"form-control\" formControlName=\"to\" \r\n                     [placeholder]=\"translate('letters.to_placeholder')\"\r\n                     [class.is-invalid]=\"isFieldValid('to') || hasServerError('to')\">\r\n              <div class=\"invalid-feedback\" *ngIf=\"isFieldValid('to')\">\r\n                {{ getErrorMessage('to') }}\r\n              </div>\r\n              <div class=\"invalid-feedback\" *ngIf=\"hasServerError('to')\">\r\n                {{ getServerErrorMessage('to') }}\r\n              </div>\r\n            </div>\r\n\r\n            <!-- Internal User (Internal Letters Only) -->\r\n            <div class=\"col-md-6\" *ngIf=\"isInternalLetter()\">\r\n              <label class=\"form-label\">{{ translate('letters.internal_user') }} <span class=\"text-danger\">*</span></label>\r\n              <select class=\"form-select\" formControlName=\"internalUserId\" \r\n                      [class.is-invalid]=\"isFieldValid('internalUserId') || hasServerError('internalUserId')\"\r\n                      [disabled]=\"isLoadingUsers\">\r\n                <option value=\"\" disabled>{{ translate('letters.select_user') }}</option>\r\n                <option *ngFor=\"let user of users\" [value]=\"user.id\">\r\n                  {{ user.name }} ({{ user.departmentName }})\r\n                </option>\r\n              </select>\r\n              <div class=\"invalid-feedback\" *ngIf=\"isFieldValid('internalUserId')\">\r\n                {{ getErrorMessage('internalUserId') }}\r\n              </div>\r\n              <div class=\"invalid-feedback\" *ngIf=\"hasServerError('internalUserId')\">\r\n                {{ getServerErrorMessage('internalUserId') }}\r\n              </div>\r\n              <div class=\"form-text\" *ngIf=\"isLoadingUsers\">\r\n                {{ translate('common.loading') }}...\r\n              </div>\r\n            </div>\r\n\r\n            <!-- Letter Date -->\r\n            <div class=\"col-md-6\">\r\n              <label class=\"form-label\">{{ translate('letters.letter_date') }} <span class=\"text-danger\">*</span></label>\r\n              <input type=\"date\" class=\"form-control\" formControlName=\"letterDate\" \r\n                     [class.is-invalid]=\"isFieldValid('letterDate') || hasServerError('letterDate')\">\r\n              <div class=\"invalid-feedback\" *ngIf=\"isFieldValid('letterDate')\">\r\n                {{ getErrorMessage('letterDate') }}\r\n              </div>\r\n              <div class=\"invalid-feedback\" *ngIf=\"hasServerError('letterDate')\">\r\n                {{ getServerErrorMessage('letterDate') }}\r\n              </div>\r\n            </div>\r\n\r\n            <!-- CC -->\r\n            <div class=\"col-md-6\">\r\n              <label class=\"form-label\">{{ translate('letters.cc') }}</label>\r\n              <input type=\"text\" class=\"form-control\" formControlName=\"cc\" \r\n                     [placeholder]=\"translate('letters.cc_placeholder')\"\r\n                     [class.is-invalid]=\"isFieldValid('cc') || hasServerError('cc')\">\r\n              <div class=\"invalid-feedback\" *ngIf=\"isFieldValid('cc')\">\r\n                {{ getErrorMessage('cc') }}\r\n              </div>\r\n              <div class=\"invalid-feedback\" *ngIf=\"hasServerError('cc')\">\r\n                {{ getServerErrorMessage('cc') }}\r\n              </div>\r\n            </div>\r\n\r\n            <!-- BCC -->\r\n            <div class=\"col-md-6\">\r\n              <label class=\"form-label\">{{ translate('letters.bcc') }}</label>\r\n              <input type=\"text\" class=\"form-control\" formControlName=\"bcc\" \r\n                     [placeholder]=\"translate('letters.bcc_placeholder')\"\r\n                     [class.is-invalid]=\"isFieldValid('bcc') || hasServerError('bcc')\">\r\n              <div class=\"invalid-feedback\" *ngIf=\"isFieldValid('bcc')\">\r\n                {{ getErrorMessage('bcc') }}\r\n              </div>\r\n              <div class=\"invalid-feedback\" *ngIf=\"hasServerError('bcc')\">\r\n                {{ getServerErrorMessage('bcc') }}\r\n              </div>\r\n            </div>\r\n\r\n\r\n          </div>\r\n        </div>\r\n        \r\n        <div class=\"modal-footer\">\r\n          \r\n          <button type=\"submit\" class=\"btn btn-warning\" [disabled]=\"editForm.invalid\">\r\n            <i class=\"fas fa-save me-2\"></i>{{ translate('letters.update') }}\r\n          </button>\r\n          <button type=\"button\" class=\"btn btn-secondary\" (click)=\"close()\">\r\n            <i class=\"fas fa-times me-2\"></i>{{ translate('common.cancel') }}\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<!-- Modal Backdrop -->\r\n<div class=\"modal-backdrop fade\" [class.show]=\"isOpen\" *ngIf=\"isOpen\"></div>\r\n\r\n<!-- Confirmation Modal -->\r\n<app-letters-confirmation-modal #confirmationModal></app-letters-confirmation-modal>\r\n", "import { AfterViewInit, Component, ElementRef, ViewChild, EventEmitter, Output } from '@angular/core';\r\nimport { LettersService } from '../../../services/letters.service';\r\nimport { AbstractControl, FormBuilder, FormGroup, ValidationErrors, Validators } from '@angular/forms';\r\nimport { TranslationService } from '../../../services/translation.service';\r\nimport { LettersConfirmationModalComponent } from '../letters-confirmation-modal/letters-confirmation-modal.component';\r\nimport { LetterItem, AttachmentUploadDto } from '../../../models/letter.model';\r\n\r\n@Component({\r\n  selector: 'app-add-attachment',\r\n  standalone: false,\r\n  templateUrl: './add-attachment.html',\r\n  styleUrl: './add-attachment.css'\r\n})\r\nexport class AddAttachment implements AfterViewInit {\r\n  @ViewChild('confirmationModal') confirmationModal!: LettersConfirmationModalComponent;\r\n  @ViewChild('fileInput') fileInput!: ElementRef<HTMLInputElement>;\r\n  @Output() attachmentAdded = new EventEmitter<void>();\r\n  \r\n  // Custom modal properties\r\n  isOpen = false;\r\n  currentLetter: LetterItem | null = null;\r\n  selectedFile: File | null = null;\r\n  isUploading = false;\r\n  \r\n  addForm!: FormGroup;\r\n  \r\n  // Supported file types\r\n  readonly supportedFileTypes = [\r\n    'application/pdf',\r\n    'application/msword',\r\n    'application/vnd.openxmlformats-officedocument.wordprocessingml.document',\r\n    'application/vnd.ms-excel',\r\n    'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet',\r\n    'application/vnd.ms-powerpoint',\r\n    'application/vnd.openxmlformats-officedocument.presentationml.presentation',\r\n    'image/jpeg',\r\n    'image/png',\r\n    'image/gif'\r\n  ];\r\n\r\n  readonly maxFileSize = 10 * 1024 * 1024; // 10MB\r\n  \r\n  constructor(\r\n    private lettersService: LettersService,\r\n    private fb: FormBuilder,\r\n    private translationService: TranslationService\r\n  ) {}\r\n\r\n  isRTL(): boolean {\r\n    return this.translationService.isRTL();\r\n  }\r\n\r\n  ngAfterViewInit(): void {\r\n    // No Bootstrap modal needed\r\n  }\r\n  \r\n  open(letter: LetterItem) { \r\n    this.currentLetter = letter;\r\n    this.isOpen = true;\r\n    this.initializeForm();\r\n    this.resetForm();\r\n  }\r\n  \r\n  close() { \r\n    this.isOpen = false;\r\n    this.currentLetter = null;\r\n    this.selectedFile = null;\r\n    this.isUploading = false;\r\n    this.resetForm();\r\n  }\r\n\r\n  // Handle backdrop click\r\n  onBackdropClick(event: Event) {\r\n    if (event.target === event.currentTarget) {\r\n      this.close();\r\n    }\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.initializeForm();\r\n  }\r\n\r\n  initializeForm() {\r\n    this.addForm = this.fb.group({\r\n      description: ['', [Validators.maxLength(200)]],\r\n      documentSource: ['']\r\n    });\r\n  }\r\n\r\n  resetForm() {\r\n    this.addForm.reset();\r\n    this.selectedFile = null;\r\n    if (this.fileInput) {\r\n      this.fileInput.nativeElement.value = '';\r\n    }\r\n  }\r\n\r\n  onFileSelected(event: any) {\r\n    const file = event.target.files[0];\r\n    if (file) {\r\n      // Validate file type\r\n      if (!this.supportedFileTypes.includes(file.type)) {\r\n        this.showErrorMessage(this.translate('letters.file_format_error'));\r\n        this.resetForm();\r\n        return;\r\n      }\r\n\r\n      // Validate file size\r\n      if (file.size > this.maxFileSize) {\r\n        this.showErrorMessage(this.translate('letters.file_size_error'));\r\n        this.resetForm();\r\n        return;\r\n      }\r\n\r\n      this.selectedFile = file;\r\n    } else {\r\n      this.selectedFile = null;\r\n    }\r\n  }\r\n\r\n  onDragOver(event: DragEvent) {\r\n    event.preventDefault();\r\n    event.stopPropagation();\r\n  }\r\n\r\n  onDragLeave(event: DragEvent) {\r\n    event.preventDefault();\r\n    event.stopPropagation();\r\n  }\r\n\r\n  onDrop(event: DragEvent) {\r\n    event.preventDefault();\r\n    event.stopPropagation();\r\n    \r\n    const files = event.dataTransfer?.files;\r\n    if (files && files.length > 0) {\r\n      const file = files[0];\r\n      \r\n      // Validate file type\r\n      if (!this.supportedFileTypes.includes(file.type)) {\r\n        this.showErrorMessage(this.translate('letters.file_format_error'));\r\n        return;\r\n      }\r\n\r\n      // Validate file size\r\n      if (file.size > this.maxFileSize) {\r\n        this.showErrorMessage(this.translate('letters.file_size_error'));\r\n        return;\r\n      }\r\n\r\n      this.selectedFile = file;\r\n      if (this.fileInput) {\r\n        this.fileInput.nativeElement.files = files;\r\n      }\r\n    }\r\n  }\r\n\r\n  removeFile() {\r\n    this.selectedFile = null;\r\n    if (this.fileInput) {\r\n      this.fileInput.nativeElement.value = '';\r\n    }\r\n  }\r\n\r\n  isFieldValid(field: string) {\r\n    const control = this.addForm.get(field);\r\n    return control?.touched && control?.invalid;\r\n  }\r\n\r\n  hasServerError(field: string) {\r\n    const control = this.addForm.get(field);\r\n    return control?.errors?.['serverError'];\r\n  }\r\n\r\n  getServerErrorMessage(field: string) {\r\n    const control = this.addForm.get(field);\r\n    return control?.errors?.['serverError'] || '';\r\n  }\r\n\r\n  getErrorMessage(field: string) {\r\n    const control = this.addForm.get(field);\r\n    if (!control?.errors) return '';\r\n    \r\n    if (control.errors['required']) {\r\n      return this.translate('common.field_required');\r\n    }\r\n    if (control.errors['maxlength']) {\r\n      const requiredLength = control.errors['maxlength']['requiredLength'];\r\n      return `Maximum length is ${requiredLength} characters`;\r\n    }\r\n    return 'Invalid field';\r\n  }\r\n\r\n  onSubmit() {\r\n    if (!this.selectedFile || !this.currentLetter) {\r\n      this.showErrorMessage(this.translate('letters.file_required'));\r\n      return;\r\n    }\r\n\r\n    if (this.addForm.invalid) {\r\n      this.addForm.markAllAsTouched();\r\n      return;\r\n    }\r\n\r\n    this.isUploading = true;\r\n    const formValue = this.addForm.value;\r\n    \r\n    const attachmentData: AttachmentUploadDto = {\r\n      file: this.selectedFile,\r\n      description: formValue.description || undefined,\r\n      documentSource: formValue.documentSource ? parseInt(formValue.documentSource) : undefined\r\n    };\r\n\r\n    console.log('Uploading attachment:', attachmentData); // Debug log\r\n\r\n    this.lettersService.addAttachment(this.currentLetter.id, attachmentData).subscribe({\r\n      next: (res) => {\r\n        this.isUploading = false;\r\n        this.showSuccessMessage(this.translate('letters.add_attachment_success'));\r\n        this.close();\r\n        this.attachmentAdded.emit(); // Notify parent component\r\n      },\r\n      error: (error) => {\r\n        this.isUploading = false;\r\n        console.error('Error adding attachment:', error);\r\n        this.handleApiErrors(error);\r\n      }\r\n    });\r\n  }\r\n\r\n  private handleApiErrors(error: any) {\r\n    console.log('Full error response:', error); // Debug log\r\n    \r\n    if (error.error?.errors) {\r\n      // Handle validation errors by setting them on form controls\r\n      const errors = error.error.errors;\r\n      console.log('API validation errors:', errors); // Debug log\r\n      \r\n      Object.keys(errors).forEach(fieldName => {\r\n        const control = this.addForm.get(this.getFormFieldName(fieldName));\r\n        if (control) {\r\n          control.setErrors({ serverError: errors[fieldName][0] });\r\n          control.markAsTouched();\r\n        } else {\r\n          console.warn(`Form control not found for field: ${fieldName}`); // Debug log\r\n        }\r\n      });\r\n    } else {\r\n      // Show generic error\r\n      let errorMessage = 'Unknown error occurred';\r\n      if (error.error?.message) {\r\n        errorMessage = error.error.message;\r\n      } else if (error.message) {\r\n        errorMessage = error.message;\r\n      }\r\n      this.showErrorMessage(this.translate('common.error') + ': ' + errorMessage);\r\n    }\r\n  }\r\n\r\n  private getFormFieldName(apiFieldName: string): string {\r\n    // Map API field names (capitalized) to form field names (lowercase)\r\n    const fieldMapping: { [key: string]: string } = {\r\n      'Description': 'description',\r\n      'DocumentSource': 'documentSource'\r\n    };\r\n    return fieldMapping[apiFieldName] || apiFieldName.toLowerCase();\r\n  }\r\n\r\n  translate(key: string): string {\r\n    return this.translationService.translate(key);\r\n  }\r\n\r\n  showSuccessMessage(message: string) {\r\n    const successData = {\r\n      title: this.translate('common.success'),\r\n      message: message,\r\n      confirmText: this.translate('common.ok'),\r\n      cancelText: '',\r\n      type: 'info' as const\r\n    };\r\n    this.confirmationModal.show(successData);\r\n  }\r\n\r\n  showErrorMessage(message: string) {\r\n    const errorData = {\r\n      title: this.translate('common.error'),\r\n      message: message,\r\n      confirmText: this.translate('common.ok'),\r\n      cancelText: '',\r\n      type: 'warning' as const\r\n    };\r\n    this.confirmationModal.show(errorData);\r\n  }\r\n\r\n  formatFileSize(bytes: number): string {\r\n    if (bytes === 0) return '0 Bytes';\r\n    const k = 1024;\r\n    const sizes = ['Bytes', 'KB', 'MB', 'GB'];\r\n    const i = Math.floor(Math.log(bytes) / Math.log(k));\r\n    return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];\r\n  }\r\n\r\n  getFileIcon(fileType: string): string {\r\n    if (fileType.includes('pdf')) return 'fas fa-file-pdf text-danger';\r\n    if (fileType.includes('word') || fileType.includes('document')) return 'fas fa-file-word text-primary';\r\n    if (fileType.includes('excel') || fileType.includes('spreadsheet')) return 'fas fa-file-excel text-success';\r\n    if (fileType.includes('powerpoint') || fileType.includes('presentation')) return 'fas fa-file-powerpoint text-warning';\r\n    if (fileType.includes('image')) return 'fas fa-file-image text-info';\r\n    return 'fas fa-file text-secondary';\r\n  }\r\n}\r\n", "<!-- Add Attachment Modal -->\r\n<div class=\"modal fade\" [class.show]=\"isOpen\" [style.display]=\"isOpen ? 'block' : 'none'\" \r\n     tabindex=\"-1\" role=\"dialog\" [attr.aria-hidden]=\"!isOpen\" (click)=\"onBackdropClick($event)\">\r\n  <div class=\"modal-dialog modal-lg modal-dialog-centered\" role=\"document\">\r\n    <div class=\"modal-content\">\r\n      <div class=\"modal-header text-white\" style=\"background: #D4AF5F !important\" [dir]=\"isRTL() ? 'rtl' : 'ltr'\">\r\n        <h5 class=\"modal-title\" [class.text-end]=\"isRTL()\" [class.text-start]=\"!isRTL()\">\r\n        {{ translate('letters.add_attachment') }}\r\n        </h5>\r\n      </div>\r\n      \r\n      <form [formGroup]=\"addForm\" (ngSubmit)=\"onSubmit()\">\r\n        <div class=\"modal-body\">\r\n          <!-- Letter Info -->\r\n          <div class=\"alert alert-info\" *ngIf=\"currentLetter\">\r\n            <strong>{{ translate('letters.letter_details') }}:</strong> {{ currentLetter.subject }}\r\n          </div>\r\n\r\n          <div class=\"row g-3\">\r\n            <!-- File Upload Area -->\r\n            <div class=\"col-12\">\r\n              <label class=\"form-label\">{{ translate('letters.file') }} <span class=\"text-danger\">*</span></label>\r\n              \r\n              <!-- File Drop Zone -->\r\n              <div class=\"file-drop-zone\" \r\n                   [class.has-file]=\"selectedFile\"\r\n                   (dragover)=\"onDragOver($event)\"\r\n                   (dragleave)=\"onDragLeave($event)\"\r\n                   (drop)=\"onDrop($event)\"\r\n                   (click)=\"fileInput.click()\">\r\n                \r\n                <div class=\"file-drop-content\" *ngIf=\"!selectedFile\">\r\n                  \r\n                  <h5 class=\"text-muted\">{{ translate('letters.drag_drop_files') }}</h5>\r\n                  <p class=\"text-muted small\">{{ translate('letters.file_requirements') }}</p>\r\n                  <button type=\"button\" class=\"btn btn-outline-primary\">\r\n                    {{ translate('letters.browse_files') }}\r\n                  </button>\r\n                </div>\r\n\r\n                <!-- Selected File Display -->\r\n                <div class=\"selected-file-display\" *ngIf=\"selectedFile\">\r\n                  <div class=\"d-flex align-items-center\">\r\n                    <svg [class]=\"getFileIcon(selectedFile.type) + ' -2x me-3'\"></svg>\r\n                    <div class=\"flex-grow-1\">\r\n                      <h6 class=\"mb-1\">{{ selectedFile.name }}</h6>\r\n                      <small class=\"text-muted\">{{ formatFileSize(selectedFile.size) }}</small>\r\n                    </div>\r\n                    <button type=\"button\" class=\"btn btn-sm btn-outline-danger\" (click)=\"removeFile()\">\r\n                      <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\">\r\n                        <line x1=\"18\" y1=\"6\" x2=\"6\" y2=\"18\"></line>\r\n                        <line x1=\"6\" y1=\"6\" x2=\"18\" y2=\"18\"></line>\r\n                      </svg>\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <!-- Hidden File Input -->\r\n              <input #fileInput type=\"file\" class=\"d-none\" \r\n                     (change)=\"onFileSelected($event)\"\r\n                     accept=\".pdf,.doc,.docx,.xls,.xlsx,.ppt,.pptx,.jpg,.jpeg,.png,.gif\">\r\n            </div>\r\n\r\n            <!-- Description -->\r\n            <div class=\"col-12\">\r\n              <label class=\"form-label\">{{ translate('letters.attachment_description') }}</label>\r\n              <textarea class=\"form-control\" formControlName=\"description\" rows=\"3\" \r\n                        [placeholder]=\"translate('letters.attachment_description_placeholder')\"\r\n                        [class.is-invalid]=\"isFieldValid('description') || hasServerError('description')\"></textarea>\r\n              <div class=\"invalid-feedback\" *ngIf=\"isFieldValid('description')\">\r\n                {{ getErrorMessage('description') }}\r\n              </div>\r\n              <div class=\"invalid-feedback\" *ngIf=\"hasServerError('description')\">\r\n                {{ getServerErrorMessage('description') }}\r\n              </div>\r\n            </div>\r\n\r\n            <!-- Document Source (Optional) -->\r\n            <div class=\"col-12\">\r\n              <label class=\"form-label\">{{ translate('letters.document_source') }}</label>\r\n              <select class=\"form-select\" formControlName=\"documentSource\" \r\n                      [class.is-invalid]=\"isFieldValid('documentSource') || hasServerError('documentSource')\">\r\n                <option value=\"\">{{ translate('letters.select_document_source') }}</option>\r\n                <option value=\"1\">{{ translate('letters.document_source_1') }}</option>\r\n                <option value=\"2\">{{ translate('letters.document_source_2') }}</option>\r\n                <option value=\"3\">{{ translate('letters.document_source_3') }}</option>\r\n              </select>\r\n              <div class=\"invalid-feedback\" *ngIf=\"isFieldValid('documentSource')\">\r\n                {{ getErrorMessage('documentSource') }}\r\n              </div>\r\n              <div class=\"invalid-feedback\" *ngIf=\"hasServerError('documentSource')\">\r\n                {{ getServerErrorMessage('documentSource') }}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        \r\n        <div class=\"modal-footer\">\r\n         \r\n          <button type=\"submit\" class=\"btn btn-info\" [disabled]=\"!selectedFile || isUploading\">\r\n            \r\n            <span class=\"spinner-border spinner-border-sm me-2\" *ngIf=\"isUploading\"></span>\r\n            {{ isUploading ? translate('letters.uploading') : translate('letters.add_attachment') }}\r\n          </button>\r\n          <button type=\"button\" class=\"btn btn-secondary\" (click)=\"close()\" [disabled]=\"isUploading\">\r\n            {{ translate('common.cancel') }}\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<!-- Modal Backdrop -->\r\n<div class=\"modal-backdrop fade\" [class.show]=\"isOpen\" *ngIf=\"isOpen\"></div>\r\n\r\n<!-- Confirmation Modal -->\r\n<app-letters-confirmation-modal #confirmationModal></app-letters-confirmation-modal>\r\n", "import { AfterViewInit, Component, ElementRef, ViewChild, EventEmitter, Output } from '@angular/core';\r\nimport { LettersService } from '../../../services/letters.service';\r\nimport { AbstractControl, FormBuilder, FormGroup, ValidationErrors, Validators } from '@angular/forms';\r\nimport { TranslationService } from '../../../services/translation.service';\r\nimport { LettersConfirmationModalComponent } from '../letters-confirmation-modal/letters-confirmation-modal.component';\r\nimport { LetterItem, LetterAttachment } from '../../../models/letter.model';\r\n\r\n@Component({\r\n  selector: 'app-edit-attachment',\r\n  standalone: false,\r\n  templateUrl: './edit-attachment.html',\r\n  styleUrl: './edit-attachment.css'\r\n})\r\nexport class EditAttachment implements AfterViewInit {\r\n  @ViewChild('confirmationModal') confirmationModal!: LettersConfirmationModalComponent;\r\n  @Output() attachmentUpdated = new EventEmitter<void>();\r\n  \r\n  // Custom modal properties\r\n  isOpen = false;\r\n  currentLetter: LetterItem | null = null;\r\n  currentAttachment: LetterAttachment | null = null;\r\n  isUpdating = false;\r\n  \r\n  editForm!: FormGroup;\r\n  \r\n  constructor(\r\n    private lettersService: LettersService,\r\n    private fb: FormBuilder,\r\n    private translationService: TranslationService\r\n  ) {}\r\n\r\n  isRTL(): boolean {\r\n    return this.translationService.isRTL();\r\n  }\r\n\r\n  ngAfterViewInit(): void {\r\n    // No Bootstrap modal needed\r\n  }\r\n  \r\n  open(letter: LetterItem, attachment: LetterAttachment) { \r\n    this.currentLetter = letter;\r\n    this.currentAttachment = attachment;\r\n    this.isOpen = true;\r\n    this.initializeForm();\r\n    this.populateForm(attachment);\r\n  }\r\n  \r\n  close() { \r\n    this.isOpen = false;\r\n    this.currentLetter = null;\r\n    this.currentAttachment = null;\r\n    this.isUpdating = false;\r\n    this.editForm.reset();\r\n  }\r\n\r\n  // Handle backdrop click\r\n  onBackdropClick(event: Event) {\r\n    if (event.target === event.currentTarget) {\r\n      this.close();\r\n    }\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.initializeForm();\r\n  }\r\n\r\n  initializeForm() {\r\n    this.editForm = this.fb.group({\r\n      description: ['', [Validators.maxLength(200)]],\r\n      documentSource: ['']\r\n    });\r\n  }\r\n\r\n  populateForm(attachment: LetterAttachment) {\r\n    this.editForm.patchValue({\r\n      description: '',\r\n      documentSource: ''\r\n    });\r\n  }\r\n\r\n  isFieldValid(field: string) {\r\n    const control = this.editForm.get(field);\r\n    return control?.touched && control?.invalid;\r\n  }\r\n\r\n  hasServerError(field: string) {\r\n    const control = this.editForm.get(field);\r\n    return control?.errors?.['serverError'];\r\n  }\r\n\r\n  getServerErrorMessage(field: string) {\r\n    const control = this.editForm.get(field);\r\n    return control?.errors?.['serverError'] || '';\r\n  }\r\n\r\n  getErrorMessage(field: string) {\r\n    const control = this.editForm.get(field);\r\n    if (!control?.errors) return '';\r\n    \r\n    if (control.errors['required']) {\r\n      return this.translate('common.field_required');\r\n    }\r\n    if (control.errors['maxlength']) {\r\n      const requiredLength = control.errors['maxlength']['requiredLength'];\r\n      return `Maximum length is ${requiredLength} characters`;\r\n    }\r\n    return 'Invalid field';\r\n  }\r\n\r\n  onSubmit() {\r\n    if (this.editForm.invalid || !this.currentLetter || !this.currentAttachment) {\r\n      this.editForm.markAllAsTouched();\r\n      return;\r\n    }\r\n\r\n    this.isUpdating = true;\r\n    const formValue = this.editForm.value;\r\n    \r\n    const attachmentData = {\r\n      fileName: formValue.description || this.currentAttachment.fileName\r\n    };\r\n\r\n    console.log('Updating attachment:', attachmentData); // Debug log\r\n\r\n    this.lettersService.updateAttachment(\r\n      this.currentLetter.id, \r\n      this.currentAttachment.id, \r\n      attachmentData\r\n    ).subscribe({\r\n      next: (res) => {\r\n        this.isUpdating = false;\r\n        this.showSuccessMessage(this.translate('letters.edit_attachment_success'));\r\n        this.close();\r\n        this.attachmentUpdated.emit(); // Notify parent component\r\n      },\r\n      error: (error) => {\r\n        this.isUpdating = false;\r\n        console.error('Error updating attachment:', error);\r\n        this.handleApiErrors(error);\r\n      }\r\n    });\r\n  }\r\n\r\n  private handleApiErrors(error: any) {\r\n    console.log('Full error response:', error); // Debug log\r\n    \r\n    if (error.error?.errors) {\r\n      // Handle validation errors by setting them on form controls\r\n      const errors = error.error.errors;\r\n      console.log('API validation errors:', errors); // Debug log\r\n      \r\n      Object.keys(errors).forEach(fieldName => {\r\n        const control = this.editForm.get(this.getFormFieldName(fieldName));\r\n        if (control) {\r\n          control.setErrors({ serverError: errors[fieldName][0] });\r\n          control.markAsTouched();\r\n        } else {\r\n          console.warn(`Form control not found for field: ${fieldName}`); // Debug log\r\n        }\r\n      });\r\n    } else {\r\n      // Show generic error\r\n      let errorMessage = 'Unknown error occurred';\r\n      if (error.error?.message) {\r\n        errorMessage = error.error.message;\r\n      } else if (error.message) {\r\n        errorMessage = error.message;\r\n      }\r\n      this.showErrorMessage(this.translate('common.error') + ': ' + errorMessage);\r\n    }\r\n  }\r\n\r\n  private getFormFieldName(apiFieldName: string): string {\r\n    // Map API field names (capitalized) to form field names (lowercase)\r\n    const fieldMapping: { [key: string]: string } = {\r\n      'Description': 'description',\r\n      'DocumentSource': 'documentSource'\r\n    };\r\n    return fieldMapping[apiFieldName] || apiFieldName.toLowerCase();\r\n  }\r\n\r\n  translate(key: string): string {\r\n    return this.translationService.translate(key);\r\n  }\r\n\r\n  showSuccessMessage(message: string) {\r\n    const successData = {\r\n      title: this.translate('common.success'),\r\n      message: message,\r\n      confirmText: this.translate('common.ok'),\r\n      cancelText: '',\r\n      type: 'info' as const\r\n    };\r\n    this.confirmationModal.show(successData);\r\n  }\r\n\r\n  showErrorMessage(message: string) {\r\n    const errorData = {\r\n      title: this.translate('common.error'),\r\n      message: message,\r\n      confirmText: this.translate('common.ok'),\r\n      cancelText: '',\r\n      type: 'warning' as const\r\n    };\r\n    this.confirmationModal.show(errorData);\r\n  }\r\n\r\n  getFileIcon(fileType: string | null): string {\r\n    if (!fileType) return 'fas fa-file text-secondary';\r\n    if (fileType.includes('pdf')) return 'fas fa-file-pdf text-danger';\r\n    if (fileType.includes('word') || fileType.includes('document')) return 'fas fa-file-word text-primary';\r\n    if (fileType.includes('excel') || fileType.includes('spreadsheet')) return 'fas fa-file-excel text-success';\r\n    if (fileType.includes('powerpoint') || fileType.includes('presentation')) return 'fas fa-file-powerpoint text-warning';\r\n    if (fileType.includes('image')) return 'fas fa-file-image text-info';\r\n    return 'fas fa-file text-secondary';\r\n  }\r\n\r\n  formatDate(dateString: string): string {\r\n    if (!dateString || dateString === '0001-01-01T00:00:00') return 'N/A';\r\n    const date = new Date(dateString);\r\n    return date.toLocaleDateString() + ' ' + date.toLocaleTimeString();\r\n  }\r\n}\r\n", "<!-- Edit Attachment Modal -->\r\n<div class=\"modal fade\" [class.show]=\"isOpen\" [style.display]=\"isOpen ? 'block' : 'none'\" \r\n     tabindex=\"-1\" role=\"dialog\" [attr.aria-hidden]=\"!isOpen\" (click)=\"onBackdropClick($event)\">\r\n  <div class=\"modal-dialog modal-lg modal-dialog-centered\" role=\"document\">\r\n    <div class=\"modal-content\">\r\n      <div class=\"modal-header bg-warning text-dark\" [dir]=\"isRTL() ? 'rtl' : 'ltr'\">\r\n        <h5 class=\"modal-title\" [class.text-end]=\"isRTL()\" [class.text-start]=\"!isRTL()\">\r\n          {{ translate('letters.edit_attachment') }}\r\n        </h5>\r\n        <button type=\"button\" class=\"btn-close\" (click)=\"close()\" aria-label=\"Close\"></button>\r\n      </div>\r\n      \r\n      <form [formGroup]=\"editForm\" (ngSubmit)=\"onSubmit()\">\r\n        <div class=\"modal-body\">\r\n          <!-- Letter Info -->\r\n          <div class=\"alert alert-info\" *ngIf=\"currentLetter\">\r\n            \r\n            <strong>{{ translate('letters.letter_details') }}:</strong> {{ currentLetter.subject }}\r\n          </div>\r\n\r\n          <!-- Attachment Info -->\r\n          <div class=\"attachment-info\" *ngIf=\"currentAttachment\">\r\n            <div class=\"card\">\r\n              <div class=\"card-body\">\r\n                <div class=\"d-flex align-items-center\">\r\n                  <i [class]=\"getFileIcon(currentAttachment.fileType) + ' fa-2x me-3'\"></i>\r\n                  <div class=\"flex-grow-1\">\r\n                    <h6 class=\"mb-1\">{{ currentAttachment.fileName || 'Unnamed file' }}</h6>\r\n                    <small class=\"text-muted\">\r\n                      {{ currentAttachment.uploadedByName || 'Unknown' }}\r\n                    </small>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"row g-3 mt-3\">\r\n            <!-- Description -->\r\n            <div class=\"col-12\">\r\n              <label class=\"form-label\">{{ translate('letters.attachment_description') }}</label>\r\n              <textarea class=\"form-control\" formControlName=\"description\" rows=\"3\" \r\n                        [placeholder]=\"translate('letters.attachment_description_placeholder')\"\r\n                        [class.is-invalid]=\"isFieldValid('description') || hasServerError('description')\"></textarea>\r\n              <div class=\"invalid-feedback\" *ngIf=\"isFieldValid('description')\">\r\n                {{ getErrorMessage('description') }}\r\n              </div>\r\n              <div class=\"invalid-feedback\" *ngIf=\"hasServerError('description')\">\r\n                {{ getServerErrorMessage('description') }}\r\n              </div>\r\n            </div>\r\n\r\n            <!-- Document Source -->\r\n            <div class=\"col-12\">\r\n              <label class=\"form-label\">{{ translate('letters.document_source') }}</label>\r\n              <select class=\"form-select\" formControlName=\"documentSource\" \r\n                      [class.is-invalid]=\"isFieldValid('documentSource') || hasServerError('documentSource')\">\r\n                <option value=\"\">{{ translate('letters.select_document_source') }}</option>\r\n                <option value=\"1\">{{ translate('letters.document_source_1') }}</option>\r\n                <option value=\"2\">{{ translate('letters.document_source_2') }}</option>\r\n                <option value=\"3\">{{ translate('letters.document_source_3') }}</option>\r\n              </select>\r\n              <div class=\"invalid-feedback\" *ngIf=\"isFieldValid('documentSource')\">\r\n                {{ getErrorMessage('documentSource') }}\r\n              </div>\r\n              <div class=\"invalid-feedback\" *ngIf=\"hasServerError('documentSource')\">\r\n                {{ getServerErrorMessage('documentSource') }}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        \r\n        <div class=\"modal-footer\">\r\n          \r\n          <button type=\"submit\" class=\"btn btn-warning\" [disabled]=\"editForm.invalid || isUpdating\">\r\n            \r\n            <span class=\"spinner-border spinner-border-sm me-2\" *ngIf=\"isUpdating\"></span>\r\n            {{ isUpdating ? translate('common.updating') : translate('letters.update') }}\r\n          </button>\r\n          <button type=\"button\" class=\"btn btn-secondary\" (click)=\"close()\" [disabled]=\"isUpdating\">\r\n            {{ translate('common.cancel') }}\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<!-- Modal Backdrop -->\r\n<div class=\"modal-backdrop fade\" [class.show]=\"isOpen\" *ngIf=\"isOpen\"></div>\r\n\r\n<!-- Confirmation Modal -->\r\n<app-letters-confirmation-modal #confirmationModal></app-letters-confirmation-modal>\r\n", "import { Component, EventEmitter, Input, Output, ViewChild, ElementRef, AfterViewInit } from '@angular/core';\r\nimport { TranslationService } from '../../../services/translation.service';\r\n\r\n@Component({\r\n  selector: 'app-signature-pad-modal',\r\n  standalone: false,\r\n  templateUrl: './signature-pad-modal.component.html',\r\n  styleUrl: './signature-pad-modal.component.css'\r\n})\r\nexport class SignaturePadModalComponent implements AfterViewInit {\r\n  @ViewChild('signatureCanvas', { static: false }) signatureCanvas!: ElementRef<HTMLCanvasElement>;\r\n  @Input() isOpen = false;\r\n  @Output() signatureSaved = new EventEmitter<{signature: File, approvalNotes?: string}>();\r\n  @Output() modalClosed = new EventEmitter<void>();\r\n\r\n  private canvas!: HTMLCanvasElement;\r\n  private ctx!: CanvasRenderingContext2D;\r\n  private isDrawing = false;\r\n  private lastX = 0;\r\n  private lastY = 0;\r\n  private uploadedFile: File | null = null;\r\n  \r\n  approvalNotes: string = '';\r\n\r\n  constructor(\r\n    private translationService: TranslationService\r\n  ) {}\r\n\r\n  ngAfterViewInit() {\r\n    if (this.signatureCanvas) {\r\n      this.initializeCanvas();\r\n    }\r\n  }\r\n\r\n  open() {\r\n    console.log('Opening signature pad modal');\r\n    this.isOpen = true;\r\n    console.log('Set isOpen to true, new value:', this.isOpen);\r\n    this.approvalNotes = '';\r\n    // Initialize canvas immediately without timeout\r\n    this.initializeCanvas();\r\n    console.log('Signature pad modal opened');\r\n  }\r\n\r\n  close() {\r\n    console.log('Closing signature pad modal, current isOpen:', this.isOpen);\r\n    \r\n    // Clear form data first\r\n    this.clearSignature();\r\n    this.uploadedFile = null;\r\n    this.approvalNotes = '';\r\n    \r\n    // Force remove modal backdrop and body class\r\n    const backdrops = document.querySelectorAll('.modal-backdrop');\r\n    console.log('Found backdrops:', backdrops.length);\r\n    backdrops.forEach((backdrop, index) => {\r\n      console.log(`Removing backdrop ${index}`);\r\n      backdrop.remove();\r\n    });\r\n    document.body.classList.remove('modal-open');\r\n    console.log('Removed modal-open class from body');\r\n    \r\n    // Set isOpen to false\r\n    this.isOpen = false;\r\n    console.log('Set isOpen to false, new value:', this.isOpen);\r\n    \r\n    // Force hide the modal using DOM manipulation as backup\r\n    const modalElements = document.querySelectorAll('.modal');\r\n    console.log('Found modal elements:', modalElements.length);\r\n    modalElements.forEach((modalElement, index) => {\r\n      console.log(`Hiding modal ${index}`);\r\n      modalElement.classList.remove('show');\r\n      (modalElement as HTMLElement).style.display = 'none';\r\n    });\r\n    console.log('Force hidden all modals via DOM manipulation');\r\n    \r\n    this.modalClosed.emit();\r\n    console.log('Signature pad modal closed, isOpen:', this.isOpen);\r\n    \r\n    // Force trigger change detection\r\n    setTimeout(() => {\r\n      console.log('After timeout - isOpen:', this.isOpen);\r\n    }, 100);\r\n  }\r\n\r\n  private initializeCanvas() {\r\n    if (!this.signatureCanvas) return;\r\n    \r\n    this.canvas = this.signatureCanvas.nativeElement;\r\n    this.ctx = this.canvas.getContext('2d')!;\r\n    \r\n    // Set canvas size\r\n    this.canvas.width = 600;\r\n    this.canvas.height = 200;\r\n    \r\n    // Set drawing styles\r\n    this.ctx.strokeStyle = '#000000';\r\n    this.ctx.lineWidth = 2;\r\n    this.ctx.lineCap = 'round';\r\n    this.ctx.lineJoin = 'round';\r\n    \r\n    // Set white background\r\n    this.ctx.fillStyle = '#ffffff';\r\n    this.ctx.fillRect(0, 0, this.canvas.width, this.canvas.height);\r\n    \r\n    // Add event listeners\r\n    this.addEventListeners();\r\n  }\r\n\r\n  private addEventListeners() {\r\n    // Mouse events\r\n    this.canvas.addEventListener('mousedown', this.startDrawing.bind(this));\r\n    this.canvas.addEventListener('mousemove', this.draw.bind(this));\r\n    this.canvas.addEventListener('mouseup', this.stopDrawing.bind(this));\r\n    this.canvas.addEventListener('mouseout', this.stopDrawing.bind(this));\r\n\r\n    // Touch events for mobile\r\n    this.canvas.addEventListener('touchstart', this.handleTouch.bind(this));\r\n    this.canvas.addEventListener('touchmove', this.handleTouch.bind(this));\r\n    this.canvas.addEventListener('touchend', this.stopDrawing.bind(this));\r\n  }\r\n\r\n  private startDrawing(e: MouseEvent) {\r\n    this.isDrawing = true;\r\n    const rect = this.canvas.getBoundingClientRect();\r\n    this.lastX = e.clientX - rect.left;\r\n    this.lastY = e.clientY - rect.top;\r\n  }\r\n\r\n  private draw(e: MouseEvent) {\r\n    if (!this.isDrawing) return;\r\n\r\n    const rect = this.canvas.getBoundingClientRect();\r\n    const currentX = e.clientX - rect.left;\r\n    const currentY = e.clientY - rect.top;\r\n\r\n    this.ctx.beginPath();\r\n    this.ctx.moveTo(this.lastX, this.lastY);\r\n    this.ctx.lineTo(currentX, currentY);\r\n    this.ctx.stroke();\r\n\r\n    this.lastX = currentX;\r\n    this.lastY = currentY;\r\n  }\r\n\r\n  private stopDrawing() {\r\n    this.isDrawing = false;\r\n  }\r\n\r\n  private handleTouch(e: TouchEvent) {\r\n    e.preventDefault();\r\n    const touch = e.touches[0];\r\n    const mouseEvent = new MouseEvent(e.type === 'touchstart' ? 'mousedown' : 'mousemove', {\r\n      clientX: touch.clientX,\r\n      clientY: touch.clientY\r\n    });\r\n    this.canvas.dispatchEvent(mouseEvent);\r\n  }\r\n\r\n  clearSignature() {\r\n    if (this.ctx) {\r\n      this.ctx.fillStyle = '#ffffff';\r\n      this.ctx.fillRect(0, 0, this.canvas.width, this.canvas.height);\r\n    }\r\n    this.uploadedFile = null;\r\n  }\r\n\r\n  onFileSelected(event: any) {\r\n    const file = event.target.files[0];\r\n    if (file && file.type.startsWith('image/')) {\r\n      this.uploadedFile = file;\r\n      this.loadImageToCanvas(file);\r\n    } else {\r\n      alert(this.translate('letters.invalid_image_format'));\r\n    }\r\n  }\r\n\r\n  private loadImageToCanvas(file: File) {\r\n    const reader = new FileReader();\r\n    reader.onload = (e: any) => {\r\n      const img = new Image();\r\n      img.onload = () => {\r\n        // Clear canvas\r\n        this.ctx.fillStyle = '#ffffff';\r\n        this.ctx.fillRect(0, 0, this.canvas.width, this.canvas.height);\r\n        \r\n        // Calculate scaling to fit image in canvas\r\n        const scale = Math.min(this.canvas.width / img.width, this.canvas.height / img.height);\r\n        const x = (this.canvas.width - img.width * scale) / 2;\r\n        const y = (this.canvas.height - img.height * scale) / 2;\r\n        \r\n        // Draw image\r\n        this.ctx.drawImage(img, x, y, img.width * scale, img.height * scale);\r\n      };\r\n      img.src = e.target.result;\r\n    };\r\n    reader.readAsDataURL(file);\r\n  }\r\n\r\n  saveSignature(event?: Event) {\r\n    // Prevent any default form submission behavior\r\n    if (event) {\r\n      event.preventDefault();\r\n      event.stopPropagation();\r\n    }\r\n    \r\n    const approvalNotes = this.approvalNotes?.trim();\r\n    \r\n    // If user uploaded a file, use that directly\r\n    if (this.uploadedFile) {\r\n      this.signatureSaved.emit({\r\n        signature: this.uploadedFile,\r\n        approvalNotes: approvalNotes\r\n      });\r\n      this.close();\r\n      return;\r\n    }\r\n\r\n    // Otherwise, check if canvas has any content\r\n    if (!this.canvas) return;\r\n\r\n    const imageData = this.ctx.getImageData(0, 0, this.canvas.width, this.canvas.height);\r\n    const hasContent = imageData.data.some((channel, index) => {\r\n      return index % 4 !== 3 && channel !== 255; // Check if any pixel is not white (excluding alpha)\r\n    });\r\n\r\n    if (!hasContent) {\r\n      alert(this.translate('letters.signature_required'));\r\n      return;\r\n    }\r\n\r\n    // Convert canvas to blob\r\n    this.canvas.toBlob((blob) => {\r\n      if (blob) {\r\n        const file = new File([blob], 'signature.png', { type: 'image/png' });\r\n        this.signatureSaved.emit({\r\n          signature: file,\r\n          approvalNotes: approvalNotes\r\n        });\r\n        this.close();\r\n      }\r\n    }, 'image/png');\r\n  }\r\n\r\n  onBackdropClick(event: Event) {\r\n    if (event.target === event.currentTarget) {\r\n      this.close();\r\n    }\r\n  }\r\n\r\n  translate(key: string): string {\r\n    return this.translationService.translate(key);\r\n  }\r\n\r\n  isRTL(): boolean {\r\n    return this.translationService.isRTL();\r\n  }\r\n}\r\n", "<div class=\"modal fade\" [class.show]=\"isOpen\" [style.display]=\"isOpen ? 'block' : 'none'\" \r\n     tabindex=\"-1\" role=\"dialog\" [attr.aria-hidden]=\"!isOpen\" (click)=\"onBackdropClick($event)\">\r\n  <div class=\"modal-dialog modal-lg modal-dialog-centered\" role=\"document\">\r\n    <div class=\"modal-content\">\r\n      <div class=\"modal-header bg-primary\" [dir]=\"isRTL() ? 'rtl' : 'ltr'\">\r\n        <h5 class=\"modal-title text-white\" [class.text-end]=\"isRTL()\" [class.text-start]=\"!isRTL()\">\r\n          <i class=\"fas fa-signature\" [class.me-2]=\"!isRTL()\" [class.ms-2]=\"isRTL()\"></i>\r\n          {{ translate('letters.signature_pad') }}\r\n        </h5>\r\n      </div>\r\n      <div class=\"modal-body\">\r\n        <div class=\"signature-container\">\r\n          <div class=\"signature-instructions mb-3\">\r\n            <p class=\"text-muted mb-2\">\r\n              <i class=\"fas fa-info-circle me-2\"></i>\r\n              {{ translate('letters.draw_signature') }}\r\n            </p>\r\n          </div>\r\n          \r\n          <div class=\"signature-canvas-container\">\r\n            <canvas #signatureCanvas \r\n                    class=\"signature-canvas\"\r\n                    [class.rtl]=\"isRTL()\">\r\n            </canvas>\r\n          </div>\r\n          <div class=\"signature-actions mt-3\">\r\n            <div class=\"row\">\r\n              <div class=\"col-md-6\">\r\n                <button type=\"button\" \r\n                        class=\"btn btn-outline-secondary w-100\" \r\n                        (click)=\"clearSignature()\">\r\n                  <i class=\"fas fa-eraser me-1\"></i>\r\n                  {{ translate('letters.clear_signature') }}\r\n                </button>\r\n              </div>\r\n              <div class=\"col-md-6\">\r\n                <label class=\"btn btn-outline-primary w-100\" for=\"signatureUpload\">\r\n                  <i class=\"fas fa-upload me-1\"></i>\r\n                  {{ translate('letters.upload_signature') }}\r\n                  <input type=\"file\" \r\n                         id=\"signatureUpload\" \r\n                         accept=\"image/*\" \r\n                         (change)=\"onFileSelected($event)\" \r\n                         style=\"display: none;\">\r\n                </label>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <!-- Approval Notes Section -->\r\n          <div class=\"approval-notes-section mt-4\">\r\n            <h6 class=\"mb-3\">\r\n              <i class=\"fas fa-sticky-note me-2\"></i>\r\n              {{ translate('letters.approval_notes') }}\r\n            </h6>\r\n            <div class=\"mb-3\">\r\n              <textarea \r\n                class=\"form-control\" \r\n                rows=\"3\" \r\n                [placeholder]=\"translate('letters.approval_notes_placeholder')\"\r\n                [(ngModel)]=\"approvalNotes\">\r\n              </textarea>\r\n              <small class=\"form-text text-muted\">\r\n                {{ translate('letters.approval_notes_help') }}\r\n              </small>\r\n            </div>\r\n          </div>\r\n\r\n          \r\n        </div>\r\n      </div>\r\n      <div class=\"modal-footer\">\r\n        <button type=\"button\" class=\"btn btn-secondary\" (click)=\"close()\">\r\n          <i class=\"fas fa-times me-1\"></i>\r\n          {{ translate('common.cancel') }}\r\n        </button>\r\n        <button type=\"button\" class=\"btn btn-success\" (click)=\"saveSignature($event)\">\r\n          <i class=\"fas fa-check me-1\"></i>\r\n          {{ translate('common.save') }}\r\n        </button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n<div class=\"modal-backdrop fade\" [class.show]=\"isOpen\" [style.display]=\"isOpen ? 'block' : 'none'\"></div>\r\n", "import { Component, Input, OnInit } from '@angular/core';\r\nimport { LettersService } from '../../../services/letters.service';\r\nimport { TranslationService } from '../../../services/translation.service';\r\nimport { LetterItem, LetterAttachment } from '../../../models/letter.model';\r\n\r\n@Component({\r\n  selector: 'app-letter-details-modal',\r\n  standalone: false,\r\n  templateUrl: './letter-details-modal.component.html',\r\n  styleUrl: './letter-details-modal.component.css',\r\n})\r\nexport class LetterDetailsModalComponent implements OnInit {\r\n  @Input() letterId: number | null = null;\r\n\r\n  letter: LetterItem | null = null;\r\n  isLoading = false;\r\n  isVisible = false;\r\n\r\n  constructor(\r\n    private lettersService: LettersService,\r\n    private translationService: TranslationService\r\n  ) {}\r\n\r\n  ngOnInit() {}\r\n\r\n  open(letterId: number) {\r\n    this.letterId = letterId;\r\n    this.isVisible = true;\r\n    this.loadLetterDetails();\r\n  }\r\n\r\n  close() {\r\n    this.isVisible = false;\r\n    this.letter = null;\r\n    this.letterId = null;\r\n  }\r\n\r\n  loadLetterDetails() {\r\n    if (!this.letterId) return;\r\n\r\n    this.isLoading = true;\r\n    this.lettersService.getLetter(this.letterId).subscribe({\r\n      next: (response) => {\r\n        if (response.success && response.data) {\r\n          this.letter = response.data;\r\n        }\r\n        this.isLoading = false;\r\n      },\r\n      error: (error) => {\r\n        console.error('Error loading letter details:', error);\r\n        this.isLoading = false;\r\n      },\r\n    });\r\n  }\r\n\r\n  translate(key: string): string {\r\n    return this.translationService.translate(key);\r\n  }\r\n\r\n  isRTL(): boolean {\r\n    return this.translationService.isRTL();\r\n  }\r\n\r\n  formatDate(dateString: string): string {\r\n    if (!dateString) return '';\r\n    const date = new Date(dateString);\r\n    return date.toLocaleDateString() + ' ' + date.toLocaleTimeString();\r\n  }\r\n\r\n  getDirectionLabel(direction: number): string {\r\n    const directions: Record<number, string> = {\r\n      0: this.translate('letters.directions.0'),\r\n      1: this.translate('letters.directions.1'),\r\n    };\r\n    return directions[direction] || 'Unknown';\r\n  }\r\n\r\n  getLetterTypeLabel(letterType: number): string {\r\n    const letterTypes: Record<number, string> = {\r\n      0: this.translate('letters.letter_types.0'),\r\n      1: this.translate('letters.letter_types.1'),\r\n    };\r\n    return letterTypes[letterType] || 'Unknown';\r\n  }\r\n\r\n  getStatusLabel(status: number): string {\r\n    const statuses: Record<number, string> = {\r\n      0: this.translate('letters.statuses.0'),\r\n      1: this.translate('letters.statuses.1'),\r\n      2: this.translate('letters.statuses.2'),\r\n      3: this.translate('letters.statuses.3'),\r\n      4: this.translate('letters.statuses.4'),\r\n    };\r\n    return statuses[status] || 'Unknown';\r\n  }\r\n\r\n  getDirectionBadgeClass(direction: number): string {\r\n    return direction === 0 ? 'bg-primary' : 'bg-success';\r\n  }\r\n\r\n  getLetterTypeBadgeClass(letterType: number): string {\r\n    return letterType === 0 ? 'bg-info' : 'bg-warning';\r\n  }\r\n\r\n  getStatusBadgeClass(status: number): string {\r\n    switch (status) {\r\n      case 0:\r\n        return 'bg-secondary'; // Draft\r\n      case 1:\r\n        return 'bg-warning'; // Pending\r\n      case 2:\r\n        return 'bg-success'; // Approved\r\n      case 3:\r\n        return 'bg-danger'; // Rejected\r\n      case 4:\r\n        return 'bg-info'; // Sent\r\n      default:\r\n        return 'bg-secondary';\r\n    }\r\n  }\r\n\r\n  downloadAttachment(attachment: LetterAttachment) {\r\n    // Implementation for downloading attachment\r\n    console.log('Download attachment:', attachment);\r\n  }\r\n\r\n  viewAttachment(attachment: LetterAttachment) {\r\n    // Implementation for viewing attachment\r\n    console.log('View attachment:', attachment);\r\n  }\r\n}\r\n", "<!-- Letter Details Modal -->\r\n<div\r\n  class=\"modal fade\"\r\n  [class.show]=\"isVisible\"\r\n  [style.display]=\"isVisible ? 'block' : 'none'\"\r\n  tabindex=\"-1\"\r\n  role=\"dialog\"\r\n  [attr.aria-hidden]=\"!isVisible\"\r\n>\r\n  <div class=\"modal-dialog modal-xl modal-dialog-scrollable\" role=\"document\">\r\n    <div class=\"modal-content\">\r\n      <!-- Modal Header -->\r\n      <div class=\"modal-header d-flex justify-content-between align-items-center\">\r\n        <h5 class=\"modal-title\">\r\n          {{ translate(\"letter_details.title\") }}\r\n        </h5>\r\n      </div>\r\n\r\n      <!-- Modal Body -->\r\n      <div class=\"modal-body\">\r\n        <!-- Loading State -->\r\n        <div class=\"text-center py-5\" *ngIf=\"isLoading\">\r\n          <div class=\"spinner-border text-primary\" role=\"status\">\r\n            <span class=\"visually-hidden\">{{\r\n              translate(\"common.loading\")\r\n            }}</span>\r\n          </div>\r\n          <p class=\"mt-3 text-muted\">\r\n            {{ translate(\"letter_details.loading\") }}\r\n          </p>\r\n        </div>\r\n\r\n        <!-- Letter Details -->\r\n        <div *ngIf=\"!isLoading && letter\" class=\"letter-details\">\r\n          <!-- Letter Header -->\r\n          <div class=\"letter-header mb-4\">\r\n            <div class=\"row\">\r\n              <div class=\"col-md-8\">\r\n                <h4 class=\"letter-subject mb-2\">{{ letter.subject }}</h4>\r\n                <div class=\"letter-badges mb-3\">\r\n                  <span\r\n                    class=\"badge me-2\"\r\n                    [class]=\"getDirectionBadgeClass(letter.direction)\"\r\n                  >\r\n                    {{ getDirectionLabel(letter.direction) }}\r\n                  </span>\r\n                  <span\r\n                    class=\"badge me-2\"\r\n                    [class]=\"getLetterTypeBadgeClass(letter.letterType || 1)\"\r\n                  >\r\n                    {{ getLetterTypeLabel(letter.letterType || 1) }}\r\n                  </span>\r\n                  <span\r\n                    class=\"badge me-2\"\r\n                    [class]=\"getStatusBadgeClass(letter.status || 0)\"\r\n                  >\r\n                    {{ getStatusLabel(letter.status || 0) }}\r\n                  </span>\r\n                </div>\r\n              </div>\r\n              <div class=\"col-md-4 text-end\">\r\n                <div class=\"letter-meta\">\r\n                  <small class=\"text-muted d-block\"\r\n                    >{{ translate(\"letter_details.letter_id\") }}:\r\n                    {{ letter.id }}</small\r\n                  >\r\n                  <small class=\"text-muted d-block\"\r\n                    >{{ translate(\"letters.letter_date\") }}:\r\n                    {{ formatDate(letter.letterDate) }}</small\r\n                  >\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <!-- Letter Content -->\r\n          <div class=\"letter-content mb-4\">\r\n            <div class=\"row\">\r\n              <div class=\"col-12\">\r\n                <h6 class=\"section-title\">\r\n                  {{ translate(\"letter_details.content\") }}\r\n                </h6>\r\n                <div class=\"content-body p-3 bg-light rounded\">\r\n                  <p class=\"mb-0\" [innerHTML]=\"letter.body\"></p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <!-- Letter Information -->\r\n          <div class=\"letter-info mb-4\">\r\n            <div class=\"row\">\r\n              <div class=\"col-md-6\">\r\n                <h6 class=\"section-title\">\r\n                  {{ translate(\"letter_details.recipient_info\") }}\r\n                </h6>\r\n                <div class=\"info-section p-3 bg-light rounded\">\r\n                  <div class=\"row mb-2\" *ngIf=\"letter.letterType !== 0\">\r\n                    <div class=\"col-4\">\r\n                      <strong>{{ translate(\"letters.to\") }}:</strong>\r\n                    </div>\r\n                    <div class=\"col-8\">{{ letter.to }}</div>\r\n                  </div>\r\n                  <div class=\"row mb-2\" *ngIf=\"letter.letterType === 0 && letter.internalUserName\">\r\n                    <div class=\"col-4\">\r\n                      <strong>{{ translate(\"letters.internal_user\") }}:</strong>\r\n                    </div>\r\n                    <div class=\"col-8\">{{ letter.internalUserName }}</div>\r\n                  </div>\r\n                  <div class=\"row mb-2\" *ngIf=\"letter.cc\">\r\n                    <div class=\"col-4\">\r\n                      <strong>{{ translate(\"letters.cc\") }}:</strong>\r\n                    </div>\r\n                    <div class=\"col-8\">{{ letter.cc }}</div>\r\n                  </div>\r\n                  <div class=\"row mb-2\" *ngIf=\"letter.bcc\">\r\n                    <div class=\"col-4\">\r\n                      <strong>{{ translate(\"letters.bcc\") }}:</strong>\r\n                    </div>\r\n                    <div class=\"col-8\">{{ letter.bcc }}</div>\r\n                  </div>\r\n                  <div class=\"row\" *ngIf=\"letter.referenceNumbers\">\r\n                    <div class=\"col-4\">\r\n                      <strong\r\n                        >{{ translate(\"letters.reference_numbers\") }}:</strong\r\n                      >\r\n                    </div>\r\n                    <div class=\"col-8\">{{ letter.referenceNumbers }}</div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div class=\"col-md-6\">\r\n                <h6 class=\"section-title\">\r\n                  {{ translate(\"letter_details.letter_info\") }}\r\n                </h6>\r\n                <div class=\"info-section p-3 bg-light rounded\">\r\n                  <div class=\"row mb-2\">\r\n                    <div class=\"col-4\">\r\n                      <strong>{{ translate(\"letters.direction\") }}:</strong>\r\n                    </div>\r\n                    <div class=\"col-8\">\r\n                      {{ getDirectionLabel(letter.direction) }}\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"row mb-2\">\r\n                    <div class=\"col-4\">\r\n                      <strong>{{ translate(\"letters.letter_type\") }}:</strong>\r\n                    </div>\r\n                    <div class=\"col-8\">\r\n                      <span\r\n                        class=\"badge\"\r\n                        [class]=\"getLetterTypeBadgeClass(letter.letterType || 1)\"\r\n                      >\r\n                        {{ getLetterTypeLabel(letter.letterType || 1) }}\r\n                      </span>\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"row mb-2\">\r\n                    <div class=\"col-4\">\r\n                      <strong>{{ translate(\"letters.status\") }}:</strong>\r\n                    </div>\r\n                    <div class=\"col-8\">\r\n                      <span\r\n                        class=\"badge\"\r\n                        [class]=\"getStatusBadgeClass(letter.status || 0)\"\r\n                      >\r\n                        {{ getStatusLabel(letter.status || 0) }}\r\n                      </span>\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"row mb-2\" *ngIf=\"letter.approvedByName\">\r\n                    <div class=\"col-4\">\r\n                      <strong>{{ translate(\"letters.approved_by\") }}:</strong>\r\n                    </div>\r\n                    <div class=\"col-8\">{{ letter.approvedByName }}</div>\r\n                  </div>\r\n                  <div class=\"row mb-2\" *ngIf=\"letter.approvedAt\">\r\n                    <div class=\"col-4\">\r\n                      <strong\r\n                        >{{ translate(\"letter_details.approved_at\") }}:</strong\r\n                      >\r\n                    </div>\r\n                    <div class=\"col-8\">{{ formatDate(letter.approvedAt) }}</div>\r\n                  </div>\r\n                  <div class=\"row\" *ngIf=\"letter.approvalNotes\">\r\n                    <div class=\"col-4\">\r\n                      <strong\r\n                        >{{ translate(\"letters.approval_notes\") }}:</strong\r\n                      >\r\n                    </div>\r\n                    <div class=\"col-8\">{{ letter.approvalNotes }}</div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <!-- Email Information -->\r\n          <div class=\"email-info mb-4\" *ngIf=\"letter.isEmailSent !== undefined\">\r\n            <h6 class=\"section-title\">\r\n              {{ translate(\"letter_details.email_info\") }}\r\n            </h6>\r\n            <div class=\"info-section p-3 bg-light rounded\">\r\n              <div class=\"row mb-2\">\r\n                <div class=\"col-4\">\r\n                  <strong>{{ translate(\"letters.email_sent\") }}:</strong>\r\n                </div>\r\n                <div class=\"col-8\">\r\n                  <span\r\n                    class=\"badge\"\r\n                    [class]=\"letter.isEmailSent ? 'bg-success' : 'bg-secondary'\"\r\n                  >\r\n                    {{\r\n                      letter.isEmailSent\r\n                        ? translate(\"common.yes\")\r\n                        : translate(\"common.no\")\r\n                    }}\r\n                  </span>\r\n                </div>\r\n              </div>\r\n              <div class=\"row\" *ngIf=\"letter.emailSentAt\">\r\n                <div class=\"col-4\">\r\n                  <strong\r\n                    >{{ translate(\"letter_details.email_sent_at\") }}:</strong\r\n                  >\r\n                </div>\r\n                <div class=\"col-8\">{{ formatDate(letter.emailSentAt) }}</div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <!-- Signature -->\r\n          <div class=\"signature-section mb-4\" *ngIf=\"letter.signatureImagePath\">\r\n            <h6 class=\"section-title\">\r\n              {{ translate(\"letter_details.signature\") }}\r\n            </h6>\r\n            <div class=\"signature-container p-3 bg-light rounded text-center\">\r\n              <img\r\n                [src]=\"letter.signatureImagePath\"\r\n                alt=\"Signature\"\r\n                class=\"signature-image img-fluid\"\r\n                style=\"max-height: 200px\"\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          <!-- Attachments -->\r\n          <div\r\n            class=\"attachments-section mb-4\"\r\n            *ngIf=\"letter.attachments && letter.attachments.length > 0\"\r\n          >\r\n            <h6 class=\"section-title\">\r\n              {{ translate(\"letters.attachments\") }} ({{\r\n                letter.attachments.length\r\n              }})\r\n            </h6>\r\n            <div class=\"attachments-list\">\r\n              <div\r\n                class=\"attachment-item p-3 bg-light rounded mb-2\"\r\n                *ngFor=\"let attachment of letter.attachments\"\r\n              >\r\n                <div class=\"row align-items-center\">\r\n                  <div class=\"col-md-8\">\r\n                    <div class=\"attachment-info\">\r\n                      <div class=\"attachment-name fw-medium mb-1\">\r\n                        <i class=\"bi bi-paperclip me-2\"></i>\r\n                        {{ attachment.fileName }}\r\n                      </div>\r\n                      <div class=\"attachment-meta text-muted small\">\r\n                        <span class=\"me-3\"\r\n                          >{{ translate(\"letters.file_type\") }}:\r\n                          {{ attachment.fileType }}</span\r\n                        >\r\n                        <span class=\"me-3\"\r\n                          >{{ translate(\"letters.uploaded_by\") }}:\r\n                          {{ attachment.uploadedByName }}</span\r\n                        >\r\n                        <span\r\n                          >{{ translate(\"letters.uploaded_at\") }}:\r\n                          {{ formatDate(attachment.uploadedAt) }}</span\r\n                        >\r\n                      </div>\r\n                      <div\r\n                        class=\"attachment-description mt-1\"\r\n                        *ngIf=\"attachment.description\"\r\n                      >\r\n                        <small class=\"text-muted\">{{\r\n                          attachment.description\r\n                        }}</small>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"col-md-4 text-end\">\r\n                    <div class=\"attachment-actions\">\r\n                      <button\r\n                        class=\"btn btn-sm btn-outline-primary me-2\"\r\n                        (click)=\"viewAttachment(attachment)\"\r\n                      >\r\n                        <i class=\"bi bi-eye me-1\"></i>\r\n                        {{ translate(\"common.view\") }}\r\n                      </button>\r\n                      <button\r\n                        class=\"btn btn-sm btn-outline-success\"\r\n                        (click)=\"downloadAttachment(attachment)\"\r\n                      >\r\n                        <i class=\"bi bi-download me-1\"></i>\r\n                        {{ translate(\"common.download\") }}\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <!-- System Information -->\r\n          <div class=\"system-info\">\r\n            <h6 class=\"section-title\">\r\n              {{ translate(\"letter_details.system_info\") }}\r\n            </h6>\r\n            <div class=\"info-section p-3 bg-light rounded\">\r\n              <div class=\"row\">\r\n                <div class=\"col-md-6\">\r\n                  <div class=\"row mb-2\">\r\n                    <div class=\"col-4\">\r\n                      <strong>{{ translate(\"common.created_by\") }}:</strong>\r\n                    </div>\r\n                    <div class=\"col-8\">{{ letter.createdByName }}</div>\r\n                  </div>\r\n                  <div class=\"row\">\r\n                    <div class=\"col-4\">\r\n                      <strong\r\n                        >{{ translate(\"letter_details.created_at\") }}:</strong\r\n                      >\r\n                    </div>\r\n                    <div class=\"col-8\">{{ formatDate(letter.createdAt) }}</div>\r\n                  </div>\r\n                </div>\r\n                <div class=\"col-md-6\">\r\n                  <div class=\"row mb-2\">\r\n                    <div class=\"col-4\">\r\n                      <strong\r\n                        >{{ translate(\"letter_details.updated_at\") }}:</strong\r\n                      >\r\n                    </div>\r\n                    <div class=\"col-8\">{{ formatDate(letter.updatedAt) }}</div>\r\n                  </div>\r\n                  <div class=\"row\" *ngIf=\"letter.pdfPath\">\r\n                    <div class=\"col-4\">\r\n                      <strong\r\n                        >{{ translate(\"letter_details.pdf_path\") }}:</strong\r\n                      >\r\n                    </div>\r\n                    <div class=\"col-8\">\r\n                      <small class=\"text-muted\">{{ letter.pdfPath }}</small>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <!-- Error State -->\r\n        <div class=\"text-center py-5\" *ngIf=\"!isLoading && !letter\">\r\n          <i\r\n            class=\"bi bi-exclamation-triangle text-warning\"\r\n            style=\"font-size: 3rem\"\r\n          ></i>\r\n          <h5 class=\"mt-3 text-muted\">\r\n            {{ translate(\"letter_details.error_loading\") }}\r\n          </h5>\r\n          <p class=\"text-muted\">\r\n            {{ translate(\"letter_details.try_again_later\") }}\r\n          </p>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- Modal Footer -->\r\n      <div class=\"modal-footer\">\r\n        <button type=\"button\" class=\"btn btn-secondary\" (click)=\"close()\">\r\n          <i class=\"bi bi-x-circle me-2\"></i>\r\n          {{ translate(\"common.close\") }}\r\n        </button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<!-- Modal Backdrop -->\r\n<div\r\n  class=\"modal-backdrop fade\"\r\n  [class.show]=\"isVisible\"\r\n  *ngIf=\"isVisible\"\r\n></div>\r\n", "import { Component, OnInit, OnDestroy, ViewChild } from '@angular/core';\r\nimport { LettersService } from '../../../services/letters.service';\r\nimport {\r\n  LetterItem,\r\n  LetterModel,\r\n  LetterDirection,\r\n  LetterConfidentiality,\r\n  LetterStatus,\r\n  LetterSearchParams,\r\n} from '../../../models/letter.model';\r\nimport { TranslationService } from '../../../services/translation.service';\r\nimport { LettersConfirmationModalComponent } from '../letters-confirmation-modal/letters-confirmation-modal.component';\r\nimport { AddLetter } from '../add-letter/add-letter';\r\nimport { EditLetter } from '../edit-letter/edit-letter';\r\nimport { AddAttachment } from '../add-attachment/add-attachment';\r\nimport { EditAttachment } from '../edit-attachment/edit-attachment';\r\nimport { SignaturePadModalComponent } from '../signature-pad-modal/signature-pad-modal.component';\r\nimport { LetterDetailsModalComponent } from '../letter-details-modal/letter-details-modal.component';\r\nimport { Subject } from 'rxjs';\r\nimport { takeUntil } from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'app-letters-list',\r\n  standalone: false,\r\n  templateUrl: './letters-list.html',\r\n  styleUrl: './letters-list.css',\r\n})\r\nexport class LettersList implements OnInit, OnDestroy {\r\n  @ViewChild('addLetterModal') addLetterModal!: AddLetter;\r\n  @ViewChild('editLetterModal') editLetterModal!: EditLetter;\r\n  @ViewChild('addAttachmentModal') addAttachmentModal!: AddAttachment;\r\n  @ViewChild('editAttachmentModal') editAttachmentModal!: EditAttachment;\r\n  @ViewChild('confirmationModal')\r\n  confirmationModal!: LettersConfirmationModalComponent;\r\n  @ViewChild('signaturePadModal')\r\n  signaturePadModal!: SignaturePadModalComponent;\r\n  @ViewChild('letterDetailsModal')\r\n  letterDetailsModal!: LetterDetailsModalComponent;\r\n\r\n  // Make LetterStatus available in template\r\n  LetterStatus = LetterStatus;\r\n\r\n  allLetters: LetterItem[] = [];\r\n  filteredLetters: LetterItem[] = [];\r\n  searchTerm: string = '';\r\n  isLoading: boolean = false;\r\n  isDeleting: boolean = false;\r\n  deletingLetterId: number | null = null;\r\n  expandedAttachments: { [key: number]: boolean } = {};\r\n  sentEmails: Set<number> = new Set(); // Track which letters have had emails sent\r\n  isProcessing: boolean = false;\r\n  processingLetterId: number | null = null;\r\n  private destroy$ = new Subject<void>();\r\n\r\n  // Pagination\r\n  currentPage = 1;\r\n  pageSize = 10;\r\n  totalCount = 0;\r\n\r\n  // Filters\r\n  selectedDirection: number | null = null;\r\n  selectedConfidentiality: number | null = null;\r\n  selectedStatus: number | null = null;\r\n  fromDate: string = '';\r\n  toDate: string = '';\r\n\r\n  // Status counts for tabs\r\n  statusCounts: { [key: number]: number } = {};\r\n\r\n  constructor(\r\n    private lettersService: LettersService,\r\n    private translationService: TranslationService\r\n  ) {}\r\n\r\n  readonly directions: Record<number, string> = {\r\n    0: 'Incoming',\r\n    1: 'Outgoing',\r\n  };\r\n\r\n  readonly confidentialities: Record<number, string> = {\r\n    0: 'Public',\r\n    1: 'Restricted',\r\n    2: 'Secret',\r\n  };\r\n\r\n  readonly statuses: Record<number, string> = {\r\n    0: 'Draft',\r\n    1: 'Approved',\r\n    2: 'Sent',\r\n    3: 'Archived',\r\n    4: '',\r\n  };\r\n\r\n  ngOnInit() {\r\n    this.loadLetters();\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.destroy$.next();\r\n    this.destroy$.complete();\r\n  }\r\n\r\n  loadLetters() {\r\n    this.isLoading = true;\r\n\r\n    const params: LetterSearchParams = {\r\n      search: this.searchTerm || undefined,\r\n      PageSize: this.pageSize,\r\n      PageNumber: this.currentPage,\r\n      Direction: this.selectedDirection || undefined,\r\n      Confidentiality: this.selectedConfidentiality || undefined,\r\n      Status: this.selectedStatus !== null ? this.selectedStatus : undefined,\r\n    };\r\n\r\n    console.log('Loading letters with params:', params);\r\n    console.log('Selected status:', this.selectedStatus);\r\n\r\n    this.lettersService.getAllLetters(params).subscribe({\r\n      next: (res) => {\r\n        console.log('Letters loaded:', res.data.items);\r\n        this.allLetters = res.data.items;\r\n        this.totalCount = res.data.totalCount;\r\n        this.currentPage = res.data.page;\r\n        this.pageSize = res.data.pageSize;\r\n\r\n        // If status filter is applied, filter the results client-side as fallback\r\n        if (this.selectedStatus !== null) {\r\n          this.filteredLetters = this.allLetters.filter(\r\n            (letter) => (letter.status || 0) === this.selectedStatus\r\n          );\r\n        } else {\r\n          this.filteredLetters = [...this.allLetters];\r\n        }\r\n\r\n        // Load all letters to get accurate status counts\r\n        this.loadStatusCounts();\r\n        this.isLoading = false;\r\n      },\r\n      error: (error) => {\r\n        console.error('Error loading letters:', error);\r\n        this.isLoading = false;\r\n      },\r\n    });\r\n  }\r\n\r\n  onSearchChange() {\r\n    this.currentPage = 1;\r\n    this.loadLetters();\r\n  }\r\n\r\n  onSearchClick() {\r\n    this.currentPage = 1;\r\n    this.loadLetters();\r\n  }\r\n\r\n  onFilterChange() {\r\n    this.currentPage = 1;\r\n    this.loadLetters();\r\n  }\r\n\r\n  onPageChange(page: number) {\r\n    this.currentPage = page;\r\n    this.loadLetters();\r\n  }\r\n\r\n  onPageSizeChange() {\r\n    this.currentPage = 1;\r\n    this.loadLetters();\r\n  }\r\n\r\n  clearFilters() {\r\n    this.searchTerm = '';\r\n    this.selectedDirection = null;\r\n    this.selectedConfidentiality = null;\r\n    this.selectedStatus = null;\r\n    this.fromDate = '';\r\n    this.toDate = '';\r\n    this.currentPage = 1;\r\n    this.loadLetters();\r\n  }\r\n\r\n  // Status tab methods\r\n  onStatusTabClick(status: number | null) {\r\n    console.log('Status tab clicked:', status);\r\n    this.selectedStatus = status;\r\n    this.currentPage = 1;\r\n    this.loadLetters();\r\n  }\r\n\r\n  getStatusCount(status: number | null): number {\r\n    if (status === null) {\r\n      return this.totalCount;\r\n    }\r\n    const count = this.statusCounts[status] || 0;\r\n    return count;\r\n  }\r\n\r\n  loadStatusCounts() {\r\n    // Load all letters without status filter to get accurate counts\r\n    const params: LetterSearchParams = {\r\n      search: this.searchTerm || undefined,\r\n      PageSize: 1000, // Load a large number to get all letters\r\n      PageNumber: 1,\r\n      Direction: this.selectedDirection || undefined,\r\n      Confidentiality: this.selectedConfidentiality || undefined,\r\n      // Don't include Status filter here to get all letters\r\n    };\r\n\r\n    this.lettersService.getAllLetters(params).subscribe({\r\n      next: (res) => {\r\n        console.log('Status counts loaded:', res.data.items.length, 'letters');\r\n        this.updateStatusCounts(res.data.items);\r\n      },\r\n      error: (error) => {\r\n        console.error('Error loading status counts:', error);\r\n        // Fallback to current letters if error occurs\r\n        this.updateStatusCounts(this.allLetters);\r\n      },\r\n    });\r\n  }\r\n\r\n  updateStatusCounts(letters: LetterItem[]) {\r\n    // Reset counts\r\n    this.statusCounts = {};\r\n\r\n    // Count letters by status\r\n    letters.forEach((letter) => {\r\n      const status = letter.status || 0;\r\n      this.statusCounts[status] = (this.statusCounts[status] || 0) + 1;\r\n    });\r\n\r\n    console.log('Status counts updated:', this.statusCounts);\r\n  }\r\n\r\n  getDirectionLabel(direction: number): string {\r\n    return this.directions[direction] || 'Unknown';\r\n  }\r\n\r\n  getConfidentialityLabel(confidentiality: number): string {\r\n    return this.confidentialities[confidentiality] || 'Unknown';\r\n  }\r\n\r\n  getStatusLabel(status: number): string {\r\n    return this.statuses[status] || 'Unknown';\r\n  }\r\n\r\n  getAttachmentsDisplay(attachments: any[]): string {\r\n    if (!attachments || attachments.length === 0) {\r\n      return '';\r\n    }\r\n\r\n    const displayAttachments = attachments.slice(0, 2);\r\n    const attachmentStrings = displayAttachments.map((attachment) =>\r\n      this.getAttachmentDisplayName(attachment)\r\n    );\r\n\r\n    if (attachments.length > 2) {\r\n      return attachmentStrings.join(', ') + ` +${attachments.length - 2} more`;\r\n    }\r\n\r\n    return attachmentStrings.join(', ');\r\n  }\r\n\r\n  getAttachmentDisplayName(attachment: any): string {\r\n    if (attachment.fileName && attachment.fileName.trim()) {\r\n      return attachment.fileName;\r\n    }\r\n\r\n    // Try to extract filename from filePath if fileName is not available\r\n    if (attachment.filePath) {\r\n      const pathParts = attachment.filePath.split('/');\r\n      const fileName = pathParts[pathParts.length - 1];\r\n      if (fileName && fileName.trim()) {\r\n        return fileName;\r\n      }\r\n    }\r\n\r\n    // Fallback to a generic name\r\n    return 'Document';\r\n  }\r\n\r\n  openAddModal() {\r\n    this.addLetterModal.open();\r\n  }\r\n\r\n  async deleteLetter(id: number, subject: string) {\r\n    // Check if letter is already being deleted\r\n    if (this.isDeleting || this.deletingLetterId === id) {\r\n      console.log('Delete operation already in progress for letter:', id);\r\n      return;\r\n    }\r\n\r\n    // Check if letter still exists in the list\r\n    const letterExists = this.allLetters.some((l) => l.id === id);\r\n    if (!letterExists) {\r\n      console.log('Letter not found in list:', id);\r\n      return;\r\n    }\r\n\r\n    const confirmData = {\r\n      title: this.translationService.translate('letters.delete_letter'),\r\n      message: this.translationService.translate(\r\n        'letters.confirm_delete_letter'\r\n      ),\r\n      confirmText: this.translationService.translate('common.delete'),\r\n      cancelText: this.translationService.translate('common.cancel'),\r\n      type: 'delete' as const,\r\n    };\r\n\r\n    try {\r\n      const confirmed = await this.confirmationModal.show(confirmData);\r\n\r\n      if (!confirmed) {\r\n        console.log('User cancelled deletion');\r\n        return;\r\n      }\r\n\r\n      // Double-check before proceeding with deletion\r\n      if (this.isDeleting || this.deletingLetterId === id) {\r\n        console.log('Delete operation already in progress, skipping');\r\n        return;\r\n      }\r\n\r\n      // User confirmed deletion\r\n      this.isDeleting = true;\r\n      this.deletingLetterId = id;\r\n\r\n      console.log('Starting deletion of letter:', id);\r\n\r\n      this.lettersService\r\n        .deleteLetter(id)\r\n        .pipe(takeUntil(this.destroy$))\r\n        .subscribe({\r\n          next: (res) => {\r\n            console.log('Letter deleted successfully:', id);\r\n            this.allLetters = this.allLetters.filter((l) => l.id !== id);\r\n            this.filteredLetters = this.filteredLetters.filter(\r\n              (l) => l.id !== id\r\n            );\r\n            this.showSuccessMessage(\r\n              this.translationService.translate('letters.delete_letter_success')\r\n            );\r\n            this.isDeleting = false;\r\n            this.deletingLetterId = null;\r\n          },\r\n          error: (error) => {\r\n            console.error('Error deleting letter:', error);\r\n            const errorMessage =\r\n              error.error?.message || error.message || 'Unknown error occurred';\r\n            this.showErrorMessage(\r\n              this.translationService.translate('common.error') +\r\n                ': ' +\r\n                errorMessage\r\n            );\r\n            this.isDeleting = false;\r\n            this.deletingLetterId = null;\r\n          },\r\n        });\r\n    } catch (error) {\r\n      console.error('Error in delete confirmation:', error);\r\n      this.isDeleting = false;\r\n      this.deletingLetterId = null;\r\n    }\r\n  }\r\n\r\n  async deleteAttachment(\r\n    letterId: number,\r\n    attachmentId: number,\r\n    fileName: string\r\n  ) {\r\n    // Check if already deleting\r\n    if (this.isDeleting) {\r\n      return;\r\n    }\r\n\r\n    const confirmData = {\r\n      title: this.translationService.translate('letters.delete_attachment'),\r\n      message: this.translationService.translate(\r\n        'letters.confirm_delete_attachment'\r\n      ),\r\n      confirmText: this.translationService.translate('common.delete'),\r\n      cancelText: this.translationService.translate('common.cancel'),\r\n      type: 'delete' as const,\r\n    };\r\n\r\n    try {\r\n      const confirmed = await this.confirmationModal.show(confirmData);\r\n\r\n      if (!confirmed) {\r\n        console.log('User cancelled attachment deletion');\r\n        return;\r\n      }\r\n\r\n      // User confirmed deletion\r\n      this.isDeleting = true;\r\n      this.lettersService\r\n        .deleteAttachment(letterId, attachmentId)\r\n        .pipe(takeUntil(this.destroy$))\r\n        .subscribe({\r\n          next: (res) => {\r\n            // Update the letter's attachments\r\n            const letter = this.allLetters.find((l) => l.id === letterId);\r\n            if (letter) {\r\n              letter.attachments = letter.attachments.filter(\r\n                (a) => a.id !== attachmentId\r\n              );\r\n            }\r\n            const filteredLetter = this.filteredLetters.find(\r\n              (l) => l.id === letterId\r\n            );\r\n            if (filteredLetter) {\r\n              filteredLetter.attachments = filteredLetter.attachments.filter(\r\n                (a) => a.id !== attachmentId\r\n              );\r\n            }\r\n            this.showSuccessMessage(\r\n              this.translationService.translate(\r\n                'letters.delete_attachment_success'\r\n              )\r\n            );\r\n            this.isDeleting = false;\r\n          },\r\n          error: (error) => {\r\n            console.error('Error deleting attachment:', error);\r\n            const errorMessage =\r\n              error.error?.message || error.message || 'Unknown error occurred';\r\n            this.showErrorMessage(\r\n              this.translationService.translate('common.error') +\r\n                ': ' +\r\n                errorMessage\r\n            );\r\n            this.isDeleting = false;\r\n          },\r\n        });\r\n    } catch (error) {\r\n      console.error('Error in attachment delete confirmation:', error);\r\n      this.isDeleting = false;\r\n    }\r\n  }\r\n\r\n  showSuccessMessage(message: string) {\r\n    const successData = {\r\n      title: this.translationService.translate('common.success'),\r\n      message: message,\r\n      confirmText: this.translationService.translate('common.ok'),\r\n      cancelText: '',\r\n      type: 'info' as const,\r\n    };\r\n    this.confirmationModal.show(successData);\r\n  }\r\n\r\n  showErrorMessage(message: string) {\r\n    const errorData = {\r\n      title: this.translationService.translate('common.error'),\r\n      message: message,\r\n      confirmText: this.translationService.translate('common.ok'),\r\n      cancelText: '',\r\n      type: 'warning' as const,\r\n    };\r\n    this.confirmationModal.show(errorData);\r\n  }\r\n\r\n  toggleAttachments(letterId: number) {\r\n    this.expandedAttachments[letterId] = !this.expandedAttachments[letterId];\r\n  }\r\n\r\n  editLetter(letter: LetterItem) {\r\n    // Open edit modal with letter data\r\n    this.editLetterModal.open(letter);\r\n  }\r\n\r\n  addAttachment(letter: LetterItem) {\r\n    // Open add attachment modal\r\n    this.addAttachmentModal.open(letter);\r\n  }\r\n\r\n  editAttachment(letter: LetterItem, attachment: any) {\r\n    // Open edit attachment modal\r\n    this.editAttachmentModal.open(letter, attachment);\r\n  }\r\n\r\n  showAttachmentDetails(letterId: number, attachment: any) {\r\n    // Get attachment details from API\r\n    this.lettersService.getLetterAttachments(letterId).subscribe({\r\n      next: (res) => {\r\n        if (res.success && res.data) {\r\n          const attachmentDetails = res.data.find(\r\n            (a: any) => a.id === attachment.id\r\n          );\r\n          if (attachmentDetails) {\r\n            this.showAttachmentDetailsModal(attachmentDetails);\r\n          }\r\n        }\r\n      },\r\n      error: (error) => {\r\n        console.error('Error loading attachment details:', error);\r\n        this.showErrorMessage(\r\n          this.translationService.translate('common.error') +\r\n            ': ' +\r\n            (error.error?.message || error.message || 'Unknown error occurred')\r\n        );\r\n      },\r\n    });\r\n  }\r\n\r\n  showAttachmentDetailsModal(attachment: any) {\r\n    const detailsData = {\r\n      title: this.translationService.translate('letters.attachment_details'),\r\n      message: `\r\n        <div class=\"attachment-details\">\r\n          <div class=\"row\">\r\n            <div class=\"col-md-6\">\r\n              <p><strong>${this.translationService.translate(\r\n                'letters.file_name'\r\n              )}:</strong> ${attachment.fileName || 'N/A'}</p>\r\n              <p><strong>${this.translationService.translate(\r\n                'letters.file_type'\r\n              )}:</strong> ${attachment.fileType || 'N/A'}</p>\r\n              <p><strong>${this.translationService.translate(\r\n                'letters.uploaded_by'\r\n              )}:</strong> ${attachment.uploadedByName || 'N/A'}</p>\r\n            </div>\r\n            <div class=\"col-md-6\">\r\n              <p><strong>${this.translationService.translate(\r\n                'letters.uploaded_at'\r\n              )}:</strong> ${this.formatDate(attachment.uploadedAt)}</p>\r\n              <p><strong>${this.translationService.translate(\r\n                'letters.attachment_description'\r\n              )}:</strong> ${attachment.description || 'N/A'}</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      `,\r\n      confirmText: this.translationService.translate('common.close'),\r\n      cancelText: '',\r\n      type: 'info' as const,\r\n    };\r\n    this.confirmationModal.show(detailsData);\r\n  }\r\n\r\n  translate(key: string): string {\r\n    return this.translationService.translate(key);\r\n  }\r\n\r\n  isRTL(): boolean {\r\n    return this.translationService.isRTL();\r\n  }\r\n\r\n  get totalPages(): number {\r\n    return Math.ceil(this.totalCount / this.pageSize);\r\n  }\r\n\r\n  get pages(): number[] {\r\n    const pages: number[] = [];\r\n    const maxVisiblePages = 5;\r\n\r\n    if (this.totalPages === 0) {\r\n      pages.push(1);\r\n      return pages;\r\n    }\r\n\r\n    let startPage = Math.max(\r\n      1,\r\n      this.currentPage - Math.floor(maxVisiblePages / 2)\r\n    );\r\n    let endPage = Math.min(this.totalPages, startPage + maxVisiblePages - 1);\r\n\r\n    if (endPage - startPage + 1 < maxVisiblePages) {\r\n      startPage = Math.max(1, endPage - maxVisiblePages + 1);\r\n    }\r\n\r\n    for (let i = startPage; i <= endPage; i++) {\r\n      pages.push(i);\r\n    }\r\n\r\n    return pages;\r\n  }\r\n\r\n  get Math() {\r\n    return Math;\r\n  }\r\n\r\n  formatDate(dateString: string): string {\r\n    if (!dateString) return '';\r\n    const date = new Date(dateString);\r\n    return date.toLocaleDateString();\r\n  }\r\n\r\n  getDirectionBadgeClass(direction: number): string {\r\n    return direction === LetterDirection.In ? 'bg-primary' : 'bg-success';\r\n  }\r\n\r\n  getConfidentialityBadgeClass(confidentiality: number): string {\r\n    switch (confidentiality) {\r\n      case LetterConfidentiality.Public:\r\n        return 'bg-success';\r\n      case LetterConfidentiality.Restricted:\r\n        return 'bg-warning';\r\n      case LetterConfidentiality.Secret:\r\n        return 'bg-danger';\r\n      default:\r\n        return 'bg-secondary';\r\n    }\r\n  }\r\n\r\n  getStatusBadgeClass(status: number): string {\r\n    switch (status) {\r\n      case LetterStatus.Draft:\r\n        return 'bg-secondary'; // 555555 - Gray for draft\r\n      case LetterStatus.PendingApproval:\r\n        return 'bg-warning'; // E54B1D - Orange for pending\r\n      case LetterStatus.Approved:\r\n        return 'bg-success'; // D4AF5F - Green for approved\r\n      case LetterStatus.Rejected:\r\n        return 'bg-danger'; // B45253 - Red for rejected\r\n      case LetterStatus.Sent:\r\n        return 'bg-info'; // 34495E - Blue for sent\r\n      default:\r\n        return 'bg-secondary'; // 555555 - Default gray\r\n    }\r\n  }\r\n\r\n  // New approval workflow methods\r\n  submitForApproval(letter: LetterItem) {\r\n    if (this.isProcessing || this.processingLetterId === letter.id) {\r\n      return;\r\n    }\r\n\r\n    this.isProcessing = true;\r\n    this.processingLetterId = letter.id;\r\n\r\n    this.lettersService\r\n      .submitForApproval(letter.id)\r\n      .pipe(takeUntil(this.destroy$))\r\n      .subscribe({\r\n        next: (res) => {\r\n          console.log('Letter submitted for approval successfully');\r\n          this.showSuccessMessage(\r\n            this.translate('letters.submit_approval_success')\r\n          );\r\n          this.loadLetters(); // Reload to update status\r\n          this.isProcessing = false;\r\n          this.processingLetterId = null;\r\n        },\r\n        error: (error) => {\r\n          console.error('Error submitting letter for approval:', error);\r\n          const errorMessage =\r\n            error.error?.message || error.message || 'Unknown error occurred';\r\n          this.showErrorMessage(\r\n            this.translate('common.error') + ': ' + errorMessage\r\n          );\r\n          this.isProcessing = false;\r\n          this.processingLetterId = null;\r\n        },\r\n      });\r\n  }\r\n\r\n  sendEmail(letter: LetterItem) {\r\n    if (\r\n      this.isProcessing ||\r\n      this.processingLetterId === letter.id ||\r\n      this.sentEmails.has(letter.id)\r\n    ) {\r\n      return;\r\n    }\r\n\r\n    this.isProcessing = true;\r\n    this.processingLetterId = letter.id;\r\n\r\n    this.lettersService\r\n      .sendEmail(letter.id)\r\n      .pipe(takeUntil(this.destroy$))\r\n      .subscribe({\r\n        next: (res) => {\r\n          console.log('Email sent successfully');\r\n          this.sentEmails.add(letter.id); // Mark email as sent\r\n          this.showSuccessMessage(this.translate('letters.send_email_success'));\r\n          this.isProcessing = false;\r\n          this.processingLetterId = null;\r\n        },\r\n        error: (error) => {\r\n          console.error('Error sending email:', error);\r\n          const errorMessage =\r\n            error.error?.message || error.message || 'Unknown error occurred';\r\n          this.showErrorMessage(\r\n            this.translate('common.error') + ': ' + errorMessage\r\n          );\r\n          this.isProcessing = false;\r\n          this.processingLetterId = null;\r\n        },\r\n      });\r\n  }\r\n\r\n  downloadPdf(letter: LetterItem) {\r\n    // Always try to download PDF for approved letters, regardless of pdfPath\r\n    this.lettersService\r\n      .downloadLetterPdf(letter.id)\r\n      .pipe(takeUntil(this.destroy$))\r\n      .subscribe({\r\n        next: (blob) => {\r\n          const url = window.URL.createObjectURL(blob);\r\n          const link = document.createElement('a');\r\n          link.href = url;\r\n          link.download = `Letter_${letter.id}.pdf`;\r\n          link.click();\r\n          window.URL.revokeObjectURL(url);\r\n          this.showSuccessMessage(\r\n            this.translate('letters.download_pdf_success')\r\n          );\r\n        },\r\n        error: (error) => {\r\n          console.error('Error downloading PDF:', error);\r\n          if (error.status === 404) {\r\n            this.showErrorMessage(this.translate('letters.no_pdf_available'));\r\n          } else {\r\n            const errorMessage =\r\n              error.error?.message || error.message || 'Unknown error occurred';\r\n            this.showErrorMessage(\r\n              this.translate('common.error') + ': ' + errorMessage\r\n            );\r\n          }\r\n        },\r\n      });\r\n  }\r\n\r\n  canSubmitForApproval(letter: LetterItem): boolean {\r\n    return letter.status === LetterStatus.Draft;\r\n  }\r\n\r\n  canSendEmail(letter: LetterItem): boolean {\r\n    return (\r\n      letter.status === LetterStatus.Approved && !this.sentEmails.has(letter.id)\r\n    );\r\n  }\r\n\r\n  canDownloadPdf(letter: LetterItem): boolean {\r\n    return letter.status === LetterStatus.Approved && !!letter.pdfPath;\r\n  }\r\n\r\n  isProcessingLetter(letter: LetterItem): boolean {\r\n    return this.isProcessing && this.processingLetterId === letter.id;\r\n  }\r\n\r\n  isEmailSent(letter: LetterItem): boolean {\r\n    return this.sentEmails.has(letter.id);\r\n  }\r\n\r\n  getSendEmailButtonText(letter: LetterItem): string {\r\n    if (this.isEmailSent(letter)) {\r\n      return this.translate('letters.email_sent');\r\n    }\r\n    return this.translate('letters.send_email');\r\n  }\r\n\r\n  shouldShowPdfButton(letter: LetterItem): boolean {\r\n    // Show PDF button for all approved letters\r\n    // The downloadPdf method will handle the case where PDF is not available\r\n    const shouldShow = letter.status === LetterStatus.Approved;\r\n    // Debug logging\r\n    if (letter.status === LetterStatus.Approved) {\r\n      console.log(\r\n        'PDF Button Debug - Letter:',\r\n        letter.subject,\r\n        'Status:',\r\n        letter.status,\r\n        'Should Show:',\r\n        shouldShow\r\n      );\r\n    }\r\n    return shouldShow;\r\n  }\r\n\r\n  viewLetterDetails(letter: LetterItem) {\r\n    this.letterDetailsModal.open(letter.id);\r\n  }\r\n}\r\n", "<div\r\n  class=\"letters-container rounded-5 custom-scrollbar\"\r\n  [dir]=\"isRTL() ? 'rtl' : 'ltr'\"\r\n>\r\n  <!-- Header Section -->\r\n  <div class=\"letters-header mb-4\">\r\n    <div class=\"d-flex justify-content-between align-items-center\">\r\n      <h1 class=\"letters-title\">{{ translate(\"letters.title\") }}</h1>\r\n      <div class=\"d-flex gap-2\">\r\n        <button class=\"btn btn-primary\" (click)=\"openAddModal()\">\r\n          <i class=\"bi bi-plus-circle me-2\"></i>\r\n          {{ translate(\"letters.add_letter\") }}\r\n        </button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <!-- Search and Filters -->\r\n  <div class=\"search-section mb-4\">\r\n    <div class=\"row\">\r\n      <div class=\"col-md-5\">\r\n        <div class=\"search-input-wrapper\">\r\n          <i class=\"bi bi-search search-icon\"></i>\r\n          <input\r\n            type=\"text\"\r\n            class=\"form-control search-input\"\r\n            [placeholder]=\"translate('letters.search_letters')\"\r\n            [(ngModel)]=\"searchTerm\"\r\n            (keyup.enter)=\"onSearchClick()\"\r\n          />\r\n        </div>\r\n      </div>\r\n      <div class=\"col-md-2\">\r\n        <button class=\"btn btn-primary w-100\" (click)=\"onSearchClick()\">\r\n          <i class=\"bi bi-search me-2\"></i>\r\n          {{ translate(\"common.search\") }}\r\n        </button>\r\n      </div>\r\n      <div class=\"col-md-2\">\r\n        <select\r\n          class=\"form-control\"\r\n          [(ngModel)]=\"selectedDirection\"\r\n          (change)=\"onFilterChange()\"\r\n        >\r\n          <option [value]=\"null\">\r\n            {{ translate(\"letters.all_directions\") }}\r\n          </option>\r\n          <option [value]=\"0\">{{ translate(\"letters.directions.0\") }}</option>\r\n          <option [value]=\"1\">{{ translate(\"letters.directions.1\") }}</option>\r\n        </select>\r\n      </div>\r\n      <div class=\"col-md-1\">\r\n        <button\r\n          class=\"btn btn-outline-secondary w-100\"\r\n          (click)=\"clearFilters()\"\r\n        >\r\n          <i class=\"bi bi-x-circle me-2\"></i>\r\n          {{ translate(\"common.clear\") }}\r\n        </button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <!-- Status Tabs -->\r\n  <div class=\"status-tabs-section mb-4\">\r\n    <div class=\"status-tabs-container\">\r\n      <ul class=\"nav nav-tabs status-tabs\" role=\"tablist\">\r\n        <li class=\"nav-item\" role=\"presentation\">\r\n          <button\r\n            class=\"nav-link status-tab\"\r\n            [class.active]=\"selectedStatus === null\"\r\n            (click)=\"onStatusTabClick(null)\"\r\n            type=\"button\"\r\n          >\r\n            <i class=\"bi bi-list-ul me-2\"></i>\r\n            {{ translate(\"letters.all_letters\") }}\r\n            <span\r\n              class=\"badge bg-secondary ms-2\"\r\n              *ngIf=\"getStatusCount(null) > 0\"\r\n              >{{ getStatusCount(null) }}</span\r\n            >\r\n          </button>\r\n        </li>\r\n        <li class=\"nav-item\" role=\"presentation\">\r\n          <button\r\n            class=\"nav-link status-tab\"\r\n            [class.active]=\"selectedStatus === LetterStatus.Draft\"\r\n            (click)=\"onStatusTabClick(LetterStatus.Draft)\"\r\n            type=\"button\"\r\n          >\r\n            <i class=\"bi bi-file-earmark-text me-2\"></i>\r\n            {{ translate(\"letters.statuses.0\") }}\r\n            <span\r\n              class=\"badge bg-secondary ms-2\"\r\n              *ngIf=\"getStatusCount(LetterStatus.Draft) > 0\"\r\n              >{{ getStatusCount(LetterStatus.Draft) }}</span\r\n            >\r\n          </button>\r\n        </li>\r\n        <li class=\"nav-item\" role=\"presentation\">\r\n          <button\r\n            class=\"nav-link status-tab\"\r\n            [class.active]=\"selectedStatus === LetterStatus.PendingApproval\"\r\n            (click)=\"onStatusTabClick(LetterStatus.PendingApproval)\"\r\n            type=\"button\"\r\n          >\r\n            <i class=\"bi bi-clock-history me-2\"></i>\r\n            {{ translate(\"letters.statuses.1\") }}\r\n            <span\r\n              class=\"badge bg-warning ms-2\"\r\n              *ngIf=\"getStatusCount(LetterStatus.PendingApproval) > 0\"\r\n              >{{ getStatusCount(LetterStatus.PendingApproval) }}</span\r\n            >\r\n          </button>\r\n        </li>\r\n        <li class=\"nav-item\" role=\"presentation\">\r\n          <button\r\n            class=\"nav-link status-tab\"\r\n            [class.active]=\"selectedStatus === LetterStatus.Approved\"\r\n            (click)=\"onStatusTabClick(LetterStatus.Approved)\"\r\n            type=\"button\"\r\n          >\r\n            <i class=\"bi bi-check-circle me-2\"></i>\r\n            {{ translate(\"letters.statuses.2\") }}\r\n            <span\r\n              class=\"badge bg-success ms-2\"\r\n              *ngIf=\"getStatusCount(LetterStatus.Approved) > 0\"\r\n              >{{ getStatusCount(LetterStatus.Approved) }}</span\r\n            >\r\n          </button>\r\n        </li>\r\n        <li class=\"nav-item\" role=\"presentation\">\r\n          <button\r\n            class=\"nav-link status-tab\"\r\n            [class.active]=\"selectedStatus === LetterStatus.Rejected\"\r\n            (click)=\"onStatusTabClick(LetterStatus.Rejected)\"\r\n            type=\"button\"\r\n          >\r\n            <i class=\"bi bi-x-circle me-2\"></i>\r\n            {{ translate(\"letters.statuses.3\") }}\r\n            <span\r\n              class=\"badge bg-danger ms-2\"\r\n              *ngIf=\"getStatusCount(LetterStatus.Rejected) > 0\"\r\n              >{{ getStatusCount(LetterStatus.Rejected) }}</span\r\n            >\r\n          </button>\r\n        </li>\r\n        <li class=\"nav-item\" role=\"presentation\">\r\n          <button\r\n            class=\"nav-link status-tab\"\r\n            [class.active]=\"selectedStatus === LetterStatus.Sent\"\r\n            (click)=\"onStatusTabClick(LetterStatus.Sent)\"\r\n            type=\"button\"\r\n          >\r\n            <i class=\"bi bi-send me-2\"></i>\r\n            {{ translate(\"letters.statuses.4\") }}\r\n            <span\r\n              class=\"badge bg-info ms-2\"\r\n              *ngIf=\"getStatusCount(LetterStatus.Sent) > 0\"\r\n              >{{ getStatusCount(LetterStatus.Sent) }}</span\r\n            >\r\n          </button>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  </div>\r\n\r\n  <!-- Loading State -->\r\n  <div class=\"row\" *ngIf=\"isLoading\">\r\n    <div class=\"col-12\">\r\n      <div class=\"text-center py-5\">\r\n        <div class=\"spinner-border text-primary\" role=\"status\">\r\n          <span class=\"visually-hidden\">{{\r\n            translate(\"letters.loading_letters\")\r\n          }}</span>\r\n        </div>\r\n        <p class=\"mt-3 text-muted\">\r\n          {{ translate(\"letters.loading_letters\") }}\r\n        </p>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <!-- Letters List -->\r\n  <div class=\"row\" *ngIf=\"!isLoading\">\r\n    <div class=\"col-12\">\r\n      <!-- No Letters Found -->\r\n      <div class=\"text-center py-5\" *ngIf=\"filteredLetters.length === 0\">\r\n        <svg\r\n          width=\"16\"\r\n          height=\"16\"\r\n          viewBox=\"0 0 24 24\"\r\n          fill=\"none\"\r\n          stroke=\"currentColor\"\r\n          stroke-width=\"2\"\r\n        >\r\n          <path\r\n            d=\"M14.5 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V7.5L14.5 2z\"\r\n          ></path>\r\n          <polyline points=\"14,2 14,8 20,8\"></polyline>\r\n        </svg>\r\n        <h4 class=\"text-muted\">{{ translate(\"letters.no_letters_found\") }}</h4>\r\n        <p class=\"text-muted\">{{ translate(\"letters.get_started_message\") }}</p>\r\n        <button class=\"btn btn-primary\" (click)=\"openAddModal()\">\r\n          {{ translate(\"letters.add_letter\") }}\r\n        </button>\r\n      </div>\r\n\r\n      <!-- Letters Cards -->\r\n      <div class=\"row g-4\" *ngIf=\"filteredLetters.length > 0\">\r\n        <div class=\"col-lg-6 col-xl-4\" *ngFor=\"let letter of filteredLetters\">\r\n          <div class=\"card h-100 shadow-sm\">\r\n            <div\r\n              class=\"card-header d-flex justify-content-between align-items-center\"\r\n            >\r\n              <div class=\"d-flex gap-2\">\r\n                <span\r\n                  class=\"badge\"\r\n                  [class]=\"getDirectionBadgeClass(letter.direction)\"\r\n                >\r\n                  {{ translate(\"letters.directions.\" + letter.direction) }}\r\n                </span>\r\n                <span\r\n                  class=\"badge\"\r\n                  [class]=\"getStatusBadgeClass(letter.status || 0)\"\r\n                  *ngIf=\"letter.status !== undefined\"\r\n                >\r\n                  {{ translate(\"letters.statuses.\" + letter.status) }}\r\n                </span>\r\n              </div>\r\n              <small class=\"text-muted\">{{\r\n                formatDate(letter.letterDate)\r\n              }}</small>\r\n            </div>\r\n\r\n            <div class=\"card-body\">\r\n              <h5 class=\"card-title\">{{ letter.subject }}</h5>\r\n              <p class=\"card-text text-muted small mb-2\">\r\n                {{ letter.body | slice : 0 : 100\r\n                }}{{ letter.body.length > 100 ? \"...\" : \"\" }}\r\n              </p>\r\n\r\n              <div class=\"row g-2 mb-3\">\r\n                <div class=\"col-6\">\r\n                  <small class=\"text-muted d-block\"\r\n                    >{{ translate(\"letters.to\") }}:</small\r\n                  >\r\n                  <small class=\"fw-medium\">{{ letter.to }}</small>\r\n                </div>\r\n                <div class=\"col-6\">\r\n                  <small class=\"text-muted d-block\"\r\n                    >{{ translate(\"letters.letter_date\") }}:</small\r\n                  >\r\n                  <small class=\"fw-medium\">{{\r\n                    formatDate(letter.letterDate)\r\n                  }}</small>\r\n                </div>\r\n              </div>\r\n\r\n              <div class=\"row g-2 mb-3\" *ngIf=\"letter.referenceNumbers\">\r\n                <div class=\"col-12\">\r\n                  <small class=\"text-muted d-block\"\r\n                    >{{ translate(\"letters.reference_numbers\") }}:</small\r\n                  >\r\n                  <small class=\"fw-medium\">{{ letter.referenceNumbers }}</small>\r\n                </div>\r\n              </div>\r\n\r\n              <!-- Approval Notes Section -->\r\n              <div class=\"row g-2 mb-3\" *ngIf=\"letter.approvalNotes\">\r\n                <div class=\"col-12\">\r\n                  <small class=\"text-muted d-block\"\r\n                    >{{ translate(\"letters.approval_notes\") }}:</small\r\n                  >\r\n                  <small class=\"fw-medium\">{{ letter.approvalNotes }}</small>\r\n                </div>\r\n              </div>\r\n\r\n              <!-- Attachments Section -->\r\n              <div\r\n                class=\"attachments-section\"\r\n                *ngIf=\"letter.attachments && letter.attachments.length > 0\"\r\n              >\r\n                <div\r\n                  class=\"attachments-header d-flex justify-content-between align-items-center mb-3\"\r\n                >\r\n                  <div class=\"d-flex align-items-center\">\r\n                    <svg\r\n                      width=\"16\"\r\n                      height=\"16\"\r\n                      viewBox=\"0 0 24 24\"\r\n                      fill=\"none\"\r\n                      stroke=\"currentColor\"\r\n                      stroke-width=\"2\"\r\n                      class=\"me-2 text-muted\"\r\n                    >\r\n                      <path\r\n                        d=\"M14.5 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V7.5L14.5 2z\"\r\n                      ></path>\r\n                      <polyline points=\"14,2 14,8 20,8\"></polyline>\r\n                    </svg>\r\n                    <span class=\"fw-medium text-muted\"\r\n                      >{{ translate(\"letters.attachments\") }} ({{\r\n                        letter.attachments.length\r\n                      }})</span\r\n                    >\r\n                  </div>\r\n                  <button\r\n                    class=\"btn btn-sm btn-outline-primary\"\r\n                    (click)=\"addAttachment(letter)\"\r\n                    title=\"{{ translate('letters.add_attachment') }}\"\r\n                  >\r\n                    <svg\r\n                      width=\"14\"\r\n                      height=\"14\"\r\n                      viewBox=\"0 0 24 24\"\r\n                      fill=\"none\"\r\n                      stroke=\"currentColor\"\r\n                      stroke-width=\"2\"\r\n                    >\r\n                      <line x1=\"12\" y1=\"5\" x2=\"12\" y2=\"19\"></line>\r\n                      <line x1=\"5\" y1=\"12\" x2=\"19\" y2=\"12\"></line>\r\n                    </svg>\r\n                  </button>\r\n                </div>\r\n\r\n                <!-- Attachments List -->\r\n                <div class=\"attachments-list\">\r\n                  <div\r\n                    class=\"attachment-item\"\r\n                    *ngFor=\"let attachment of letter.attachments\"\r\n                  >\r\n                    <div\r\n                      class=\"attachment-content d-flex justify-content-between align-items-center p-2 rounded\"\r\n                      (click)=\"showAttachmentDetails(letter.id, attachment)\"\r\n                      style=\"cursor: pointer; transition: background-color 0.2s\"\r\n                    >\r\n                      <div class=\"d-flex align-items-center flex-grow-1\">\r\n                        <!--\r\n                         -->\r\n                        <div class=\"attachment-info\">\r\n                          <div class=\"attachment-name fw-medium\">\r\n                            {{ getAttachmentDisplayName(attachment) }}\r\n                          </div>\r\n                          <div class=\"attachment-meta text-muted small\">\r\n                            {{ translate(\"letters.uploaded_by\") }}:\r\n                            {{ attachment.uploadedByName }}\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                      <div class=\"d-flex gap-1\">\r\n                        <button\r\n                          class=\"btn btn-sm btn-outline-primary\"\r\n                          (click)=\"\r\n                            editAttachment(letter, attachment);\r\n                            $event.stopPropagation()\r\n                          \"\r\n                          title=\"{{ translate('letters.edit') }}\"\r\n                        >\r\n                          <svg\r\n                            width=\"14\"\r\n                            height=\"14\"\r\n                            viewBox=\"0 0 24 24\"\r\n                            fill=\"none\"\r\n                            stroke=\"currentColor\"\r\n                            stroke-width=\"2\"\r\n                          >\r\n                            <path\r\n                              d=\"M11 4H4a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h14a2 2 0 0 0 2-2v-7\"\r\n                            ></path>\r\n                            <path\r\n                              d=\"m18.5 2.5 3 3L12 15l-4 1 1-4 9.5-9.5z\"\r\n                            ></path>\r\n                          </svg>\r\n                        </button>\r\n                        <button\r\n                          class=\"btn btn-sm btn-outline-danger\"\r\n                          (click)=\"\r\n                            deleteAttachment(\r\n                              letter.id,\r\n                              attachment.id,\r\n                              attachment.fileName\r\n                            );\r\n                            $event.stopPropagation()\r\n                          \"\r\n                          title=\"{{ translate('letters.delete') }}\"\r\n                        >\r\n                          <svg\r\n                            width=\"14\"\r\n                            height=\"14\"\r\n                            viewBox=\"0 0 24 24\"\r\n                            fill=\"none\"\r\n                            stroke=\"currentColor\"\r\n                            stroke-width=\"2\"\r\n                          >\r\n                            <path d=\"M3 6h18\"></path>\r\n                            <path\r\n                              d=\"M19 6v14c0 1-1 2-2 2H7c-1 0-2-1-2-2V6\"\r\n                            ></path>\r\n                            <path d=\"M8 6V4c0-1 1-2 2-2h4c1 0 2 1 2 2v2\"></path>\r\n                          </svg>\r\n                        </button>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <!-- No Attachments -->\r\n              <div\r\n                class=\"attachments-section\"\r\n                *ngIf=\"!letter.attachments || letter.attachments.length === 0\"\r\n              >\r\n                <div class=\"d-flex justify-content-between align-items-center\">\r\n                  <small class=\"text-muted\">\r\n                    <svg\r\n                      width=\"16\"\r\n                      height=\"16\"\r\n                      viewBox=\"0 0 24 24\"\r\n                      fill=\"none\"\r\n                      stroke=\"currentColor\"\r\n                      stroke-width=\"2\"\r\n                      class=\"me-1\"\r\n                    >\r\n                      <path\r\n                        d=\"M14.5 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V7.5L14.5 2z\"\r\n                      ></path>\r\n                      <polyline points=\"14,2 14,8 20,8\"></polyline>\r\n                    </svg>\r\n                    {{ translate(\"letters.no_attachments\") }}\r\n                  </small>\r\n                  <button\r\n                    class=\"btn btn-sm btn-outline-primary\"\r\n                    (click)=\"addAttachment(letter)\"\r\n                  >\r\n                    <svg\r\n                      width=\"14\"\r\n                      height=\"14\"\r\n                      viewBox=\"0 0 24 24\"\r\n                      fill=\"none\"\r\n                      stroke=\"currentColor\"\r\n                      stroke-width=\"2\"\r\n                      class=\"me-1\"\r\n                    >\r\n                      <line x1=\"12\" y1=\"5\" x2=\"12\" y2=\"19\"></line>\r\n                      <line x1=\"5\" y1=\"12\" x2=\"19\" y2=\"12\"></line>\r\n                    </svg>\r\n                    {{ translate(\"letters.add_attachment\") }}\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <div class=\"card-footer bg-transparent\">\r\n              <!-- Letter Info Row -->\r\n              <div\r\n                class=\"d-flex justify-content-between align-items-center mb-3\"\r\n              >\r\n                <small class=\"text-muted\">\r\n                  {{ translate(\"common.created_by\") }}:\r\n                  {{ letter.createdByName }}\r\n                </small>\r\n                <small class=\"text-muted\">\r\n                  {{ formatDate(letter.createdAt) }}\r\n                </small>\r\n              </div>\r\n              <!-- Action Buttons Row -->\r\n              <div class=\"d-flex gap-2 flex-wrap justify-content-center mb-2\">\r\n                <!-- View Details Button -->\r\n                <button\r\n                  class=\"btn btn-sm btn-outline-info\"\r\n                  (click)=\"viewLetterDetails(letter)\"\r\n                  title=\"{{ translate('letter_details.view_details') }}\"\r\n                >\r\n                  <i class=\"bi bi-eye me-1\"></i>\r\n                  {{ translate(\"letter_details.view_details\") }}\r\n                </button>\r\n\r\n                <!-- Submit for Approval Button -->\r\n                <button\r\n                  class=\"btn btn-sm btn-warning\"\r\n                  (click)=\"submitForApproval(letter)\"\r\n                  [disabled]=\"\r\n                    !canSubmitForApproval(letter) || isProcessingLetter(letter)\r\n                  \"\r\n                  title=\"{{ translate('letters.submit_for_approval') }}\"\r\n                  *ngIf=\"canSubmitForApproval(letter)\"\r\n                >\r\n                  <span\r\n                    *ngIf=\"isProcessingLetter(letter)\"\r\n                    class=\"spinner-border spinner-border-sm me-1\"\r\n                    role=\"status\"\r\n                  >\r\n                    <span class=\"visually-hidden\">{{\r\n                      translate(\"common.loading\")\r\n                    }}</span>\r\n                  </span>\r\n                  <i class=\"fas fa-paper-plane me-1\"></i>\r\n                  {{ translate(\"letters.submit_for_approval\") }}\r\n                </button>\r\n\r\n                <!-- Send Email Button -->\r\n                <button\r\n                  class=\"btn btn-sm\"\r\n                  [class.btn-outline-secondary]=\"!isEmailSent(letter)\"\r\n                  [class.btn-success]=\"isEmailSent(letter)\"\r\n                  (click)=\"sendEmail(letter)\"\r\n                  [disabled]=\"\r\n                    !canSendEmail(letter) ||\r\n                    isProcessingLetter(letter) ||\r\n                    isEmailSent(letter)\r\n                  \"\r\n                  [title]=\"getSendEmailButtonText(letter)\"\r\n                  *ngIf=\"letter.status === LetterStatus.Approved\"\r\n                >\r\n                  <span\r\n                    *ngIf=\"isProcessingLetter(letter)\"\r\n                    class=\"spinner-border spinner-border-sm me-1\"\r\n                    role=\"status\"\r\n                  >\r\n                    <span class=\"visually-hidden\">{{\r\n                      translate(\"common.loading\")\r\n                    }}</span>\r\n                  </span>\r\n                  <i\r\n                    class=\"fas fa-envelope me-1\"\r\n                    *ngIf=\"!isEmailSent(letter)\"\r\n                  ></i>\r\n                  <i class=\"fas fa-check me-1\" *ngIf=\"isEmailSent(letter)\"></i>\r\n                  {{ getSendEmailButtonText(letter) }}\r\n                </button>\r\n\r\n                <!-- Download PDF Button - Only show for approved letters -->\r\n                <button\r\n                  class=\"btn btn-sm btn-success\"\r\n                  (click)=\"downloadPdf(letter)\"\r\n                  title=\"{{ translate('letters.download_pdf') }}\"\r\n                  *ngIf=\"letter.status === LetterStatus.Approved\"\r\n                >\r\n                  <i class=\"fas fa-download me-1\"></i>\r\n                  {{ translate(\"letters.download_pdf\") }}\r\n                </button>\r\n\r\n                <!-- Edit Button -->\r\n                <button\r\n                  class=\"btn btn-sm btn-outline-primary\"\r\n                  (click)=\"editLetter(letter)\"\r\n                  title=\"{{ translate('letters.edit') }}\"\r\n                >\r\n                  <i class=\"fas fa-edit me-1\"></i>\r\n                  {{ translate(\"letters.edit\") }}\r\n                </button>\r\n\r\n                <!-- Delete Button -->\r\n                <button\r\n                  class=\"btn btn-sm btn-outline-danger\"\r\n                  (click)=\"deleteLetter(letter.id, letter.subject)\"\r\n                  [disabled]=\"isDeleting && deletingLetterId === letter.id\"\r\n                  title=\"{{ translate('letters.delete') }}\"\r\n                >\r\n                  <span\r\n                    *ngIf=\"isDeleting && deletingLetterId === letter.id\"\r\n                    class=\"spinner-border spinner-border-sm me-1\"\r\n                    role=\"status\"\r\n                  >\r\n                    <span class=\"visually-hidden\">{{\r\n                      translate(\"common.loading\")\r\n                    }}</span>\r\n                  </span>\r\n                  <i\r\n                    class=\"fas fa-trash me-1\"\r\n                    *ngIf=\"!(isDeleting && deletingLetterId === letter.id)\"\r\n                  ></i>\r\n                  {{ translate(\"letters.delete\") }}\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <!-- Pagination Info and Controls -->\r\n  <div\r\n    class=\"pagination-section ltr\"\r\n    *ngIf=\"!isLoading && filteredLetters.length > 0\"\r\n  >\r\n    <div class=\"pagination-controls\">\r\n      <div class=\"page-size-control\">\r\n        <label for=\"pageSize\">{{ translate(\"common.page_size\") }}:</label>\r\n        <select\r\n          id=\"pageSize\"\r\n          [(ngModel)]=\"pageSize\"\r\n          (change)=\"onPageSizeChange()\"\r\n        >\r\n          <option value=\"5\">5</option>\r\n          <option value=\"10\">10</option>\r\n          <option value=\"20\">20</option>\r\n          <option value=\"50\">50</option>\r\n        </select>\r\n      </div>\r\n      <div class=\"pagination-info\">\r\n        <span\r\n          >{{ translate(\"common.showing\") }}\r\n          {{ (currentPage - 1) * pageSize + 1 }}-{{\r\n            Math.min(currentPage * pageSize, totalCount)\r\n          }}\r\n          {{ translate(\"common.of\") }} {{ totalCount }}\r\n          {{ translate(\"letters.title\") }}</span\r\n        >\r\n      </div>\r\n\r\n      <nav aria-label=\"Letters pagination\">\r\n        <ul class=\"pagination\">\r\n          <li class=\"page-item\" [class.disabled]=\"currentPage === 1\">\r\n            <button\r\n              class=\"page-link\"\r\n              (click)=\"onPageChange(currentPage - 1)\"\r\n              [disabled]=\"currentPage === 1\"\r\n            >\r\n              <svg\r\n                width=\"16\"\r\n                height=\"16\"\r\n                viewBox=\"0 0 24 24\"\r\n                fill=\"none\"\r\n                stroke=\"currentColor\"\r\n                stroke-width=\"2\"\r\n              >\r\n                <polyline points=\"15,18 9,12 15,6\" />\r\n              </svg>\r\n            </button>\r\n          </li>\r\n\r\n          <li\r\n            *ngFor=\"let page of pages\"\r\n            class=\"page-item\"\r\n            [class.active]=\"page === currentPage\"\r\n          >\r\n            <button class=\"page-link\" (click)=\"onPageChange(page)\">\r\n              {{ page }}\r\n            </button>\r\n          </li>\r\n\r\n          <li class=\"page-item\" [class.disabled]=\"currentPage === totalPages\">\r\n            <button\r\n              class=\"page-link\"\r\n              (click)=\"onPageChange(currentPage + 1)\"\r\n              [disabled]=\"currentPage === totalPages\"\r\n            >\r\n              <svg\r\n                width=\"16\"\r\n                height=\"16\"\r\n                viewBox=\"0 0 24 24\"\r\n                fill=\"none\"\r\n                stroke=\"currentColor\"\r\n                stroke-width=\"2\"\r\n              >\r\n                <polyline points=\"9,18 15,12 9,6\" />\r\n              </svg>\r\n            </button>\r\n          </li>\r\n        </ul>\r\n      </nav>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<!-- Modals -->\r\n<app-add-letter #addLetterModal (letterAdded)=\"loadLetters()\"></app-add-letter>\r\n<app-edit-letter\r\n  #editLetterModal\r\n  (letterUpdated)=\"loadLetters()\"\r\n></app-edit-letter>\r\n<app-add-attachment\r\n  #addAttachmentModal\r\n  (attachmentAdded)=\"loadLetters()\"\r\n></app-add-attachment>\r\n<app-edit-attachment\r\n  #editAttachmentModal\r\n  (attachmentUpdated)=\"loadLetters()\"\r\n></app-edit-attachment>\r\n<app-letters-confirmation-modal\r\n  #confirmationModal\r\n></app-letters-confirmation-modal>\r\n<app-signature-pad-modal #signaturePadModal></app-signature-pad-modal>\r\n<app-letter-details-modal #letterDetailsModal></app-letter-details-modal>\r\n", "import { Component, EventEmitter, Input, Output, ViewChild, ElementRef } from '@angular/core';\r\nimport { TranslationService } from '../../../services/translation.service';\r\n\r\n@Component({\r\n  selector: 'app-rejection-modal',\r\n  standalone: false,\r\n  template: `\r\n    <div class=\"modal fade\" [class.show]=\"isOpen\" [style.display]=\"isOpen ? 'block' : 'none'\" \r\n         tabindex=\"-1\" role=\"dialog\" [attr.aria-hidden]=\"!isOpen\" (click)=\"onBackdropClick($event)\">\r\n      <div class=\"modal-dialog modal-dialog-centered\" role=\"document\">\r\n        <div class=\"modal-content\">\r\n          <div class=\"modal-header\" style=\"background: #D4AF5F !important\" [dir]=\"isRTL() ? 'rtl' : 'ltr'\"\r\n               [class.rtl-header]=\"isRTL()\"\r\n               [class.ltr-header]=\"!isRTL()\">\r\n            <h5 class=\"modal-title text-white\" [class.text-end]=\"isRTL()\" [class.text-start]=\"!isRTL()\" [class.rtl-title]=\"isRTL()\" [class.ltr-title]=\"!isRTL()\">\r\n              <i class=\"fas fa-exclamation-triangle\" [class.me-2]=\"!isRTL()\" [class.ms-2]=\"isRTL()\"></i>\r\n              {{ translate('letters.reject_letter') }}\r\n            </h5>\r\n            <button type=\"button\" class=\"btn-close btn-close-white\" (click)=\"close()\" aria-label=\"Close\"></button>\r\n          </div>\r\n          <div class=\"modal-body\">\r\n            <div class=\"mb-3\">\r\n              <label for=\"rejectionReason\" class=\"form-label\">\r\n                {{ translate('letters.rejection_notes') }}:\r\n              </label>\r\n              <textarea \r\n                #rejectionTextarea\r\n                class=\"form-control\" \r\n                id=\"rejectionReason\" \r\n                rows=\"4\" \r\n                [placeholder]=\"translate('letters.rejection_notes')\"\r\n                [(ngModel)]=\"rejectionReason\">\r\n              </textarea>\r\n            </div>\r\n          </div>\r\n          <div class=\"modal-footer\">\r\n            <button type=\"button\" class=\"btn btn-secondary\" (click)=\"close()\">\r\n              <i class=\"fas fa-times me-1\"></i>\r\n              {{ translate('common.cancel') }}\r\n            </button>\r\n            <button type=\"button\" class=\"btn btn-danger\" (click)=\"confirmReject()\" [disabled]=\"!rejectionReason || !rejectionReason.trim()\">\r\n              <i class=\"fas fa-times me-1\"></i>\r\n              {{ translate('letters.reject') }}\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"modal-backdrop fade\" [class.show]=\"isOpen\" *ngIf=\"isOpen\"></div>\r\n  `,\r\n  styles: [`\r\n    .modal.show {\r\n      display: block !important;\r\n    }\r\n    .modal-backdrop.show {\r\n      opacity: 0.5;\r\n    }\r\n    \r\n    /* RTL Support for modal header */\r\n    .modal-header[dir=\"rtl\"],\r\n    .rtl-header {\r\n      flex-direction: row-reverse !important;\r\n      justify-content: flex-end !important;\r\n      display: flex !important;\r\n      align-items: center !important;\r\n    }\r\n    \r\n    .modal-header[dir=\"rtl\"] .modal-title,\r\n    .rtl-title {\r\n      text-align: right !important;\r\n      margin-left: auto !important;\r\n      margin-right: 0 !important;\r\n      flex: 1 !important;\r\n    }\r\n    \r\n    .modal-header[dir=\"ltr\"],\r\n    .ltr-header {\r\n      flex-direction: row !important;\r\n      justify-content: flex-start !important;\r\n      display: flex !important;\r\n      align-items: center !important;\r\n    }\r\n    \r\n    .modal-header[dir=\"ltr\"] .modal-title,\r\n    .ltr-title {\r\n      text-align: left !important;\r\n      margin-left: 0 !important;\r\n      margin-right: auto !important;\r\n      flex: 1 !important;\r\n    }\r\n  `]\r\n})\r\nexport class RejectionModalComponent {\r\n  @Input() isOpen = false;\r\n  @Output() rejectionConfirmed = new EventEmitter<string>();\r\n  @Output() modalClosed = new EventEmitter<void>();\r\n  @ViewChild('rejectionTextarea') rejectionTextarea!: ElementRef<HTMLTextAreaElement>;\r\n\r\n  rejectionReason = '';\r\n\r\n  constructor(private translationService: TranslationService) {}\r\n\r\n  isRTL(): boolean {\r\n    return this.translationService.isRTL();\r\n  }\r\n\r\n  open() {\r\n    this.isOpen = true;\r\n    this.rejectionReason = '';\r\n    document.body.classList.add('modal-open');\r\n    // Focus on textarea after modal opens\r\n    setTimeout(() => {\r\n      if (this.rejectionTextarea) {\r\n        this.rejectionTextarea.nativeElement.focus();\r\n      }\r\n    }, 100);\r\n  }\r\n\r\n  close() {\r\n    this.isOpen = false;\r\n    this.rejectionReason = '';\r\n    document.body.classList.remove('modal-open');\r\n    this.modalClosed.emit();\r\n  }\r\n\r\n  confirmReject() {\r\n    if (this.rejectionReason && this.rejectionReason.trim()) {\r\n      this.rejectionConfirmed.emit(this.rejectionReason.trim());\r\n      this.close();\r\n    }\r\n  }\r\n\r\n  onBackdropClick(event: Event) {\r\n    if (event.target === event.currentTarget) {\r\n      this.close();\r\n    }\r\n  }\r\n\r\n  translate(key: string): string {\r\n    return this.translationService.translate(key);\r\n  }\r\n}\r\n", "import { Component, OnInit, OnDestroy, ViewChild, ChangeDetectorRef } from '@angular/core';\r\nimport { LettersService } from '../../../services/letters.service';\r\nimport { LetterItem, LetterModel } from '../../../models/letter.model';\r\nimport { TranslationService } from '../../../services/translation.service';\r\nimport { LettersConfirmationModalComponent } from '../letters-confirmation-modal/letters-confirmation-modal.component';\r\nimport { SignaturePadModalComponent } from '../signature-pad-modal/signature-pad-modal.component';\r\nimport { RejectionModalComponent } from '../rejection-modal/rejection-modal.component';\r\nimport { Subject } from 'rxjs';\r\nimport { takeUntil } from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'app-letters-approval',\r\n  standalone: false,\r\n  templateUrl: './letters-approval.component.html',\r\n  styleUrl: './letters-approval.component.css'\r\n})\r\nexport class LettersApprovalComponent implements OnInit, OnDestroy {\r\n  @ViewChild('confirmationModal') confirmationModal!: LettersConfirmationModalComponent;\r\n  @ViewChild('signaturePadModal') signaturePadModal!: SignaturePadModalComponent;\r\n  @ViewChild('rejectionModal') rejectionModal!: RejectionModalComponent;\r\n  \r\n  pendingLetters: LetterItem[] = [];\r\n  isLoading: boolean = false;\r\n  isProcessing: boolean = false;\r\n  processingLetterId: number | null = null;\r\n  private destroy$ = new Subject<void>();\r\n\r\n  constructor(\r\n    private lettersService: LettersService,\r\n    private translationService: TranslationService,\r\n    private cdr: ChangeDetectorRef\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.loadPendingLetters();\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.destroy$.next();\r\n    this.destroy$.complete();\r\n  }\r\n\r\n  loadPendingLetters() {\r\n    this.isLoading = true;\r\n    \r\n    this.lettersService.getLettersForApproval().pipe(\r\n      takeUntil(this.destroy$)\r\n    ).subscribe({\r\n      next: (res) => {\r\n        console.log('Pending letters loaded:', res.data.items);\r\n        this.pendingLetters = res.data.items;\r\n        this.isLoading = false;\r\n      },\r\n      error: (error) => {\r\n        console.error('Error loading pending letters:', error);\r\n        this.isLoading = false;\r\n      }\r\n    });\r\n  }\r\n\r\n  async approveLetter(letter: LetterItem) {\r\n    if (this.isProcessing || this.processingLetterId === letter.id) {\r\n      return;\r\n    }\r\n\r\n    // Set the letter ID for processing\r\n    this.processingLetterId = letter.id;\r\n    \r\n    // Open signature pad modal\r\n    this.signaturePadModal.open();\r\n  }\r\n\r\n  onSignatureSaved(data: {signature: File, approvalNotes?: string}) {\r\n    if (!this.processingLetterId) return;\r\n\r\n    this.isProcessing = true;\r\n    \r\n    this.lettersService.approveLetter(this.processingLetterId, data.signature, data.approvalNotes).pipe(\r\n      takeUntil(this.destroy$)\r\n    ).subscribe({\r\n      next: (res) => {\r\n        console.log('Letter approved successfully');\r\n        \r\n        // Store the letter ID before resetting processing state\r\n        const letterIdToRemove = this.processingLetterId;\r\n        console.log('Letter ID to remove:', letterIdToRemove);\r\n        \r\n        // Close the signature pad modal immediately\r\n        this.signaturePadModal.close();\r\n        console.log('Signature pad modal closed');\r\n        \r\n        // Remove letter from list immediately to update UI\r\n        if (letterIdToRemove) {\r\n          this.removeLetterFromList(letterIdToRemove);\r\n          console.log('Letter removed from list');\r\n        } else {\r\n          console.error('No letter ID to remove!');\r\n        }\r\n        \r\n        // Reset processing state immediately\r\n        this.isProcessing = false;\r\n        this.processingLetterId = null;\r\n        console.log('Processing state reset');\r\n        \r\n        // Force change detection after all updates\r\n        this.cdr.detectChanges();\r\n        console.log('Final change detection triggered');\r\n        \r\n        // Show success message after a small delay to ensure modal is closed\r\n        setTimeout(() => {\r\n          this.showSuccessMessage(this.translate('letters.approve_success'));\r\n          console.log('Success message shown');\r\n        }, 100);\r\n      },\r\n      error: (error) => {\r\n        console.error('Error approving letter:', error);\r\n        const errorMessage = error.error?.message || error.message || 'Unknown error occurred';\r\n        this.showErrorMessage(this.translate('common.error') + ': ' + errorMessage);\r\n        this.isProcessing = false;\r\n        this.processingLetterId = null;\r\n      }\r\n    });\r\n  }\r\n\r\n  async rejectLetter(letter: LetterItem) {\r\n    if (this.isProcessing || this.processingLetterId === letter.id) {\r\n      return;\r\n    }\r\n\r\n    // Set the letter ID for processing\r\n    this.processingLetterId = letter.id;\r\n    \r\n    // Open rejection modal\r\n    this.rejectionModal.open();\r\n  }\r\n\r\n  onRejectionConfirmed(rejectionReason: string) {\r\n    if (!this.processingLetterId) return;\r\n\r\n    this.isProcessing = true;\r\n    \r\n    this.lettersService.rejectLetter(this.processingLetterId, rejectionReason).pipe(\r\n      takeUntil(this.destroy$)\r\n    ).subscribe({\r\n      next: (res) => {\r\n        console.log('Letter rejected successfully');\r\n        // Remove letter from list immediately to update UI\r\n        this.removeLetterFromList(this.processingLetterId!);\r\n        // Reset processing state immediately\r\n        this.isProcessing = false;\r\n        this.processingLetterId = null;\r\n        // Show success message\r\n        this.showSuccessMessage(this.translate('letters.reject_success'));\r\n      },\r\n      error: (error) => {\r\n        console.error('Error rejecting letter:', error);\r\n        const errorMessage = error.error?.message || error.message || 'Unknown error occurred';\r\n        this.showErrorMessage(this.translate('common.error') + ': ' + errorMessage);\r\n        this.isProcessing = false;\r\n        this.processingLetterId = null;\r\n      }\r\n    });\r\n  }\r\n\r\n  async sendEmail(letter: LetterItem) {\r\n    if (this.isProcessing || this.processingLetterId === letter.id) {\r\n      return;\r\n    }\r\n\r\n    const confirmData = {\r\n      title: this.translate('letters.send_email'),\r\n      message: this.translate('letters.confirm_send_email'),\r\n      confirmText: this.translate('letters.send_email'),\r\n      cancelText: this.translate('common.cancel'),\r\n      type: 'info' as const\r\n    };\r\n\r\n    try {\r\n      const confirmed = await this.confirmationModal.show(confirmData);\r\n      \r\n      if (!confirmed) {\r\n        return;\r\n      }\r\n\r\n      this.isProcessing = true;\r\n      this.processingLetterId = letter.id;\r\n      \r\n      this.lettersService.sendEmail(letter.id).pipe(\r\n        takeUntil(this.destroy$)\r\n      ).subscribe({\r\n        next: (res) => {\r\n          console.log('Email sent successfully');\r\n          this.showSuccessMessage(this.translate('letters.send_email_success'));\r\n          this.isProcessing = false;\r\n          this.processingLetterId = null;\r\n        },\r\n        error: (error) => {\r\n          console.error('Error sending email:', error);\r\n          const errorMessage = error.error?.message || error.message || 'Unknown error occurred';\r\n          this.showErrorMessage(this.translate('common.error') + ': ' + errorMessage);\r\n          this.isProcessing = false;\r\n          this.processingLetterId = null;\r\n        }\r\n      });\r\n    } catch (error) {\r\n      console.error('Error in send email confirmation:', error);\r\n      this.isProcessing = false;\r\n      this.processingLetterId = null;\r\n    }\r\n  }\r\n\r\n  downloadPdf(letter: LetterItem) {\r\n    this.lettersService.downloadLetterPdf(letter.id).pipe(\r\n      takeUntil(this.destroy$)\r\n    ).subscribe({\r\n      next: (blob) => {\r\n        const url = window.URL.createObjectURL(blob);\r\n        const link = document.createElement('a');\r\n        link.href = url;\r\n        link.download = `Letter_${letter.id}.pdf`;\r\n        link.click();\r\n        window.URL.revokeObjectURL(url);\r\n        this.showSuccessMessage(this.translate('letters.download_pdf_success'));\r\n      },\r\n      error: (error) => {\r\n        console.error('Error downloading PDF:', error);\r\n        if (error.status === 404) {\r\n          this.showErrorMessage(this.translate('letters.no_pdf_available'));\r\n        } else {\r\n          const errorMessage = error.error?.message || error.message || 'Unknown error occurred';\r\n          this.showErrorMessage(this.translate('common.error') + ': ' + errorMessage);\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  private removeLetterFromList(letterId: number) {\r\n    console.log('Removing letter with ID:', letterId);\r\n    console.log('Letters before removal:', this.pendingLetters.map(l => l.id));\r\n    \r\n    // Create a new array to trigger change detection\r\n    this.pendingLetters = [...this.pendingLetters.filter(letter => letter.id !== letterId)];\r\n    \r\n    console.log('Letters after removal:', this.pendingLetters.map(l => l.id));\r\n    console.log('Total letters remaining:', this.pendingLetters.length);\r\n    \r\n    // Force change detection\r\n    this.cdr.detectChanges();\r\n    console.log('Change detection triggered');\r\n  }\r\n\r\n  showSuccessMessage(message: string) {\r\n    // Use console.log and a simple visual indicator\r\n    console.log('Success:', message);\r\n    \r\n    // Create a temporary success indicator\r\n    const successDiv = document.createElement('div');\r\n    successDiv.style.cssText = `\r\n      position: fixed;\r\n      top: 20px;\r\n      right: 20px;\r\n      background: #28a745;\r\n      color: white;\r\n      padding: 12px 20px;\r\n      border-radius: 6px;\r\n      z-index: 9999;\r\n      font-weight: 500;\r\n      box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\r\n    `;\r\n    successDiv.textContent = message;\r\n    document.body.appendChild(successDiv);\r\n    \r\n    // Remove after 3 seconds\r\n    setTimeout(() => {\r\n      if (successDiv.parentNode) {\r\n        successDiv.parentNode.removeChild(successDiv);\r\n      }\r\n    }, 1000);\r\n  }\r\n\r\n  showErrorMessage(message: string) {\r\n    const errorData = {\r\n      title: this.translate('common.error'),\r\n      message: message,\r\n      confirmText: this.translate('common.ok'),\r\n      cancelText: '',\r\n      type: 'warning' as const\r\n    };\r\n    this.confirmationModal.show(errorData);\r\n  }\r\n\r\n  translate(key: string): string {\r\n    return this.translationService.translate(key);\r\n  }\r\n\r\n  isRTL(): boolean {\r\n    return this.translationService.isRTL();\r\n  }\r\n\r\n  formatDate(dateString: string): string {\r\n    if (!dateString) return '';\r\n    const date = new Date(dateString);\r\n    return date.toLocaleDateString();\r\n  }\r\n\r\n  getDirectionLabel(direction: number): string {\r\n    return this.translate('letters.directions.' + direction);\r\n  }\r\n\r\n  getConfidentialityLabel(confidentiality: number): string {\r\n    return this.translate('letters.confidentialities.' + confidentiality);\r\n  }\r\n\r\n  getStatusLabel(status: number): string {\r\n    return this.translate('letters.statuses.' + status);\r\n  }\r\n\r\n  getDirectionBadgeClass(direction: number): string {\r\n    return direction === 0 ? 'bg-primary' : 'bg-success';\r\n  }\r\n\r\n  getConfidentialityBadgeClass(confidentiality: number): string {\r\n    switch (confidentiality) {\r\n      case 0: return 'bg-success';\r\n      case 1: return 'bg-warning';\r\n      case 2: return 'bg-danger';\r\n      default: return 'bg-secondary';\r\n    }\r\n  }\r\n\r\n  getStatusBadgeClass(status: number): string {\r\n    switch (status) {\r\n      case 0: return 'bg-secondary';\r\n      case 1: return 'bg-info';\r\n      case 2: return 'bg-success';\r\n      case 3: return 'bg-dark';\r\n      case 4: return 'bg-danger';\r\n      default: return 'bg-secondary';\r\n    }\r\n  }\r\n\r\n  trackByLetterId(index: number, letter: LetterItem): number {\r\n    return letter.id;\r\n  }\r\n}\r\n", "<div class=\"container-fluid\">\r\n  <div class=\"row\">\r\n    <div class=\"col-12\">\r\n      <!-- Header -->\r\n      <div class=\"d-flex justify-content-between align-items-center mb-4\">\r\n        <div>\r\n          <h2 class=\"mb-1 title\">\r\n            {{ translate('letters.letters_pending_approval') }}\r\n          </h2>\r\n          <p class=\"text-muted mb-0\">{{ translate('letters.approval_workflow_description') }}</p>\r\n        </div>\r\n        <button class=\"btn btn-outline-primary\" (click)=\"loadPendingLetters()\" [disabled]=\"isLoading\">\r\n          <i class=\"fas fa-sync-alt me-1\" [class.fa-spin]=\"isLoading\"></i>\r\n          {{ translate('common.refresh') }}\r\n        </button>\r\n      </div>\r\n\r\n      <!-- Loading State -->\r\n      <div *ngIf=\"isLoading\" class=\"text-center py-5\">\r\n        <div class=\"spinner-border text-primary\" role=\"status\">\r\n          <span class=\"visually-hidden\">{{ translate('common.loading') }}</span>\r\n        </div>\r\n        <p class=\"mt-3 text-muted\">{{ translate('common.loading') }}</p>\r\n      </div>\r\n\r\n      <!-- No Letters State -->\r\n      <div *ngIf=\"!isLoading && pendingLetters.length === 0\" class=\"text-center py-5\">\r\n        <div class=\"mb-4\">\r\n          <i class=\"fas fa-clipboard-check fa-4x text-muted\"></i>\r\n        </div>\r\n        <h4 class=\"text-muted mb-3\">{{ translate('letters.no_pending_letters') }}</h4>\r\n        <p class=\"text-muted\">{{ translate('letters.approval_workflow_description') }}</p>\r\n      </div>\r\n\r\n      <!-- Letters List -->\r\n      <div *ngIf=\"!isLoading && pendingLetters.length > 0\" class=\"row\">\r\n        <div class=\"col-12\">\r\n          <div class=\"row\">\r\n            <div *ngFor=\"let letter of pendingLetters; trackBy: trackByLetterId\" class=\"col-lg-6 col-xl-4 mb-4\">\r\n              <div class=\"card h-100 shadow-sm\">\r\n                <div class=\"card-header d-flex justify-content-between align-items-center\">\r\n                  <div class=\"d-flex align-items-center\">\r\n                    <span class=\"badge me-2\" [ngClass]=\"getDirectionBadgeClass(letter.direction)\">\r\n                      {{ getDirectionLabel(letter.direction) }}\r\n                    </span>\r\n                  </div>\r\n                  <small class=\"text-muted\">{{ formatDate(letter.letterDate) }}</small>\r\n                </div>\r\n                \r\n                <div class=\"card-body\">\r\n                  <h6 class=\"card-title text-truncate\" [title]=\"letter.subject\">\r\n                    {{ letter.subject }}\r\n                  </h6>\r\n                  \r\n                  <p class=\"card-text text-muted small mb-3\">\r\n                    {{ letter.body | slice:0:100 }}{{ letter.body.length > 100 ? '...' : '' }}\r\n                  </p>\r\n                  \r\n                  <div class=\"mb-3\">\r\n                    <div class=\"row g-2\">\r\n                      <div class=\"col-6\">\r\n                        <small class=\"text-muted d-block\">{{ translate('letters.to') }}:</small>\r\n                        <small class=\"text-truncate d-block\" [title]=\"letter.to\">{{ letter.to }}</small>\r\n                      </div>\r\n                      <div class=\"col-6\" *ngIf=\"letter.cc\">\r\n                        <small class=\"text-muted d-block\">{{ translate('letters.cc') }}:</small>\r\n                        <small class=\"text-truncate d-block\" [title]=\"letter.cc\">{{ letter.cc }}</small>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  \r\n                  <div class=\"mb-3\" *ngIf=\"letter.referenceNumbers\">\r\n                    <small class=\"text-muted d-block\">{{ translate('letters.reference_numbers') }}:</small>\r\n                    <small class=\"text-truncate d-block\" [title]=\"letter.referenceNumbers\">\r\n                      {{ letter.referenceNumbers }}\r\n                    </small>\r\n                  </div>\r\n                  \r\n                  <div class=\"mb-3\" *ngIf=\"letter.attachments && letter.attachments.length > 0\">\r\n                    <small class=\"text-muted d-block\">{{ translate('letters.attachments') }}:</small>\r\n                    <div class=\"d-flex flex-wrap gap-1\">\r\n                      <span *ngFor=\"let attachment of letter.attachments\" \r\n                            class=\"badge bg-light text-dark border\">\r\n                        <i class=\"fas fa-paperclip me-1\"></i>\r\n                        {{ attachment.fileName }}\r\n                      </span>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                \r\n                <div class=\"card-footer bg-transparent\">\r\n                  <div class=\"d-flex gap-2 flex-wrap\">\r\n                    <button class=\"btn btn-success btn-sm\" \r\n                            (click)=\"approveLetter(letter)\"\r\n                            [disabled]=\"isProcessing && processingLetterId === letter.id\">\r\n                      <i class=\"fas fa-check me-1\"></i>\r\n                      {{ translate('letters.approve') }}\r\n                    </button>\r\n                    \r\n                    <button class=\"btn btn-danger btn-sm\" \r\n                            (click)=\"rejectLetter(letter)\"\r\n                            [disabled]=\"isProcessing && processingLetterId === letter.id\">\r\n                      <i class=\"fas fa-times me-1\"></i>\r\n                      {{ translate('letters.reject') }}\r\n                    </button>\r\n                  </div>\r\n                  \r\n                  <div *ngIf=\"isProcessing && processingLetterId === letter.id\" class=\"mt-2\">\r\n                    <div class=\"d-flex align-items-center\">\r\n                      <div class=\"spinner-border spinner-border-sm text-primary me-2\" role=\"status\">\r\n                        <span class=\"visually-hidden\">{{ translate('common.loading') }}</span>\r\n                      </div>\r\n                      <small class=\"text-muted\">{{ translate('common.processing') }}</small>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<!-- Modals -->\r\n<app-letters-confirmation-modal #confirmationModal></app-letters-confirmation-modal>\r\n<app-signature-pad-modal #signaturePadModal (signatureSaved)=\"onSignatureSaved($event)\"></app-signature-pad-modal>\r\n<app-rejection-modal #rejectionModal (rejectionConfirmed)=\"onRejectionConfirmed($event)\"></app-rejection-modal>\r\n", "import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { LettersList } from './letters-list/letters-list';\r\nimport { LettersApprovalComponent } from './letters-approval/letters-approval.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: LettersList\r\n  },\r\n  {\r\n    path: 'approval',\r\n    component: LettersApprovalComponent\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class LettersRoutingModule { }\r\n", "import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { LettersRoutingModule } from './letters-routing.module';\r\nimport { LettersList } from './letters-list/letters-list';\r\nimport { AddLetter } from './add-letter/add-letter';\r\nimport { EditLetter } from './edit-letter/edit-letter';\r\nimport { AddAttachment } from './add-attachment/add-attachment';\r\nimport { EditAttachment } from './edit-attachment/edit-attachment';\r\nimport { LettersConfirmationModalComponent } from './letters-confirmation-modal/letters-confirmation-modal.component';\r\nimport { SignaturePadModalComponent } from './signature-pad-modal/signature-pad-modal.component';\r\nimport { LetterDetailsModalComponent } from './letter-details-modal/letter-details-modal.component';\r\nimport { LettersApprovalComponent } from './letters-approval/letters-approval.component';\r\nimport { RejectionModalComponent } from './rejection-modal/rejection-modal.component';\r\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    LettersList,\r\n    AddLetter,\r\n    EditLetter,\r\n    AddAttachment,\r\n    EditAttachment,\r\n    LettersConfirmationModalComponent,\r\n    SignaturePadModalComponent,\r\n    LetterDetailsModalComponent,\r\n    LettersApprovalComponent,\r\n    RejectionModalComponent,\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    LettersRoutingModule,\r\n    ReactiveFormsModule,\r\n    FormsModule,\r\n  ],\r\n})\r\nexport class LettersModule {}\r\n"],
  "mappings": "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",
  "names": ["LetterDirection", "LetterType", "LetterConfidentiality", "LetterStatus"]
}
