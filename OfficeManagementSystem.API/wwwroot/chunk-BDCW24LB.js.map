{
  "version": 3,
  "sources": ["src/app/models/calendar.model.ts", "src/app/services/calendar.service.ts"],
  "sourcesContent": ["export interface CalendarEvent {\r\n  id: number;\r\n  title: string;\r\n  description: string;\r\n  startDate: string;\r\n  endDate: string;\r\n  type: EventType;\r\n  location?: string;\r\n  onlineUrl?: string;\r\n  status: EventStatus;\r\n  organizerName?: string;\r\n  assigneeName?: string;\r\n  departmentName?: string;\r\n  priority: number;\r\n  color: string;\r\n  createdAt: string;\r\n}\r\n\r\nexport interface CalendarEventResponse {\r\n  success: boolean;\r\n  message: string;\r\n  data: CalendarEvent[];\r\n  errors: string[];\r\n}\r\n\r\nexport enum EventType {\r\n  Meeting = 0,\r\n  Task = 1,\r\n  Visit = 2,\r\n  Travel = 3\r\n}\r\n\r\nexport enum EventStatus {\r\n  Scheduled = 0,\r\n  InProgress = 1,\r\n  Completed = 2,\r\n  Cancelled = 3,\r\n  Overdue = 4\r\n}\r\n\r\nexport interface CalendarFilters {\r\n  type?: EventType;\r\n  status?: EventStatus;\r\n  search?: string;\r\n}\r\n\r\nexport interface CalendarView {\r\n  currentDate: Date;\r\n  viewType: 'month' | 'week' | 'day';\r\n}\r\n", "import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { environment } from '../../environments/environment';\r\nimport { CalendarEvent, CalendarEventResponse, EventType, EventStatus } from '../models/calendar.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class CalendarService {\r\n  private baseUrl = environment.apiBaseUrl;\r\n\r\n  constructor(private http: HttpClient) {}\r\n\r\n  getUserEvents(): Observable<CalendarEventResponse> {\r\n    return this.http.get<CalendarEventResponse>(`${this.baseUrl}/Calendar/user/events`);\r\n  }\r\n\r\n  getSystemEvents(\r\n    type?: EventType,\r\n    status?: EventStatus,\r\n    search?: string\r\n  ): Observable<CalendarEventResponse> {\r\n    let params = new HttpParams();\r\n\r\n    if (type !== undefined) {\r\n      params = params.set('type', type.toString());\r\n    }\r\n    if (status !== undefined) {\r\n      params = params.set('status', status.toString());\r\n    }\r\n    if (search) {\r\n      params = params.set('search', search);\r\n    }\r\n\r\n    return this.http.get<CalendarEventResponse>(`${this.baseUrl}/Calendar/system/events`, {\r\n      params,\r\n    });\r\n  }\r\n\r\n  getEventTypeLabel(type: EventType): string {\r\n    switch (type) {\r\n      case EventType.Meeting:\r\n        return 'calendar.event_types.meeting';\r\n      case EventType.Task:\r\n        return 'calendar.event_types.task';\r\n      case EventType.Visit:\r\n        return 'calendar.event_types.visit';\r\n      case EventType.Travel:\r\n        return 'calendar.event_types.travel';\r\n      default:\r\n        return 'Unknown';\r\n    }\r\n  }\r\n\r\n  getEventStatusLabel(status: EventStatus): string {\r\n    switch (status) {\r\n      case EventStatus.Scheduled:\r\n        return 'calendar.event_statuses.scheduled';\r\n      case EventStatus.InProgress:\r\n        return 'calendar.event_statuses.in_progress';\r\n      case EventStatus.Completed:\r\n        return 'calendar.event_statuses.completed';\r\n      case EventStatus.Cancelled:\r\n        return 'calendar.event_statuses.cancelled';\r\n      case EventStatus.Overdue:\r\n        return 'calendar.event_statuses.overdue';\r\n      default:\r\n        return 'Unknown';\r\n    }\r\n  }\r\n\r\n  getEventStatusColor(status: EventStatus): string {\r\n    switch (status) {\r\n      case EventStatus.Scheduled:\r\n        return '#4285F4';\r\n      case EventStatus.InProgress:\r\n        return '#FBBC04';\r\n      case EventStatus.Completed:\r\n        return '#34A853';\r\n      case EventStatus.Cancelled:\r\n        return '#EA4335';\r\n      case EventStatus.Overdue:\r\n        return '#FF6B6B';\r\n      default:\r\n        return '#6C757D';\r\n    }\r\n  }\r\n\r\n  getPriorityColor(priority: number): string {\r\n    switch (priority) {\r\n      case 1:\r\n        return '#34A853'; // High priority - Green\r\n      case 2:\r\n        return '#FBBC04'; // Medium priority - Yellow\r\n      case 3:\r\n        return '#EA4335'; // Low priority - Red\r\n      default:\r\n        return '#6C757D'; // Default - Gray\r\n    }\r\n  }\r\n\r\n  getEventTypeColor(type: EventType): string {\r\n    switch (type) {\r\n      case EventType.Meeting:\r\n        return '#361E12'; // Meeting - Brown/Gold\r\n      case EventType.Task:\r\n        return '#FBBC04'; // Task - Golden Yellow\r\n      case EventType.Visit:\r\n        return '#D4AF5F'; // Visit - Gold\r\n      case EventType.Travel:\r\n        return '#555555'; // Travel - Light Gold/Beige\r\n      default:\r\n        return '#6C757D'; // Default - Gray\r\n    }\r\n  }\r\n}\r\n"],
  "mappings": ";;;;;;;;;;;;;AAyBA,IAAY;CAAZ,SAAYA,YAAS;AACnB,EAAAA,WAAAA,WAAA,SAAA,IAAA,CAAA,IAAA;AACA,EAAAA,WAAAA,WAAA,MAAA,IAAA,CAAA,IAAA;AACA,EAAAA,WAAAA,WAAA,OAAA,IAAA,CAAA,IAAA;AACA,EAAAA,WAAAA,WAAA,QAAA,IAAA,CAAA,IAAA;AACF,GALY,cAAA,YAAS,CAAA,EAAA;AAOrB,IAAY;CAAZ,SAAYC,cAAW;AACrB,EAAAA,aAAAA,aAAA,WAAA,IAAA,CAAA,IAAA;AACA,EAAAA,aAAAA,aAAA,YAAA,IAAA,CAAA,IAAA;AACA,EAAAA,aAAAA,aAAA,WAAA,IAAA,CAAA,IAAA;AACA,EAAAA,aAAAA,aAAA,WAAA,IAAA,CAAA,IAAA;AACA,EAAAA,aAAAA,aAAA,SAAA,IAAA,CAAA,IAAA;AACF,GANY,gBAAA,cAAW,CAAA,EAAA;;;ACvBjB,IAAO,kBAAP,MAAO,iBAAe;EAGN;EAFZ,UAAU,YAAY;EAE9B,YAAoB,MAAgB;AAAhB,SAAA,OAAA;EAAmB;EAEvC,gBAAa;AACX,WAAO,KAAK,KAAK,IAA2B,GAAG,KAAK,OAAO,uBAAuB;EACpF;EAEA,gBACE,MACA,QACA,QAAe;AAEf,QAAI,SAAS,IAAI,WAAU;AAE3B,QAAI,SAAS,QAAW;AACtB,eAAS,OAAO,IAAI,QAAQ,KAAK,SAAQ,CAAE;IAC7C;AACA,QAAI,WAAW,QAAW;AACxB,eAAS,OAAO,IAAI,UAAU,OAAO,SAAQ,CAAE;IACjD;AACA,QAAI,QAAQ;AACV,eAAS,OAAO,IAAI,UAAU,MAAM;IACtC;AAEA,WAAO,KAAK,KAAK,IAA2B,GAAG,KAAK,OAAO,2BAA2B;MACpF;KACD;EACH;EAEA,kBAAkB,MAAe;AAC/B,YAAQ,MAAM;MACZ,KAAK,UAAU;AACb,eAAO;MACT,KAAK,UAAU;AACb,eAAO;MACT,KAAK,UAAU;AACb,eAAO;MACT,KAAK,UAAU;AACb,eAAO;MACT;AACE,eAAO;IACX;EACF;EAEA,oBAAoB,QAAmB;AACrC,YAAQ,QAAQ;MACd,KAAK,YAAY;AACf,eAAO;MACT,KAAK,YAAY;AACf,eAAO;MACT,KAAK,YAAY;AACf,eAAO;MACT,KAAK,YAAY;AACf,eAAO;MACT,KAAK,YAAY;AACf,eAAO;MACT;AACE,eAAO;IACX;EACF;EAEA,oBAAoB,QAAmB;AACrC,YAAQ,QAAQ;MACd,KAAK,YAAY;AACf,eAAO;MACT,KAAK,YAAY;AACf,eAAO;MACT,KAAK,YAAY;AACf,eAAO;MACT,KAAK,YAAY;AACf,eAAO;MACT,KAAK,YAAY;AACf,eAAO;MACT;AACE,eAAO;IACX;EACF;EAEA,iBAAiB,UAAgB;AAC/B,YAAQ,UAAU;MAChB,KAAK;AACH,eAAO;;MACT,KAAK;AACH,eAAO;;MACT,KAAK;AACH,eAAO;;MACT;AACE,eAAO;IACX;EACF;EAEA,kBAAkB,MAAe;AAC/B,YAAQ,MAAM;MACZ,KAAK,UAAU;AACb,eAAO;;MACT,KAAK,UAAU;AACb,eAAO;;MACT,KAAK,UAAU;AACb,eAAO;;MACT,KAAK,UAAU;AACb,eAAO;;MACT;AACE,eAAO;IACX;EACF;;qCA1GW,kBAAe,mBAAA,UAAA,CAAA;EAAA;4EAAf,kBAAe,SAAf,iBAAe,WAAA,YAFd,OAAM,CAAA;;;sEAEP,iBAAe,CAAA;UAH3B;WAAW;MACV,YAAY;KACb;;;",
  "names": ["EventType", "EventStatus"]
}
