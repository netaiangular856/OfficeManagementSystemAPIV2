{
  "version": 3,
  "sources": ["src/app/models/letter.model.ts", "src/app/services/letters.service.ts", "src/app/components/letters/letters-confirmation-modal/letters-confirmation-modal.component.ts", "src/app/components/letters/add-letter/add-letter.ts", "src/app/components/letters/add-letter/add-letter.html", "src/app/components/letters/edit-letter/edit-letter.ts", "src/app/components/letters/edit-letter/edit-letter.html", "src/app/components/letters/add-attachment/add-attachment.ts", "src/app/components/letters/add-attachment/add-attachment.html", "src/app/components/letters/edit-attachment/edit-attachment.ts", "src/app/components/letters/edit-attachment/edit-attachment.html", "src/app/components/letters/letters-list/letters-list.ts", "src/app/components/letters/letters-list/letters-list.html", "src/app/components/letters/letters-routing.module.ts", "src/app/components/letters/letters.module.ts"],
  "sourcesContent": ["export interface LetterModel {\r\n  success: boolean\r\n  message: string\r\n  data: LetterData\r\n  errors: any[]\r\n}\r\n\r\nexport interface LetterData {\r\n  totalCount: number\r\n  page: number\r\n  pageSize: number\r\n  items: LetterItem[]\r\n}\r\n\r\nexport interface LetterItem {\r\n  id: number\r\n  direction: number // 0: In, 1: Out\r\n  subject: string\r\n  body: string\r\n  confidentiality: number // 0: Public, 1: Restricted, 2: Secret\r\n  to: string\r\n  cc: string\r\n  bcc: string\r\n  letterDate: string\r\n  referenceNumbers: string\r\n  status?: number // 0: Draft, 1: Approved, 2: Sent, 3: Archived\r\n  createdByUserId: string\r\n  createdByName: string\r\n  createdAt: string\r\n  updatedAt: string\r\n  attachments: LetterAttachment[]\r\n}\r\n\r\nexport interface LetterAttachment {\r\n  id: number\r\n  letterId: number\r\n  filePath: string\r\n  fileType: string | null\r\n  fileName: string\r\n  uploadedByUserId: string\r\n  uploadedByName: string\r\n  description: string | null\r\n  uploadedAt: string\r\n  documentSource: number | null\r\n}\r\n\r\nexport interface CreateLetterDto {\r\n  direction: number\r\n  subject: string\r\n  body: string\r\n  confidentiality: number\r\n  to: string\r\n  cc: string\r\n  bcc: string\r\n  letterDate: string\r\n  status: number\r\n  referenceNumbers: string\r\n}\r\n\r\nexport interface UpdateLetterDto extends CreateLetterDto {\r\n  id: number\r\n}\r\n\r\nexport interface LetterSearchParams {\r\n  search?: string\r\n  PageSize?: number\r\n  PageNumber?: number\r\n  Confidentiality?: number\r\n  Direction?: number\r\n  From?: string\r\n  To?: string\r\n}\r\n\r\nexport interface AttachmentUploadDto {\r\n  file: File\r\n  description?: string\r\n  documentSource?: number\r\n}\r\n\r\n// Enums for better type safety\r\nexport enum LetterDirection {\r\n  In = 0,\r\n  Out = 1\r\n}\r\n\r\nexport enum LetterConfidentiality {\r\n  Public = 0,\r\n  Restricted = 1,\r\n  Secret = 2\r\n}\r\n\r\nexport enum LetterStatus {\r\n  Draft = 0,\r\n  Approved = 1,\r\n  Sent = 2,\r\n  Archived = 3\r\n}\r\n", "import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { environment } from '../../environments/environment';\r\nimport { Observable } from 'rxjs';\r\nimport { \r\n  LetterModel, \r\n  LetterItem, \r\n  CreateLetterDto, \r\n  UpdateLetterDto, \r\n  LetterSearchParams,\r\n  LetterAttachment,\r\n  AttachmentUploadDto\r\n} from '../models/letter.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class LettersService {\r\n  \r\n  private apiUrl = `${environment.apiBaseUrl}/Letters`;\r\n  \r\n  constructor(private http: HttpClient) { }\r\n\r\n  getAllLetters(params: LetterSearchParams = {}): Observable<LetterModel> {\r\n    let url = this.apiUrl;\r\n    const queryParams = new URLSearchParams();\r\n    \r\n    if (params.search) queryParams.append('search', params.search);\r\n    if (params.PageSize) queryParams.append('PageSize', params.PageSize.toString());\r\n    if (params.PageNumber) queryParams.append('PageNumber', params.PageNumber.toString());\r\n    if (params.Confidentiality !== undefined) queryParams.append('Confidentiality', params.Confidentiality.toString());\r\n    if (params.Direction !== undefined) queryParams.append('Direction', params.Direction.toString());\r\n    if (params.From) queryParams.append('From', params.From);\r\n    if (params.To) queryParams.append('To', params.To);\r\n    \r\n    if (queryParams.toString()) {\r\n      url += '?' + queryParams.toString();\r\n    }\r\n    \r\n    return this.http.get<LetterModel>(url);\r\n  }\r\n\r\n  getLetter(id: number): Observable<{ success: boolean; message: string; data: LetterItem; errors: any[] }> {\r\n    return this.http.get<{ success: boolean; message: string; data: LetterItem; errors: any[] }>(`${this.apiUrl}/${id}`);\r\n  }\r\n\r\n  createLetter(letter: CreateLetterDto): Observable<any> {\r\n    return this.http.post<any>(this.apiUrl, letter);\r\n  }\r\n\r\n  updateLetter(id: number, letter: UpdateLetterDto): Observable<any> {\r\n    return this.http.put<any>(`${this.apiUrl}/${id}`, letter);\r\n  }\r\n\r\n  deleteLetter(id: number): Observable<any> {\r\n    return this.http.delete<any>(`${this.apiUrl}/${id}`);\r\n  }\r\n\r\n  // Attachment methods\r\n  addAttachment(letterId: number, attachment: AttachmentUploadDto): Observable<any> {\r\n    const formData = new FormData();\r\n    formData.append('File', attachment.file);\r\n    if (attachment.description) {\r\n      formData.append('Description', attachment.description);\r\n    }\r\n    if (attachment.documentSource !== undefined) {\r\n      formData.append('DocumentSource', attachment.documentSource.toString());\r\n    }\r\n\r\n    return this.http.post<any>(`${this.apiUrl}/${letterId}/attachments`, formData);\r\n  }\r\n\r\n  deleteAttachment(letterId: number, attachmentId: number): Observable<any> {\r\n    return this.http.delete<any>(`${this.apiUrl}/${letterId}/attachments/${attachmentId}`);\r\n  }\r\n\r\n  updateAttachment(letterId: number, attachmentId: number, attachment: Partial<LetterAttachment>): Observable<any> {\r\n    return this.http.put<any>(`${this.apiUrl}/${letterId}/attachments/${attachmentId}`, attachment);\r\n  }\r\n\r\n  getLetterAttachments(letterId: number): Observable<any> {\r\n    return this.http.get<any>(`${this.apiUrl}/${letterId}/attachments`);\r\n  }\r\n}\r\n", "import { Component, EventEmitter, Input, Output, OnDestroy } from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\n\r\nexport interface ConfirmationData {\r\n  title: string;\r\n  message: string;\r\n  confirmText: string;\r\n  cancelText: string;\r\n  type: 'delete' | 'warning' | 'info' | 'success';\r\n}\r\n\r\n@Component({\r\n  selector: 'app-letters-confirmation-modal',\r\n  standalone: false,\r\n  template: `\r\n    <div class=\"modal fade\" [class.show]=\"isVisible\" [style.display]=\"isVisible ? 'block' : 'none'\" \r\n         tabindex=\"-1\" role=\"dialog\" [attr.aria-hidden]=\"!isVisible\">\r\n      <div class=\"modal-dialog modal-dialog-centered\" role=\"document\">\r\n        <div class=\"modal-content\">\r\n          <div class=\"modal-header\" [class.bg-danger]=\"data?.type === 'delete'\" \r\n               [class.bg-warning]=\"data?.type === 'warning'\" \r\n               [class.bg-info]=\"data?.type === 'info'\"\r\n               [class.bg-success]=\"data?.type === 'success'\">\r\n            <h5 class=\"modal-title text-white\">{{ data?.title }}</h5>\r\n            <button type=\"button\" class=\"btn-close btn-close-white\" (click)=\"onCancel()\" aria-label=\"Close\"></button>\r\n          </div>\r\n          <div class=\"modal-body\">\r\n            <div [innerHTML]=\"data?.message\"></div>\r\n          </div>\r\n          <div class=\"modal-footer\">\r\n            <button type=\"button\" class=\"btn btn-secondary\" (click)=\"onCancel()\" *ngIf=\"data?.cancelText\">\r\n              {{ data?.cancelText }}\r\n            </button>\r\n            <button type=\"button\" \r\n                    [class]=\"'btn ' + (data?.type === 'delete' ? 'btn-danger' : 'btn-primary')\" \r\n                    (click)=\"onConfirm()\">\r\n              {{ data?.confirmText }}\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"modal-backdrop fade\" [class.show]=\"isVisible\" *ngIf=\"isVisible\"></div>\r\n  `,\r\n  styles: [`\r\n    .modal.show {\r\n      display: block !important;\r\n    }\r\n    .modal-backdrop.show {\r\n      opacity: 0.5;\r\n    }\r\n  `]\r\n})\r\nexport class LettersConfirmationModalComponent implements OnDestroy {\r\n  @Input() data: ConfirmationData | null = null;\r\n  @Output() confirm = new EventEmitter<void>();\r\n  @Output() cancel = new EventEmitter<void>();\r\n  \r\n  isVisible = false;\r\n  private confirmSubject = new Subject<void>();\r\n  private cancelSubject = new Subject<void>();\r\n  private resolvePromise: ((value: boolean) => void) | null = null;\r\n\r\n  show(data: ConfirmationData): Promise<boolean> {\r\n    this.data = data;\r\n    this.isVisible = true;\r\n    document.body.classList.add('modal-open');\r\n    \r\n    return new Promise<boolean>((resolve) => {\r\n      this.resolvePromise = resolve;\r\n    });\r\n  }\r\n\r\n  hide() {\r\n    this.isVisible = false;\r\n    document.body.classList.remove('modal-open');\r\n    this.data = null;\r\n  }\r\n\r\n  onConfirm() {\r\n    this.confirm.emit();\r\n    this.confirmSubject.next();\r\n    if (this.resolvePromise) {\r\n      this.resolvePromise(true);\r\n      this.resolvePromise = null;\r\n    }\r\n    this.hide();\r\n  }\r\n\r\n  onCancel() {\r\n    this.cancel.emit();\r\n    this.cancelSubject.next();\r\n    if (this.resolvePromise) {\r\n      this.resolvePromise(false);\r\n      this.resolvePromise = null;\r\n    }\r\n    this.hide();\r\n  }\r\n\r\n  // Get the confirm subject for subscription\r\n  get confirm$() {\r\n    return this.confirmSubject.asObservable();\r\n  }\r\n\r\n  // Get the cancel subject for subscription\r\n  get cancel$() {\r\n    return this.cancelSubject.asObservable();\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.confirmSubject.complete();\r\n    this.cancelSubject.complete();\r\n  }\r\n}\r\n", "import { AfterViewInit, Component, ElementRef, ViewChild, EventEmitter, Output } from '@angular/core';\r\nimport { LettersService } from '../../../services/letters.service';\r\nimport { AbstractControl, FormBuilder, FormGroup, ValidationErrors, Validators } from '@angular/forms';\r\nimport { TranslationService } from '../../../services/translation.service';\r\nimport { LettersConfirmationModalComponent } from '../letters-confirmation-modal/letters-confirmation-modal.component';\r\nimport { CreateLetterDto, LetterDirection, LetterConfidentiality, LetterStatus } from '../../../models/letter.model';\r\n\r\n@Component({\r\n  selector: 'app-add-letter',\r\n  standalone: false,\r\n  templateUrl: './add-letter.html',\r\n  styleUrl: './add-letter.css'\r\n})\r\nexport class AddLetter implements AfterViewInit {\r\n  @ViewChild('confirmationModal') confirmationModal!: LettersConfirmationModalComponent;\r\n  @Output() letterAdded = new EventEmitter<void>();\r\n  \r\n  // Custom modal properties\r\n  isOpen = false;\r\n  \r\n  addForm!: FormGroup;\r\n  \r\n  constructor(\r\n    private lettersService: LettersService,\r\n    private fb: FormBuilder,\r\n    private translationService: TranslationService\r\n  ) {}\r\n\r\n  ngAfterViewInit(): void {\r\n    // No Bootstrap modal needed\r\n  }\r\n  \r\n  open() { \r\n    this.isOpen = true;\r\n    // Reset form when opening\r\n    this.addForm.reset();\r\n    // Set default values\r\n    this.addForm.patchValue({\r\n      direction: LetterDirection.In,\r\n      confidentiality: LetterConfidentiality.Public,\r\n      status: LetterStatus.Draft,\r\n      letterDate: new Date().toISOString().split('T')[0]\r\n    });\r\n  }\r\n  \r\n  close() { \r\n    this.isOpen = false;\r\n    // Reset form when closing\r\n    this.addForm.reset();\r\n  }\r\n\r\n  // Handle backdrop click\r\n  onBackdropClick(event: Event) {\r\n    if (event.target === event.currentTarget) {\r\n      this.close();\r\n    }\r\n  }\r\n\r\n  readonly directions = [\r\n    { key: LetterDirection.In, value: \"Incoming\" },\r\n    { key: LetterDirection.Out, value: \"Outgoing\" }\r\n  ];\r\n\r\n  readonly confidentialities = [\r\n    { key: LetterConfidentiality.Public, value: \"Public\" },\r\n    { key: LetterConfidentiality.Restricted, value: \"Restricted\" },\r\n    { key: LetterConfidentiality.Secret, value: \"Secret\" }\r\n  ];\r\n\r\n  readonly statuses = [\r\n    { key: LetterStatus.Draft, value: \"Draft\" },\r\n    { key: LetterStatus.Approved, value: \"Approved\" },\r\n    { key: LetterStatus.Sent, value: \"Sent\" },\r\n    { key: LetterStatus.Archived, value: \"Archived\" }\r\n  ];\r\n\r\n  ngOnInit() {\r\n    this.initializeForm();\r\n  }\r\n\r\n  initializeForm() {\r\n    this.addForm = this.fb.group({\r\n      direction: ['', Validators.required],\r\n      subject: ['', [Validators.required, Validators.minLength(3), Validators.maxLength(200)]],\r\n      body: ['', [Validators.required, Validators.minLength(10), Validators.maxLength(500)]],\r\n      confidentiality: ['', Validators.required],\r\n      to: ['', [Validators.required, Validators.minLength(3)]],\r\n      cc: [''],\r\n      bcc: [''],\r\n      letterDate: ['', Validators.required],\r\n      status: ['', Validators.required],\r\n      referenceNumbers: ['']\r\n    });\r\n  }\r\n\r\n  isFieldValid(field: string) {\r\n    const control = this.addForm.get(field);\r\n    return control?.touched && control?.invalid;\r\n  }\r\n\r\n  hasServerError(field: string) {\r\n    const control = this.addForm.get(field);\r\n    return control?.errors?.['serverError'];\r\n  }\r\n\r\n  getServerErrorMessage(field: string) {\r\n    const control = this.addForm.get(field);\r\n    return control?.errors?.['serverError'] || '';\r\n  }\r\n\r\n  getErrorMessage(field: string) {\r\n    const control = this.addForm.get(field);\r\n    if (!control?.errors) return '';\r\n    \r\n    if (control.errors['required']) {\r\n      return this.translate('common.field_required');\r\n    }\r\n    if (control.errors['minlength']) {\r\n      const requiredLength = control.errors['minlength']['requiredLength'];\r\n      if (requiredLength === 3) {\r\n        return this.translate('letters.min_length_3');\r\n      } else if (requiredLength === 10) {\r\n        return this.translate('letters.min_length_10');\r\n      }\r\n      return `Minimum length is ${requiredLength} characters`;\r\n    }\r\n    if (control.errors['maxlength']) {\r\n      const requiredLength = control.errors['maxlength']['requiredLength'];\r\n      if (requiredLength === 200) {\r\n        return this.translate('letters.max_length_200');\r\n      } else if (requiredLength === 500) {\r\n        return this.translate('letters.max_length_500');\r\n      }\r\n      return `Maximum length is ${requiredLength} characters`;\r\n    }\r\n    return 'Invalid field';\r\n  }\r\n\r\n  onSubmit() {\r\n    if (this.addForm.invalid) {\r\n      this.addForm.markAllAsTouched();\r\n      return;\r\n    }\r\n\r\n    const formValue = this.addForm.value;\r\n    \r\n    // Ensure all required fields are included and properly formatted\r\n    const letterData: CreateLetterDto = {\r\n      direction: parseInt(formValue.direction),\r\n      subject: formValue.subject,\r\n      body: formValue.body,\r\n      confidentiality: parseInt(formValue.confidentiality),\r\n      to: formValue.to,\r\n      cc: formValue.cc || '',\r\n      bcc: formValue.bcc || '',\r\n      letterDate: new Date(formValue.letterDate).toISOString(),\r\n      status: parseInt(formValue.status),\r\n      referenceNumbers: formValue.referenceNumbers || ''\r\n    };\r\n\r\n    console.log('Submitting letter data:', letterData); // Debug log\r\n\r\n    this.lettersService.createLetter(letterData).subscribe({\r\n      next: (res) => {\r\n        this.showSuccessMessage(this.translate('letters.add_letter_success'));\r\n        this.close();\r\n        this.addForm.reset();\r\n        this.letterAdded.emit(); // Notify parent component\r\n      },\r\n      error: (error) => {\r\n        console.error('Error adding letter:', error);\r\n        this.handleApiErrors(error);\r\n      }\r\n    });\r\n  }\r\n\r\n  private handleApiErrors(error: any) {\r\n    console.log('Full error response:', error); // Debug log\r\n    \r\n    if (error.error?.errors) {\r\n      // Handle validation errors by setting them on form controls\r\n      const errors = error.error.errors;\r\n      console.log('API validation errors:', errors); // Debug log\r\n      \r\n      Object.keys(errors).forEach(fieldName => {\r\n        const control = this.addForm.get(this.getFormFieldName(fieldName));\r\n        if (control) {\r\n          control.setErrors({ serverError: errors[fieldName][0] });\r\n          control.markAsTouched();\r\n        } else {\r\n          console.warn(`Form control not found for field: ${fieldName}`); // Debug log\r\n        }\r\n      });\r\n    } else {\r\n      // Show generic error in alert\r\n      let errorMessage = 'Unknown error occurred';\r\n      if (error.error?.message) {\r\n        errorMessage = error.error.message;\r\n      } else if (error.message) {\r\n        errorMessage = error.message;\r\n      }\r\n      alert(this.translationService.translate('common.error') + ': ' + errorMessage);\r\n    }\r\n  }\r\n\r\n  private getFormFieldName(apiFieldName: string): string {\r\n    // Map API field names (capitalized) to form field names (lowercase)\r\n    const fieldMapping: { [key: string]: string } = {\r\n      'Direction': 'direction',\r\n      'Subject': 'subject',\r\n      'Body': 'body',\r\n      'Confidentiality': 'confidentiality',\r\n      'To': 'to',\r\n      'Cc': 'cc',\r\n      'Bcc': 'bcc',\r\n      'LetterDate': 'letterDate',\r\n      'Status': 'status',\r\n      'ReferenceNumbers': 'referenceNumbers'\r\n    };\r\n    return fieldMapping[apiFieldName] || apiFieldName.toLowerCase();\r\n  }\r\n\r\n  translate(key: string): string {\r\n    return this.translationService.translate(key);\r\n  }\r\n\r\n  isRTL(): boolean {\r\n    return this.translationService.isRTL();\r\n  }\r\n\r\n  showSuccessMessage(message: string) {\r\n    const successData = {\r\n      title: this.translate('common.success'),\r\n      message: message,\r\n      confirmText: this.translate('common.ok'),\r\n      cancelText: '',\r\n      type: 'info' as const\r\n    };\r\n    this.confirmationModal.show(successData);\r\n  }\r\n\r\n  getDirectionLabel(direction: number): string {\r\n    return this.translate('letters.directions.' + direction);\r\n  }\r\n\r\n  getConfidentialityLabel(confidentiality: number): string {\r\n    return this.translate('letters.confidentialities.' + confidentiality);\r\n  }\r\n\r\n  getStatusLabel(status: number): string {\r\n    return this.translate('letters.statuses.' + status);\r\n  }\r\n}\r\n", "<!-- Add Letter Modal -->\r\n<div class=\"modal fade\" [class.show]=\"isOpen\" [style.display]=\"isOpen ? 'block' : 'none'\" \r\n     tabindex=\"-1\" role=\"dialog\" [attr.aria-hidden]=\"!isOpen\" (click)=\"onBackdropClick($event)\">\r\n  <div class=\"modal-dialog modal-lg modal-dialog-centered\" role=\"document\">\r\n    <div class=\"modal-content\">\r\n      <div class=\"modal-header bg-primary text-white\" [dir]=\"isRTL() ? 'rtl' : 'ltr'\">\r\n        <h5 class=\"modal-title\" [class.text-end]=\"isRTL()\" [class.text-start]=\"!isRTL()\">\r\n         \r\n          {{ translate('letters.add_letter') }}\r\n        </h5>\r\n      </div>\r\n      \r\n      <form [formGroup]=\"addForm\" (ngSubmit)=\"onSubmit()\">\r\n        <div class=\"modal-body\">\r\n          <div class=\"row g-3\">\r\n            <!-- Direction -->\r\n            <div class=\"col-md-6\">\r\n              <label class=\"form-label\">{{ translate('letters.direction') }} <span class=\"text-danger\">*</span></label>\r\n              <select class=\"form-select\" formControlName=\"direction\" \r\n                      [class.is-invalid]=\"isFieldValid('direction') || hasServerError('direction')\">\r\n                <option value=\"\">{{ translate('letters.direction_required') }}</option>\r\n                <option *ngFor=\"let direction of directions\" [value]=\"direction.key\">\r\n                  {{ getDirectionLabel(direction.key) }}\r\n                </option>\r\n              </select>\r\n              <div class=\"invalid-feedback\" *ngIf=\"isFieldValid('direction')\">\r\n                {{ getErrorMessage('direction') }}\r\n              </div>\r\n              <div class=\"invalid-feedback\" *ngIf=\"hasServerError('direction')\">\r\n                {{ getServerErrorMessage('direction') }}\r\n              </div>\r\n            </div>\r\n\r\n            <!-- Confidentiality -->\r\n            <div class=\"col-md-6\">\r\n              <label class=\"form-label\">{{ translate('letters.confidentiality') }} <span class=\"text-danger\">*</span></label>\r\n              <select class=\"form-select\" formControlName=\"confidentiality\" \r\n                      [class.is-invalid]=\"isFieldValid('confidentiality') || hasServerError('confidentiality')\">\r\n                <option value=\"\">{{ translate('letters.confidentiality_required') }}</option>\r\n                <option *ngFor=\"let confidentiality of confidentialities\" [value]=\"confidentiality.key\">\r\n                  {{ getConfidentialityLabel(confidentiality.key) }}\r\n                </option>\r\n              </select>\r\n              <div class=\"invalid-feedback\" *ngIf=\"isFieldValid('confidentiality')\">\r\n                {{ getErrorMessage('confidentiality') }}\r\n              </div>\r\n              <div class=\"invalid-feedback\" *ngIf=\"hasServerError('confidentiality')\">\r\n                {{ getServerErrorMessage('confidentiality') }}\r\n              </div>\r\n            </div>\r\n\r\n            <!-- Subject -->\r\n            <div class=\"col-12\">\r\n              <label class=\"form-label\">{{ translate('letters.subject') }} <span class=\"text-danger\">*</span></label>\r\n              <input type=\"text\" class=\"form-control\" formControlName=\"subject\" \r\n                     [placeholder]=\"translate('letters.subject_placeholder')\"\r\n                     [class.is-invalid]=\"isFieldValid('subject') || hasServerError('subject')\">\r\n              <div class=\"invalid-feedback\" *ngIf=\"isFieldValid('subject')\">\r\n                {{ getErrorMessage('subject') }}\r\n              </div>\r\n              <div class=\"invalid-feedback\" *ngIf=\"hasServerError('subject')\">\r\n                {{ getServerErrorMessage('subject') }}\r\n              </div>\r\n            </div>\r\n\r\n            <!-- Body -->\r\n            <div class=\"col-12\">\r\n              <label class=\"form-label\">{{ translate('letters.body') }} <span class=\"text-danger\">*</span></label>\r\n              <textarea class=\"form-control\" formControlName=\"body\" rows=\"4\" \r\n                        [placeholder]=\"translate('letters.body_placeholder')\"\r\n                        [class.is-invalid]=\"isFieldValid('body') || hasServerError('body')\"></textarea>\r\n              <div class=\"invalid-feedback\" *ngIf=\"isFieldValid('body')\">\r\n                {{ getErrorMessage('body') }}\r\n              </div>\r\n              <div class=\"invalid-feedback\" *ngIf=\"hasServerError('body')\">\r\n                {{ getServerErrorMessage('body') }}\r\n              </div>\r\n            </div>\r\n\r\n            <!-- To -->\r\n            <div class=\"col-md-6\">\r\n              <label class=\"form-label\">{{ translate('letters.to') }} <span class=\"text-danger\">*</span></label>\r\n              <input type=\"text\" class=\"form-control\" formControlName=\"to\" \r\n                     [placeholder]=\"translate('letters.to_placeholder')\"\r\n                     [class.is-invalid]=\"isFieldValid('to') || hasServerError('to')\">\r\n              <div class=\"invalid-feedback\" *ngIf=\"isFieldValid('to')\">\r\n                {{ getErrorMessage('to') }}\r\n              </div>\r\n              <div class=\"invalid-feedback\" *ngIf=\"hasServerError('to')\">\r\n                {{ getServerErrorMessage('to') }}\r\n              </div>\r\n            </div>\r\n\r\n            <!-- Letter Date -->\r\n            <div class=\"col-md-6\">\r\n              <label class=\"form-label\">{{ translate('letters.letter_date') }} <span class=\"text-danger\">*</span></label>\r\n              <input type=\"date\" class=\"form-control\" formControlName=\"letterDate\" \r\n                     [class.is-invalid]=\"isFieldValid('letterDate') || hasServerError('letterDate')\">\r\n              <div class=\"invalid-feedback\" *ngIf=\"isFieldValid('letterDate')\">\r\n                {{ getErrorMessage('letterDate') }}\r\n              </div>\r\n              <div class=\"invalid-feedback\" *ngIf=\"hasServerError('letterDate')\">\r\n                {{ getServerErrorMessage('letterDate') }}\r\n              </div>\r\n            </div>\r\n\r\n            <!-- CC -->\r\n            <div class=\"col-md-6\">\r\n              <label class=\"form-label\">{{ translate('letters.cc') }}</label>\r\n              <input type=\"text\" class=\"form-control\" formControlName=\"cc\" \r\n                     [placeholder]=\"translate('letters.cc_placeholder')\"\r\n                     [class.is-invalid]=\"isFieldValid('cc') || hasServerError('cc')\">\r\n              <div class=\"invalid-feedback\" *ngIf=\"isFieldValid('cc')\">\r\n                {{ getErrorMessage('cc') }}\r\n              </div>\r\n              <div class=\"invalid-feedback\" *ngIf=\"hasServerError('cc')\">\r\n                {{ getServerErrorMessage('cc') }}\r\n              </div>\r\n            </div>\r\n\r\n            <!-- BCC -->\r\n            <div class=\"col-md-6\">\r\n              <label class=\"form-label\">{{ translate('letters.bcc') }}</label>\r\n              <input type=\"text\" class=\"form-control\" formControlName=\"bcc\" \r\n                     [placeholder]=\"translate('letters.bcc_placeholder')\"\r\n                     [class.is-invalid]=\"isFieldValid('bcc') || hasServerError('bcc')\">\r\n              <div class=\"invalid-feedback\" *ngIf=\"isFieldValid('bcc')\">\r\n                {{ getErrorMessage('bcc') }}\r\n              </div>\r\n              <div class=\"invalid-feedback\" *ngIf=\"hasServerError('bcc')\">\r\n                {{ getServerErrorMessage('bcc') }}\r\n              </div>\r\n            </div>\r\n\r\n            <!-- Status -->\r\n            <div class=\"col-md-6\">\r\n              <label class=\"form-label\">{{ translate('letters.status') }} <span class=\"text-danger\">*</span></label>\r\n              <select class=\"form-select\" formControlName=\"status\" \r\n                      [class.is-invalid]=\"isFieldValid('status') || hasServerError('status')\">\r\n                <option value=\"\">{{ translate('letters.status_required') }}</option>\r\n                <option *ngFor=\"let status of statuses\" [value]=\"status.key\">\r\n                  {{ getStatusLabel(status.key) }}\r\n                </option>\r\n              </select>\r\n              <div class=\"invalid-feedback\" *ngIf=\"isFieldValid('status')\">\r\n                {{ getErrorMessage('status') }}\r\n              </div>\r\n              <div class=\"invalid-feedback\" *ngIf=\"hasServerError('status')\">\r\n                {{ getServerErrorMessage('status') }}\r\n              </div>\r\n            </div>\r\n\r\n            <!-- Reference Numbers -->\r\n            <div class=\"col-md-6\">\r\n              <label class=\"form-label\">{{ translate('letters.reference_numbers') }}</label>\r\n              <input type=\"text\" class=\"form-control\" formControlName=\"referenceNumbers\" \r\n                     [placeholder]=\"translate('letters.reference_numbers_placeholder')\"\r\n                     [class.is-invalid]=\"isFieldValid('referenceNumbers') || hasServerError('referenceNumbers')\">\r\n              <div class=\"invalid-feedback\" *ngIf=\"isFieldValid('referenceNumbers')\">\r\n                {{ getErrorMessage('referenceNumbers') }}\r\n              </div>\r\n              <div class=\"invalid-feedback\" *ngIf=\"hasServerError('referenceNumbers')\">\r\n                {{ getServerErrorMessage('referenceNumbers') }}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        \r\n        <div class=\"modal-footer\">\r\n          <button type=\"button\" class=\"btn btn-secondary\" (click)=\"close()\">\r\n            {{ translate('common.cancel') }}\r\n          </button>\r\n          <button type=\"submit\" class=\"btn btn-primary\" [disabled]=\"addForm.invalid\">\r\n            {{ translate('letters.create') }}\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<!-- Modal Backdrop -->\r\n<div class=\"modal-backdrop fade\" [class.show]=\"isOpen\" *ngIf=\"isOpen\"></div>\r\n\r\n<!-- Confirmation Modal -->\r\n<app-letters-confirmation-modal #confirmationModal></app-letters-confirmation-modal>\r\n", "import { AfterViewInit, Component, ElementRef, ViewChild, EventEmitter, Output } from '@angular/core';\r\nimport { LettersService } from '../../../services/letters.service';\r\nimport { AbstractControl, FormBuilder, FormGroup, ValidationErrors, Validators } from '@angular/forms';\r\nimport { TranslationService } from '../../../services/translation.service';\r\nimport { LettersConfirmationModalComponent } from '../letters-confirmation-modal/letters-confirmation-modal.component';\r\nimport { UpdateLetterDto, LetterItem, LetterDirection, LetterConfidentiality, LetterStatus } from '../../../models/letter.model';\r\n\r\n@Component({\r\n  selector: 'app-edit-letter',\r\n  standalone: false,\r\n  templateUrl: './edit-letter.html',\r\n  styleUrl: './edit-letter.css'\r\n})\r\nexport class EditLetter implements AfterViewInit {\r\n  @ViewChild('confirmationModal') confirmationModal!: LettersConfirmationModalComponent;\r\n  @Output() letterUpdated = new EventEmitter<void>();\r\n  \r\n  // Custom modal properties\r\n  isOpen = false;\r\n  currentLetter: LetterItem | null = null;\r\n  \r\n  editForm!: FormGroup;\r\n  \r\n  constructor(\r\n    private lettersService: LettersService,\r\n    private fb: FormBuilder,\r\n    private translationService: TranslationService\r\n  ) {}\r\n\r\n  ngAfterViewInit(): void {\r\n    // No Bootstrap modal needed\r\n  }\r\n  \r\n  open(letter: LetterItem) { \r\n    this.currentLetter = letter;\r\n    this.isOpen = true;\r\n    this.initializeForm();\r\n    this.populateForm(letter);\r\n  }\r\n  \r\n  close() { \r\n    this.isOpen = false;\r\n    this.currentLetter = null;\r\n    // Reset form when closing\r\n    this.editForm.reset();\r\n  }\r\n\r\n  // Handle backdrop click\r\n  onBackdropClick(event: Event) {\r\n    if (event.target === event.currentTarget) {\r\n      this.close();\r\n    }\r\n  }\r\n\r\n  readonly directions = [\r\n    { key: LetterDirection.In, value: \"Incoming\" },\r\n    { key: LetterDirection.Out, value: \"Outgoing\" }\r\n  ];\r\n\r\n  readonly confidentialities = [\r\n    { key: LetterConfidentiality.Public, value: \"Public\" },\r\n    { key: LetterConfidentiality.Restricted, value: \"Restricted\" },\r\n    { key: LetterConfidentiality.Secret, value: \"Secret\" }\r\n  ];\r\n\r\n  readonly statuses = [\r\n    { key: LetterStatus.Draft, value: \"Draft\" },\r\n    { key: LetterStatus.Approved, value: \"Approved\" },\r\n    { key: LetterStatus.Sent, value: \"Sent\" },\r\n    { key: LetterStatus.Archived, value: \"Archived\" }\r\n  ];\r\n\r\n  ngOnInit() {\r\n    this.initializeForm();\r\n  }\r\n\r\n  initializeForm() {\r\n    this.editForm = this.fb.group({\r\n      direction: ['', Validators.required],\r\n      subject: ['', [Validators.required, Validators.minLength(3), Validators.maxLength(200)]],\r\n      body: ['', [Validators.required, Validators.minLength(10), Validators.maxLength(500)]],\r\n      confidentiality: ['', Validators.required],\r\n      to: ['', [Validators.required, Validators.minLength(3)]],\r\n      cc: [''],\r\n      bcc: [''],\r\n      letterDate: ['', Validators.required],\r\n      status: ['', Validators.required],\r\n      referenceNumbers: ['']\r\n    });\r\n  }\r\n\r\n  populateForm(letter: LetterItem) {\r\n    // Format the date for the date input\r\n    const letterDate = new Date(letter.letterDate);\r\n    const formattedDate = letterDate.toISOString().split('T')[0];\r\n    \r\n    this.editForm.patchValue({\r\n      direction: letter.direction,\r\n      subject: letter.subject,\r\n      body: letter.body,\r\n      confidentiality: letter.confidentiality,\r\n      to: letter.to,\r\n      cc: letter.cc || '',\r\n      bcc: letter.bcc || '',\r\n      letterDate: formattedDate,\r\n      status: letter.status || LetterStatus.Draft,\r\n      referenceNumbers: letter.referenceNumbers || ''\r\n    });\r\n  }\r\n\r\n  isFieldValid(field: string) {\r\n    const control = this.editForm.get(field);\r\n    return control?.touched && control?.invalid;\r\n  }\r\n\r\n  hasServerError(field: string) {\r\n    const control = this.editForm.get(field);\r\n    return control?.errors?.['serverError'];\r\n  }\r\n\r\n  getServerErrorMessage(field: string) {\r\n    const control = this.editForm.get(field);\r\n    return control?.errors?.['serverError'] || '';\r\n  }\r\n\r\n  getErrorMessage(field: string) {\r\n    const control = this.editForm.get(field);\r\n    if (!control?.errors) return '';\r\n    \r\n    if (control.errors['required']) {\r\n      return this.translate('common.field_required');\r\n    }\r\n    if (control.errors['minlength']) {\r\n      const requiredLength = control.errors['minlength']['requiredLength'];\r\n      if (requiredLength === 3) {\r\n        return this.translate('letters.min_length_3');\r\n      } else if (requiredLength === 10) {\r\n        return this.translate('letters.min_length_10');\r\n      }\r\n      return `Minimum length is ${requiredLength} characters`;\r\n    }\r\n    if (control.errors['maxlength']) {\r\n      const requiredLength = control.errors['maxlength']['requiredLength'];\r\n      if (requiredLength === 200) {\r\n        return this.translate('letters.max_length_200');\r\n      } else if (requiredLength === 500) {\r\n        return this.translate('letters.max_length_500');\r\n      }\r\n      return `Maximum length is ${requiredLength} characters`;\r\n    }\r\n    return 'Invalid field';\r\n  }\r\n\r\n  onSubmit() {\r\n    if (this.editForm.invalid || !this.currentLetter) {\r\n      this.editForm.markAllAsTouched();\r\n      return;\r\n    }\r\n\r\n    const formValue = this.editForm.value;\r\n    \r\n    // Ensure all required fields are included and properly formatted\r\n    const letterData: UpdateLetterDto = {\r\n      id: this.currentLetter.id,\r\n      direction: parseInt(formValue.direction),\r\n      subject: formValue.subject,\r\n      body: formValue.body,\r\n      confidentiality: parseInt(formValue.confidentiality),\r\n      to: formValue.to,\r\n      cc: formValue.cc || '',\r\n      bcc: formValue.bcc || '',\r\n      letterDate: new Date(formValue.letterDate).toISOString(),\r\n      status: parseInt(formValue.status),\r\n      referenceNumbers: formValue.referenceNumbers || ''\r\n    };\r\n\r\n    console.log('Updating letter data:', letterData); // Debug log\r\n\r\n    this.lettersService.updateLetter(this.currentLetter.id, letterData).subscribe({\r\n      next: (res) => {\r\n        this.showSuccessMessage(this.translate('letters.edit_letter_success'));\r\n        this.close();\r\n        this.editForm.reset();\r\n        this.letterUpdated.emit(); // Notify parent component\r\n      },\r\n      error: (error) => {\r\n        console.error('Error updating letter:', error);\r\n        this.handleApiErrors(error);\r\n      }\r\n    });\r\n  }\r\n\r\n  private handleApiErrors(error: any) {\r\n    console.log('Full error response:', error); // Debug log\r\n    \r\n    if (error.error?.errors) {\r\n      // Handle validation errors by setting them on form controls\r\n      const errors = error.error.errors;\r\n      console.log('API validation errors:', errors); // Debug log\r\n      \r\n      Object.keys(errors).forEach(fieldName => {\r\n        const control = this.editForm.get(this.getFormFieldName(fieldName));\r\n        if (control) {\r\n          control.setErrors({ serverError: errors[fieldName][0] });\r\n          control.markAsTouched();\r\n        } else {\r\n          console.warn(`Form control not found for field: ${fieldName}`); // Debug log\r\n        }\r\n      });\r\n    } else {\r\n      // Show generic error in alert\r\n      let errorMessage = 'Unknown error occurred';\r\n      if (error.error?.message) {\r\n        errorMessage = error.error.message;\r\n      } else if (error.message) {\r\n        errorMessage = error.message;\r\n      }\r\n      alert(this.translationService.translate('common.error') + ': ' + errorMessage);\r\n    }\r\n  }\r\n\r\n  private getFormFieldName(apiFieldName: string): string {\r\n    // Map API field names (capitalized) to form field names (lowercase)\r\n    const fieldMapping: { [key: string]: string } = {\r\n      'Direction': 'direction',\r\n      'Subject': 'subject',\r\n      'Body': 'body',\r\n      'Confidentiality': 'confidentiality',\r\n      'To': 'to',\r\n      'Cc': 'cc',\r\n      'Bcc': 'bcc',\r\n      'LetterDate': 'letterDate',\r\n      'Status': 'status',\r\n      'ReferenceNumbers': 'referenceNumbers'\r\n    };\r\n    return fieldMapping[apiFieldName] || apiFieldName.toLowerCase();\r\n  }\r\n\r\n  translate(key: string): string {\r\n    return this.translationService.translate(key);\r\n  }\r\n\r\n  isRTL(): boolean {\r\n    return this.translationService.isRTL();\r\n  }\r\n\r\n  showSuccessMessage(message: string) {\r\n    const successData = {\r\n      title: this.translate('common.success'),\r\n      message: message,\r\n      confirmText: this.translate('common.ok'),\r\n      cancelText: '',\r\n      type: 'info' as const\r\n    };\r\n    this.confirmationModal.show(successData);\r\n  }\r\n\r\n  getDirectionLabel(direction: number): string {\r\n    return this.translate('letters.directions.' + direction);\r\n  }\r\n\r\n  getConfidentialityLabel(confidentiality: number): string {\r\n    return this.translate('letters.confidentialities.' + confidentiality);\r\n  }\r\n\r\n  getStatusLabel(status: number): string {\r\n    return this.translate('letters.statuses.' + status);\r\n  }\r\n}\r\n", "<!-- Edit Letter Modal -->\r\n<div class=\"modal fade\" [class.show]=\"isOpen\" [style.display]=\"isOpen ? 'block' : 'none'\" \r\n     tabindex=\"-1\" role=\"dialog\" [attr.aria-hidden]=\"!isOpen\" (click)=\"onBackdropClick($event)\">\r\n  <div class=\"modal-dialog modal-lg modal-dialog-centered\" role=\"document\">\r\n    <div class=\"modal-content\">\r\n      <div class=\"modal-header bg-warning text-dark\" [dir]=\"isRTL() ? 'rtl' : 'ltr'\">\r\n        <h5 class=\"modal-title\" [class.text-end]=\"isRTL()\" [class.text-start]=\"!isRTL()\">\r\n          {{ translate('letters.edit_letter') }}\r\n        </h5>\r\n      </div>\r\n      \r\n      <form [formGroup]=\"editForm\" (ngSubmit)=\"onSubmit()\">\r\n        <div class=\"modal-body\">\r\n          <div class=\"row g-3\">\r\n            <!-- Direction -->\r\n            <div class=\"col-md-6\">\r\n              <label class=\"form-label\">{{ translate('letters.direction') }} <span class=\"text-danger\">*</span></label>\r\n              <select class=\"form-select\" formControlName=\"direction\" \r\n                      [class.is-invalid]=\"isFieldValid('direction') || hasServerError('direction')\">\r\n                <option value=\"\">{{ translate('letters.direction_required') }}</option>\r\n                <option *ngFor=\"let direction of directions\" [value]=\"direction.key\">\r\n                  {{ getDirectionLabel(direction.key) }}\r\n                </option>\r\n              </select>\r\n              <div class=\"invalid-feedback\" *ngIf=\"isFieldValid('direction')\">\r\n                {{ getErrorMessage('direction') }}\r\n              </div>\r\n              <div class=\"invalid-feedback\" *ngIf=\"hasServerError('direction')\">\r\n                {{ getServerErrorMessage('direction') }}\r\n              </div>\r\n            </div>\r\n\r\n            <!-- Confidentiality -->\r\n            <div class=\"col-md-6\">\r\n              <label class=\"form-label\">{{ translate('letters.confidentiality') }} <span class=\"text-danger\">*</span></label>\r\n              <select class=\"form-select\" formControlName=\"confidentiality\" \r\n                      [class.is-invalid]=\"isFieldValid('confidentiality') || hasServerError('confidentiality')\">\r\n                <option value=\"\">{{ translate('letters.confidentiality_required') }}</option>\r\n                <option *ngFor=\"let confidentiality of confidentialities\" [value]=\"confidentiality.key\">\r\n                  {{ getConfidentialityLabel(confidentiality.key) }}\r\n                </option>\r\n              </select>\r\n              <div class=\"invalid-feedback\" *ngIf=\"isFieldValid('confidentiality')\">\r\n                {{ getErrorMessage('confidentiality') }}\r\n              </div>\r\n              <div class=\"invalid-feedback\" *ngIf=\"hasServerError('confidentiality')\">\r\n                {{ getServerErrorMessage('confidentiality') }}\r\n              </div>\r\n            </div>\r\n\r\n            <!-- Subject -->\r\n            <div class=\"col-12\">\r\n              <label class=\"form-label\">{{ translate('letters.subject') }} <span class=\"text-danger\">*</span></label>\r\n              <input type=\"text\" class=\"form-control\" formControlName=\"subject\" \r\n                     [placeholder]=\"translate('letters.subject_placeholder')\"\r\n                     [class.is-invalid]=\"isFieldValid('subject') || hasServerError('subject')\">\r\n              <div class=\"invalid-feedback\" *ngIf=\"isFieldValid('subject')\">\r\n                {{ getErrorMessage('subject') }}\r\n              </div>\r\n              <div class=\"invalid-feedback\" *ngIf=\"hasServerError('subject')\">\r\n                {{ getServerErrorMessage('subject') }}\r\n              </div>\r\n            </div>\r\n\r\n            <!-- Body -->\r\n            <div class=\"col-12\">\r\n              <label class=\"form-label\">{{ translate('letters.body') }} <span class=\"text-danger\">*</span></label>\r\n              <textarea class=\"form-control\" formControlName=\"body\" rows=\"4\" \r\n                        [placeholder]=\"translate('letters.body_placeholder')\"\r\n                        [class.is-invalid]=\"isFieldValid('body') || hasServerError('body')\"></textarea>\r\n              <div class=\"invalid-feedback\" *ngIf=\"isFieldValid('body')\">\r\n                {{ getErrorMessage('body') }}\r\n              </div>\r\n              <div class=\"invalid-feedback\" *ngIf=\"hasServerError('body')\">\r\n                {{ getServerErrorMessage('body') }}\r\n              </div>\r\n            </div>\r\n\r\n            <!-- To -->\r\n            <div class=\"col-md-6\">\r\n              <label class=\"form-label\">{{ translate('letters.to') }} <span class=\"text-danger\">*</span></label>\r\n              <input type=\"text\" class=\"form-control\" formControlName=\"to\" \r\n                     [placeholder]=\"translate('letters.to_placeholder')\"\r\n                     [class.is-invalid]=\"isFieldValid('to') || hasServerError('to')\">\r\n              <div class=\"invalid-feedback\" *ngIf=\"isFieldValid('to')\">\r\n                {{ getErrorMessage('to') }}\r\n              </div>\r\n              <div class=\"invalid-feedback\" *ngIf=\"hasServerError('to')\">\r\n                {{ getServerErrorMessage('to') }}\r\n              </div>\r\n            </div>\r\n\r\n            <!-- Letter Date -->\r\n            <div class=\"col-md-6\">\r\n              <label class=\"form-label\">{{ translate('letters.letter_date') }} <span class=\"text-danger\">*</span></label>\r\n              <input type=\"date\" class=\"form-control\" formControlName=\"letterDate\" \r\n                     [class.is-invalid]=\"isFieldValid('letterDate') || hasServerError('letterDate')\">\r\n              <div class=\"invalid-feedback\" *ngIf=\"isFieldValid('letterDate')\">\r\n                {{ getErrorMessage('letterDate') }}\r\n              </div>\r\n              <div class=\"invalid-feedback\" *ngIf=\"hasServerError('letterDate')\">\r\n                {{ getServerErrorMessage('letterDate') }}\r\n              </div>\r\n            </div>\r\n\r\n            <!-- CC -->\r\n            <div class=\"col-md-6\">\r\n              <label class=\"form-label\">{{ translate('letters.cc') }}</label>\r\n              <input type=\"text\" class=\"form-control\" formControlName=\"cc\" \r\n                     [placeholder]=\"translate('letters.cc_placeholder')\"\r\n                     [class.is-invalid]=\"isFieldValid('cc') || hasServerError('cc')\">\r\n              <div class=\"invalid-feedback\" *ngIf=\"isFieldValid('cc')\">\r\n                {{ getErrorMessage('cc') }}\r\n              </div>\r\n              <div class=\"invalid-feedback\" *ngIf=\"hasServerError('cc')\">\r\n                {{ getServerErrorMessage('cc') }}\r\n              </div>\r\n            </div>\r\n\r\n            <!-- BCC -->\r\n            <div class=\"col-md-6\">\r\n              <label class=\"form-label\">{{ translate('letters.bcc') }}</label>\r\n              <input type=\"text\" class=\"form-control\" formControlName=\"bcc\" \r\n                     [placeholder]=\"translate('letters.bcc_placeholder')\"\r\n                     [class.is-invalid]=\"isFieldValid('bcc') || hasServerError('bcc')\">\r\n              <div class=\"invalid-feedback\" *ngIf=\"isFieldValid('bcc')\">\r\n                {{ getErrorMessage('bcc') }}\r\n              </div>\r\n              <div class=\"invalid-feedback\" *ngIf=\"hasServerError('bcc')\">\r\n                {{ getServerErrorMessage('bcc') }}\r\n              </div>\r\n            </div>\r\n\r\n            <!-- Status -->\r\n            <div class=\"col-md-6\">\r\n              <label class=\"form-label\">{{ translate('letters.status') }} <span class=\"text-danger\">*</span></label>\r\n              <select class=\"form-select\" formControlName=\"status\" \r\n                      [class.is-invalid]=\"isFieldValid('status') || hasServerError('status')\">\r\n                <option value=\"\">{{ translate('letters.status_required') }}</option>\r\n                <option *ngFor=\"let status of statuses\" [value]=\"status.key\">\r\n                  {{ getStatusLabel(status.key) }}\r\n                </option>\r\n              </select>\r\n              <div class=\"invalid-feedback\" *ngIf=\"isFieldValid('status')\">\r\n                {{ getErrorMessage('status') }}\r\n              </div>\r\n              <div class=\"invalid-feedback\" *ngIf=\"hasServerError('status')\">\r\n                {{ getServerErrorMessage('status') }}\r\n              </div>\r\n            </div>\r\n\r\n            <!-- Reference Numbers -->\r\n            <div class=\"col-md-6\">\r\n              <label class=\"form-label\">{{ translate('letters.reference_numbers') }}</label>\r\n              <input type=\"text\" class=\"form-control\" formControlName=\"referenceNumbers\" \r\n                     [placeholder]=\"translate('letters.reference_numbers_placeholder')\"\r\n                     [class.is-invalid]=\"isFieldValid('referenceNumbers') || hasServerError('referenceNumbers')\">\r\n              <div class=\"invalid-feedback\" *ngIf=\"isFieldValid('referenceNumbers')\">\r\n                {{ getErrorMessage('referenceNumbers') }}\r\n              </div>\r\n              <div class=\"invalid-feedback\" *ngIf=\"hasServerError('referenceNumbers')\">\r\n                {{ getServerErrorMessage('referenceNumbers') }}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        \r\n        <div class=\"modal-footer\">\r\n          <button type=\"button\" class=\"btn btn-secondary\" (click)=\"close()\">\r\n            <i class=\"fas fa-times me-2\"></i>{{ translate('common.cancel') }}\r\n          </button>\r\n          <button type=\"submit\" class=\"btn btn-warning\" [disabled]=\"editForm.invalid\">\r\n            <i class=\"fas fa-save me-2\"></i>{{ translate('letters.update') }}\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<!-- Modal Backdrop -->\r\n<div class=\"modal-backdrop fade\" [class.show]=\"isOpen\" *ngIf=\"isOpen\"></div>\r\n\r\n<!-- Confirmation Modal -->\r\n<app-letters-confirmation-modal #confirmationModal></app-letters-confirmation-modal>\r\n", "import { AfterViewInit, Component, ElementRef, ViewChild, EventEmitter, Output } from '@angular/core';\r\nimport { LettersService } from '../../../services/letters.service';\r\nimport { AbstractControl, FormBuilder, FormGroup, ValidationErrors, Validators } from '@angular/forms';\r\nimport { TranslationService } from '../../../services/translation.service';\r\nimport { LettersConfirmationModalComponent } from '../letters-confirmation-modal/letters-confirmation-modal.component';\r\nimport { LetterItem, AttachmentUploadDto } from '../../../models/letter.model';\r\n\r\n@Component({\r\n  selector: 'app-add-attachment',\r\n  standalone: false,\r\n  templateUrl: './add-attachment.html',\r\n  styleUrl: './add-attachment.css'\r\n})\r\nexport class AddAttachment implements AfterViewInit {\r\n  @ViewChild('confirmationModal') confirmationModal!: LettersConfirmationModalComponent;\r\n  @ViewChild('fileInput') fileInput!: ElementRef<HTMLInputElement>;\r\n  @Output() attachmentAdded = new EventEmitter<void>();\r\n  \r\n  // Custom modal properties\r\n  isOpen = false;\r\n  currentLetter: LetterItem | null = null;\r\n  selectedFile: File | null = null;\r\n  isUploading = false;\r\n  \r\n  addForm!: FormGroup;\r\n  \r\n  // Supported file types\r\n  readonly supportedFileTypes = [\r\n    'application/pdf',\r\n    'application/msword',\r\n    'application/vnd.openxmlformats-officedocument.wordprocessingml.document',\r\n    'application/vnd.ms-excel',\r\n    'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet',\r\n    'application/vnd.ms-powerpoint',\r\n    'application/vnd.openxmlformats-officedocument.presentationml.presentation',\r\n    'image/jpeg',\r\n    'image/png',\r\n    'image/gif'\r\n  ];\r\n\r\n  readonly maxFileSize = 10 * 1024 * 1024; // 10MB\r\n  \r\n  constructor(\r\n    private lettersService: LettersService,\r\n    private fb: FormBuilder,\r\n    private translationService: TranslationService\r\n  ) {}\r\n\r\n  ngAfterViewInit(): void {\r\n    // No Bootstrap modal needed\r\n  }\r\n  \r\n  open(letter: LetterItem) { \r\n    this.currentLetter = letter;\r\n    this.isOpen = true;\r\n    this.initializeForm();\r\n    this.resetForm();\r\n  }\r\n  \r\n  close() { \r\n    this.isOpen = false;\r\n    this.currentLetter = null;\r\n    this.selectedFile = null;\r\n    this.isUploading = false;\r\n    this.resetForm();\r\n  }\r\n\r\n  // Handle backdrop click\r\n  onBackdropClick(event: Event) {\r\n    if (event.target === event.currentTarget) {\r\n      this.close();\r\n    }\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.initializeForm();\r\n  }\r\n\r\n  initializeForm() {\r\n    this.addForm = this.fb.group({\r\n      description: ['', [Validators.maxLength(200)]],\r\n      documentSource: ['']\r\n    });\r\n  }\r\n\r\n  resetForm() {\r\n    this.addForm.reset();\r\n    this.selectedFile = null;\r\n    if (this.fileInput) {\r\n      this.fileInput.nativeElement.value = '';\r\n    }\r\n  }\r\n\r\n  onFileSelected(event: any) {\r\n    const file = event.target.files[0];\r\n    if (file) {\r\n      // Validate file type\r\n      if (!this.supportedFileTypes.includes(file.type)) {\r\n        this.showErrorMessage(this.translate('letters.file_format_error'));\r\n        this.resetForm();\r\n        return;\r\n      }\r\n\r\n      // Validate file size\r\n      if (file.size > this.maxFileSize) {\r\n        this.showErrorMessage(this.translate('letters.file_size_error'));\r\n        this.resetForm();\r\n        return;\r\n      }\r\n\r\n      this.selectedFile = file;\r\n    } else {\r\n      this.selectedFile = null;\r\n    }\r\n  }\r\n\r\n  onDragOver(event: DragEvent) {\r\n    event.preventDefault();\r\n    event.stopPropagation();\r\n  }\r\n\r\n  onDragLeave(event: DragEvent) {\r\n    event.preventDefault();\r\n    event.stopPropagation();\r\n  }\r\n\r\n  onDrop(event: DragEvent) {\r\n    event.preventDefault();\r\n    event.stopPropagation();\r\n    \r\n    const files = event.dataTransfer?.files;\r\n    if (files && files.length > 0) {\r\n      const file = files[0];\r\n      \r\n      // Validate file type\r\n      if (!this.supportedFileTypes.includes(file.type)) {\r\n        this.showErrorMessage(this.translate('letters.file_format_error'));\r\n        return;\r\n      }\r\n\r\n      // Validate file size\r\n      if (file.size > this.maxFileSize) {\r\n        this.showErrorMessage(this.translate('letters.file_size_error'));\r\n        return;\r\n      }\r\n\r\n      this.selectedFile = file;\r\n      if (this.fileInput) {\r\n        this.fileInput.nativeElement.files = files;\r\n      }\r\n    }\r\n  }\r\n\r\n  removeFile() {\r\n    this.selectedFile = null;\r\n    if (this.fileInput) {\r\n      this.fileInput.nativeElement.value = '';\r\n    }\r\n  }\r\n\r\n  isFieldValid(field: string) {\r\n    const control = this.addForm.get(field);\r\n    return control?.touched && control?.invalid;\r\n  }\r\n\r\n  hasServerError(field: string) {\r\n    const control = this.addForm.get(field);\r\n    return control?.errors?.['serverError'];\r\n  }\r\n\r\n  getServerErrorMessage(field: string) {\r\n    const control = this.addForm.get(field);\r\n    return control?.errors?.['serverError'] || '';\r\n  }\r\n\r\n  getErrorMessage(field: string) {\r\n    const control = this.addForm.get(field);\r\n    if (!control?.errors) return '';\r\n    \r\n    if (control.errors['required']) {\r\n      return this.translate('common.field_required');\r\n    }\r\n    if (control.errors['maxlength']) {\r\n      const requiredLength = control.errors['maxlength']['requiredLength'];\r\n      return `Maximum length is ${requiredLength} characters`;\r\n    }\r\n    return 'Invalid field';\r\n  }\r\n\r\n  onSubmit() {\r\n    if (!this.selectedFile || !this.currentLetter) {\r\n      this.showErrorMessage(this.translate('letters.file_required'));\r\n      return;\r\n    }\r\n\r\n    if (this.addForm.invalid) {\r\n      this.addForm.markAllAsTouched();\r\n      return;\r\n    }\r\n\r\n    this.isUploading = true;\r\n    const formValue = this.addForm.value;\r\n    \r\n    const attachmentData: AttachmentUploadDto = {\r\n      file: this.selectedFile,\r\n      description: formValue.description || undefined,\r\n      documentSource: formValue.documentSource ? parseInt(formValue.documentSource) : undefined\r\n    };\r\n\r\n    console.log('Uploading attachment:', attachmentData); // Debug log\r\n\r\n    this.lettersService.addAttachment(this.currentLetter.id, attachmentData).subscribe({\r\n      next: (res) => {\r\n        this.isUploading = false;\r\n        this.showSuccessMessage(this.translate('letters.add_attachment_success'));\r\n        this.close();\r\n        this.attachmentAdded.emit(); // Notify parent component\r\n      },\r\n      error: (error) => {\r\n        this.isUploading = false;\r\n        console.error('Error adding attachment:', error);\r\n        this.handleApiErrors(error);\r\n      }\r\n    });\r\n  }\r\n\r\n  private handleApiErrors(error: any) {\r\n    console.log('Full error response:', error); // Debug log\r\n    \r\n    if (error.error?.errors) {\r\n      // Handle validation errors by setting them on form controls\r\n      const errors = error.error.errors;\r\n      console.log('API validation errors:', errors); // Debug log\r\n      \r\n      Object.keys(errors).forEach(fieldName => {\r\n        const control = this.addForm.get(this.getFormFieldName(fieldName));\r\n        if (control) {\r\n          control.setErrors({ serverError: errors[fieldName][0] });\r\n          control.markAsTouched();\r\n        } else {\r\n          console.warn(`Form control not found for field: ${fieldName}`); // Debug log\r\n        }\r\n      });\r\n    } else {\r\n      // Show generic error\r\n      let errorMessage = 'Unknown error occurred';\r\n      if (error.error?.message) {\r\n        errorMessage = error.error.message;\r\n      } else if (error.message) {\r\n        errorMessage = error.message;\r\n      }\r\n      this.showErrorMessage(this.translate('common.error') + ': ' + errorMessage);\r\n    }\r\n  }\r\n\r\n  private getFormFieldName(apiFieldName: string): string {\r\n    // Map API field names (capitalized) to form field names (lowercase)\r\n    const fieldMapping: { [key: string]: string } = {\r\n      'Description': 'description',\r\n      'DocumentSource': 'documentSource'\r\n    };\r\n    return fieldMapping[apiFieldName] || apiFieldName.toLowerCase();\r\n  }\r\n\r\n  translate(key: string): string {\r\n    return this.translationService.translate(key);\r\n  }\r\n\r\n  showSuccessMessage(message: string) {\r\n    const successData = {\r\n      title: this.translate('common.success'),\r\n      message: message,\r\n      confirmText: this.translate('common.ok'),\r\n      cancelText: '',\r\n      type: 'info' as const\r\n    };\r\n    this.confirmationModal.show(successData);\r\n  }\r\n\r\n  showErrorMessage(message: string) {\r\n    const errorData = {\r\n      title: this.translate('common.error'),\r\n      message: message,\r\n      confirmText: this.translate('common.ok'),\r\n      cancelText: '',\r\n      type: 'warning' as const\r\n    };\r\n    this.confirmationModal.show(errorData);\r\n  }\r\n\r\n  formatFileSize(bytes: number): string {\r\n    if (bytes === 0) return '0 Bytes';\r\n    const k = 1024;\r\n    const sizes = ['Bytes', 'KB', 'MB', 'GB'];\r\n    const i = Math.floor(Math.log(bytes) / Math.log(k));\r\n    return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];\r\n  }\r\n\r\n  getFileIcon(fileType: string): string {\r\n    if (fileType.includes('pdf')) return 'fas fa-file-pdf text-danger';\r\n    if (fileType.includes('word') || fileType.includes('document')) return 'fas fa-file-word text-primary';\r\n    if (fileType.includes('excel') || fileType.includes('spreadsheet')) return 'fas fa-file-excel text-success';\r\n    if (fileType.includes('powerpoint') || fileType.includes('presentation')) return 'fas fa-file-powerpoint text-warning';\r\n    if (fileType.includes('image')) return 'fas fa-file-image text-info';\r\n    return 'fas fa-file text-secondary';\r\n  }\r\n}\r\n", "<!-- Add Attachment Modal -->\r\n<div class=\"modal fade\" [class.show]=\"isOpen\" [style.display]=\"isOpen ? 'block' : 'none'\" \r\n     tabindex=\"-1\" role=\"dialog\" [attr.aria-hidden]=\"!isOpen\" (click)=\"onBackdropClick($event)\">\r\n  <div class=\"modal-dialog modal-lg modal-dialog-centered\" role=\"document\">\r\n    <div class=\"modal-content\">\r\n      <div class=\"modal-header bg-info text-white\">\r\n        <h5 class=\"modal-title\">\r\n        {{ translate('letters.add_attachment') }}\r\n        </h5>\r\n      </div>\r\n      \r\n      <form [formGroup]=\"addForm\" (ngSubmit)=\"onSubmit()\">\r\n        <div class=\"modal-body\">\r\n          <!-- Letter Info -->\r\n          <div class=\"alert alert-info\" *ngIf=\"currentLetter\">\r\n            <strong>{{ translate('letters.letter_details') }}:</strong> {{ currentLetter.subject }}\r\n          </div>\r\n\r\n          <div class=\"row g-3\">\r\n            <!-- File Upload Area -->\r\n            <div class=\"col-12\">\r\n              <label class=\"form-label\">{{ translate('letters.file') }} <span class=\"text-danger\">*</span></label>\r\n              \r\n              <!-- File Drop Zone -->\r\n              <div class=\"file-drop-zone\" \r\n                   [class.has-file]=\"selectedFile\"\r\n                   (dragover)=\"onDragOver($event)\"\r\n                   (dragleave)=\"onDragLeave($event)\"\r\n                   (drop)=\"onDrop($event)\"\r\n                   (click)=\"fileInput.click()\">\r\n                \r\n                <div class=\"file-drop-content\" *ngIf=\"!selectedFile\">\r\n                  \r\n                  <h5 class=\"text-muted\">{{ translate('letters.drag_drop_files') }}</h5>\r\n                  <p class=\"text-muted small\">{{ translate('letters.file_requirements') }}</p>\r\n                  <button type=\"button\" class=\"btn btn-outline-primary\">\r\n                    {{ translate('letters.browse_files') }}\r\n                  </button>\r\n                </div>\r\n\r\n                <!-- Selected File Display -->\r\n                <div class=\"selected-file-display\" *ngIf=\"selectedFile\">\r\n                  <div class=\"d-flex align-items-center\">\r\n                    <svg [class]=\"getFileIcon(selectedFile.type) + ' -2x me-3'\"></svg>\r\n                    <div class=\"flex-grow-1\">\r\n                      <h6 class=\"mb-1\">{{ selectedFile.name }}</h6>\r\n                      <small class=\"text-muted\">{{ formatFileSize(selectedFile.size) }}</small>\r\n                    </div>\r\n                    <button type=\"button\" class=\"btn btn-sm btn-outline-danger\" (click)=\"removeFile()\">\r\n                      <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\">\r\n                        <line x1=\"18\" y1=\"6\" x2=\"6\" y2=\"18\"></line>\r\n                        <line x1=\"6\" y1=\"6\" x2=\"18\" y2=\"18\"></line>\r\n                      </svg>\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <!-- Hidden File Input -->\r\n              <input #fileInput type=\"file\" class=\"d-none\" \r\n                     (change)=\"onFileSelected($event)\"\r\n                     accept=\".pdf,.doc,.docx,.xls,.xlsx,.ppt,.pptx,.jpg,.jpeg,.png,.gif\">\r\n            </div>\r\n\r\n            <!-- Description -->\r\n            <div class=\"col-12\">\r\n              <label class=\"form-label\">{{ translate('letters.attachment_description') }}</label>\r\n              <textarea class=\"form-control\" formControlName=\"description\" rows=\"3\" \r\n                        [placeholder]=\"translate('letters.attachment_description_placeholder')\"\r\n                        [class.is-invalid]=\"isFieldValid('description') || hasServerError('description')\"></textarea>\r\n              <div class=\"invalid-feedback\" *ngIf=\"isFieldValid('description')\">\r\n                {{ getErrorMessage('description') }}\r\n              </div>\r\n              <div class=\"invalid-feedback\" *ngIf=\"hasServerError('description')\">\r\n                {{ getServerErrorMessage('description') }}\r\n              </div>\r\n            </div>\r\n\r\n            <!-- Document Source (Optional) -->\r\n            <div class=\"col-12\">\r\n              <label class=\"form-label\">{{ translate('letters.document_source') }}</label>\r\n              <select class=\"form-select\" formControlName=\"documentSource\" \r\n                      [class.is-invalid]=\"isFieldValid('documentSource') || hasServerError('documentSource')\">\r\n                <option value=\"\">{{ translate('letters.select_document_source') }}</option>\r\n                <option value=\"1\">{{ translate('letters.document_source_1') }}</option>\r\n                <option value=\"2\">{{ translate('letters.document_source_2') }}</option>\r\n                <option value=\"3\">{{ translate('letters.document_source_3') }}</option>\r\n              </select>\r\n              <div class=\"invalid-feedback\" *ngIf=\"isFieldValid('documentSource')\">\r\n                {{ getErrorMessage('documentSource') }}\r\n              </div>\r\n              <div class=\"invalid-feedback\" *ngIf=\"hasServerError('documentSource')\">\r\n                {{ getServerErrorMessage('documentSource') }}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        \r\n        <div class=\"modal-footer\">\r\n          <button type=\"button\" class=\"btn btn-secondary\" (click)=\"close()\" [disabled]=\"isUploading\">\r\n            {{ translate('common.cancel') }}\r\n          </button>\r\n          <button type=\"submit\" class=\"btn btn-info\" [disabled]=\"!selectedFile || isUploading\">\r\n            \r\n            <span class=\"spinner-border spinner-border-sm me-2\" *ngIf=\"isUploading\"></span>\r\n            {{ isUploading ? translate('letters.uploading') : translate('letters.add_attachment') }}\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<!-- Modal Backdrop -->\r\n<div class=\"modal-backdrop fade\" [class.show]=\"isOpen\" *ngIf=\"isOpen\"></div>\r\n\r\n<!-- Confirmation Modal -->\r\n<app-letters-confirmation-modal #confirmationModal></app-letters-confirmation-modal>\r\n", "import { AfterViewInit, Component, ElementRef, ViewChild, EventEmitter, Output } from '@angular/core';\r\nimport { LettersService } from '../../../services/letters.service';\r\nimport { AbstractControl, FormBuilder, FormGroup, ValidationErrors, Validators } from '@angular/forms';\r\nimport { TranslationService } from '../../../services/translation.service';\r\nimport { LettersConfirmationModalComponent } from '../letters-confirmation-modal/letters-confirmation-modal.component';\r\nimport { LetterItem, LetterAttachment } from '../../../models/letter.model';\r\n\r\n@Component({\r\n  selector: 'app-edit-attachment',\r\n  standalone: false,\r\n  templateUrl: './edit-attachment.html',\r\n  styleUrl: './edit-attachment.css'\r\n})\r\nexport class EditAttachment implements AfterViewInit {\r\n  @ViewChild('confirmationModal') confirmationModal!: LettersConfirmationModalComponent;\r\n  @Output() attachmentUpdated = new EventEmitter<void>();\r\n  \r\n  // Custom modal properties\r\n  isOpen = false;\r\n  currentLetter: LetterItem | null = null;\r\n  currentAttachment: LetterAttachment | null = null;\r\n  isUpdating = false;\r\n  \r\n  editForm!: FormGroup;\r\n  \r\n  constructor(\r\n    private lettersService: LettersService,\r\n    private fb: FormBuilder,\r\n    private translationService: TranslationService\r\n  ) {}\r\n\r\n  ngAfterViewInit(): void {\r\n    // No Bootstrap modal needed\r\n  }\r\n  \r\n  open(letter: LetterItem, attachment: LetterAttachment) { \r\n    this.currentLetter = letter;\r\n    this.currentAttachment = attachment;\r\n    this.isOpen = true;\r\n    this.initializeForm();\r\n    this.populateForm(attachment);\r\n  }\r\n  \r\n  close() { \r\n    this.isOpen = false;\r\n    this.currentLetter = null;\r\n    this.currentAttachment = null;\r\n    this.isUpdating = false;\r\n    this.editForm.reset();\r\n  }\r\n\r\n  // Handle backdrop click\r\n  onBackdropClick(event: Event) {\r\n    if (event.target === event.currentTarget) {\r\n      this.close();\r\n    }\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.initializeForm();\r\n  }\r\n\r\n  initializeForm() {\r\n    this.editForm = this.fb.group({\r\n      description: ['', [Validators.maxLength(200)]],\r\n      documentSource: ['']\r\n    });\r\n  }\r\n\r\n  populateForm(attachment: LetterAttachment) {\r\n    this.editForm.patchValue({\r\n      description: attachment.description || '',\r\n      documentSource: attachment.documentSource || ''\r\n    });\r\n  }\r\n\r\n  isFieldValid(field: string) {\r\n    const control = this.editForm.get(field);\r\n    return control?.touched && control?.invalid;\r\n  }\r\n\r\n  hasServerError(field: string) {\r\n    const control = this.editForm.get(field);\r\n    return control?.errors?.['serverError'];\r\n  }\r\n\r\n  getServerErrorMessage(field: string) {\r\n    const control = this.editForm.get(field);\r\n    return control?.errors?.['serverError'] || '';\r\n  }\r\n\r\n  getErrorMessage(field: string) {\r\n    const control = this.editForm.get(field);\r\n    if (!control?.errors) return '';\r\n    \r\n    if (control.errors['required']) {\r\n      return this.translate('common.field_required');\r\n    }\r\n    if (control.errors['maxlength']) {\r\n      const requiredLength = control.errors['maxlength']['requiredLength'];\r\n      return `Maximum length is ${requiredLength} characters`;\r\n    }\r\n    return 'Invalid field';\r\n  }\r\n\r\n  onSubmit() {\r\n    if (this.editForm.invalid || !this.currentLetter || !this.currentAttachment) {\r\n      this.editForm.markAllAsTouched();\r\n      return;\r\n    }\r\n\r\n    this.isUpdating = true;\r\n    const formValue = this.editForm.value;\r\n    \r\n    const attachmentData = {\r\n      description: formValue.description || null,\r\n      documentSource: formValue.documentSource ? parseInt(formValue.documentSource) : null\r\n    };\r\n\r\n    console.log('Updating attachment:', attachmentData); // Debug log\r\n\r\n    this.lettersService.updateAttachment(\r\n      this.currentLetter.id, \r\n      this.currentAttachment.id, \r\n      attachmentData\r\n    ).subscribe({\r\n      next: (res) => {\r\n        this.isUpdating = false;\r\n        this.showSuccessMessage(this.translate('letters.edit_attachment_success'));\r\n        this.close();\r\n        this.attachmentUpdated.emit(); // Notify parent component\r\n      },\r\n      error: (error) => {\r\n        this.isUpdating = false;\r\n        console.error('Error updating attachment:', error);\r\n        this.handleApiErrors(error);\r\n      }\r\n    });\r\n  }\r\n\r\n  private handleApiErrors(error: any) {\r\n    console.log('Full error response:', error); // Debug log\r\n    \r\n    if (error.error?.errors) {\r\n      // Handle validation errors by setting them on form controls\r\n      const errors = error.error.errors;\r\n      console.log('API validation errors:', errors); // Debug log\r\n      \r\n      Object.keys(errors).forEach(fieldName => {\r\n        const control = this.editForm.get(this.getFormFieldName(fieldName));\r\n        if (control) {\r\n          control.setErrors({ serverError: errors[fieldName][0] });\r\n          control.markAsTouched();\r\n        } else {\r\n          console.warn(`Form control not found for field: ${fieldName}`); // Debug log\r\n        }\r\n      });\r\n    } else {\r\n      // Show generic error\r\n      let errorMessage = 'Unknown error occurred';\r\n      if (error.error?.message) {\r\n        errorMessage = error.error.message;\r\n      } else if (error.message) {\r\n        errorMessage = error.message;\r\n      }\r\n      this.showErrorMessage(this.translate('common.error') + ': ' + errorMessage);\r\n    }\r\n  }\r\n\r\n  private getFormFieldName(apiFieldName: string): string {\r\n    // Map API field names (capitalized) to form field names (lowercase)\r\n    const fieldMapping: { [key: string]: string } = {\r\n      'Description': 'description',\r\n      'DocumentSource': 'documentSource'\r\n    };\r\n    return fieldMapping[apiFieldName] || apiFieldName.toLowerCase();\r\n  }\r\n\r\n  translate(key: string): string {\r\n    return this.translationService.translate(key);\r\n  }\r\n\r\n  showSuccessMessage(message: string) {\r\n    const successData = {\r\n      title: this.translate('common.success'),\r\n      message: message,\r\n      confirmText: this.translate('common.ok'),\r\n      cancelText: '',\r\n      type: 'info' as const\r\n    };\r\n    this.confirmationModal.show(successData);\r\n  }\r\n\r\n  showErrorMessage(message: string) {\r\n    const errorData = {\r\n      title: this.translate('common.error'),\r\n      message: message,\r\n      confirmText: this.translate('common.ok'),\r\n      cancelText: '',\r\n      type: 'warning' as const\r\n    };\r\n    this.confirmationModal.show(errorData);\r\n  }\r\n\r\n  getFileIcon(fileType: string | null): string {\r\n    if (!fileType) return 'fas fa-file text-secondary';\r\n    if (fileType.includes('pdf')) return 'fas fa-file-pdf text-danger';\r\n    if (fileType.includes('word') || fileType.includes('document')) return 'fas fa-file-word text-primary';\r\n    if (fileType.includes('excel') || fileType.includes('spreadsheet')) return 'fas fa-file-excel text-success';\r\n    if (fileType.includes('powerpoint') || fileType.includes('presentation')) return 'fas fa-file-powerpoint text-warning';\r\n    if (fileType.includes('image')) return 'fas fa-file-image text-info';\r\n    return 'fas fa-file text-secondary';\r\n  }\r\n\r\n  formatDate(dateString: string): string {\r\n    if (!dateString || dateString === '0001-01-01T00:00:00') return 'N/A';\r\n    const date = new Date(dateString);\r\n    return date.toLocaleDateString() + ' ' + date.toLocaleTimeString();\r\n  }\r\n}\r\n", "<!-- Edit Attachment Modal -->\r\n<div class=\"modal fade\" [class.show]=\"isOpen\" [style.display]=\"isOpen ? 'block' : 'none'\" \r\n     tabindex=\"-1\" role=\"dialog\" [attr.aria-hidden]=\"!isOpen\" (click)=\"onBackdropClick($event)\">\r\n  <div class=\"modal-dialog modal-lg modal-dialog-centered\" role=\"document\">\r\n    <div class=\"modal-content\">\r\n      <div class=\"modal-header bg-warning text-dark\">\r\n        <h5 class=\"modal-title\">\r\n          {{ translate('letters.edit_attachment') }}\r\n        </h5>\r\n        <button type=\"button\" class=\"btn-close\" (click)=\"close()\" aria-label=\"Close\"></button>\r\n      </div>\r\n      \r\n      <form [formGroup]=\"editForm\" (ngSubmit)=\"onSubmit()\">\r\n        <div class=\"modal-body\">\r\n          <!-- Letter Info -->\r\n          <div class=\"alert alert-info\" *ngIf=\"currentLetter\">\r\n            \r\n            <strong>{{ translate('letters.letter_details') }}:</strong> {{ currentLetter.subject }}\r\n          </div>\r\n\r\n          <!-- Attachment Info -->\r\n          <div class=\"attachment-info\" *ngIf=\"currentAttachment\">\r\n            <div class=\"card\">\r\n              <div class=\"card-body\">\r\n                <div class=\"d-flex align-items-center\">\r\n                  <i [class]=\"getFileIcon(currentAttachment.fileType) + ' fa-2x me-3'\"></i>\r\n                  <div class=\"flex-grow-1\">\r\n                    <h6 class=\"mb-1\">{{ currentAttachment.fileName || 'Unnamed file' }}</h6>\r\n                    <small class=\"text-muted\">\r\n                      {{ currentAttachment.uploadedByName || 'Unknown' }} | \r\n                      {{ formatDate(currentAttachment.uploadedAt) }}\r\n                    </small>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"row g-3 mt-3\">\r\n            <!-- Description -->\r\n            <div class=\"col-12\">\r\n              <label class=\"form-label\">{{ translate('letters.attachment_description') }}</label>\r\n              <textarea class=\"form-control\" formControlName=\"description\" rows=\"3\" \r\n                        [placeholder]=\"translate('letters.attachment_description_placeholder')\"\r\n                        [class.is-invalid]=\"isFieldValid('description') || hasServerError('description')\"></textarea>\r\n              <div class=\"invalid-feedback\" *ngIf=\"isFieldValid('description')\">\r\n                {{ getErrorMessage('description') }}\r\n              </div>\r\n              <div class=\"invalid-feedback\" *ngIf=\"hasServerError('description')\">\r\n                {{ getServerErrorMessage('description') }}\r\n              </div>\r\n            </div>\r\n\r\n            <!-- Document Source -->\r\n            <div class=\"col-12\">\r\n              <label class=\"form-label\">{{ translate('letters.document_source') }}</label>\r\n              <select class=\"form-select\" formControlName=\"documentSource\" \r\n                      [class.is-invalid]=\"isFieldValid('documentSource') || hasServerError('documentSource')\">\r\n                <option value=\"\">{{ translate('letters.select_document_source') }}</option>\r\n                <option value=\"1\">{{ translate('letters.document_source_1') }}</option>\r\n                <option value=\"2\">{{ translate('letters.document_source_2') }}</option>\r\n                <option value=\"3\">{{ translate('letters.document_source_3') }}</option>\r\n              </select>\r\n              <div class=\"invalid-feedback\" *ngIf=\"isFieldValid('documentSource')\">\r\n                {{ getErrorMessage('documentSource') }}\r\n              </div>\r\n              <div class=\"invalid-feedback\" *ngIf=\"hasServerError('documentSource')\">\r\n                {{ getServerErrorMessage('documentSource') }}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        \r\n        <div class=\"modal-footer\">\r\n          <button type=\"button\" class=\"btn btn-secondary\" (click)=\"close()\" [disabled]=\"isUpdating\">\r\n            {{ translate('common.cancel') }}\r\n          </button>\r\n          <button type=\"submit\" class=\"btn btn-warning\" [disabled]=\"editForm.invalid || isUpdating\">\r\n            \r\n            <span class=\"spinner-border spinner-border-sm me-2\" *ngIf=\"isUpdating\"></span>\r\n            {{ isUpdating ? translate('common.updating') : translate('letters.update') }}\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<!-- Modal Backdrop -->\r\n<div class=\"modal-backdrop fade\" [class.show]=\"isOpen\" *ngIf=\"isOpen\"></div>\r\n\r\n<!-- Confirmation Modal -->\r\n<app-letters-confirmation-modal #confirmationModal></app-letters-confirmation-modal>\r\n", "import { Component, OnInit, OnDestroy, ViewChild } from '@angular/core';\r\nimport { LettersService } from '../../../services/letters.service';\r\nimport { LetterItem, LetterModel, LetterDirection, LetterConfidentiality, LetterStatus, LetterSearchParams } from '../../../models/letter.model';\r\nimport { TranslationService } from '../../../services/translation.service';\r\nimport { LettersConfirmationModalComponent } from '../letters-confirmation-modal/letters-confirmation-modal.component';\r\nimport { AddLetter } from '../add-letter/add-letter';\r\nimport { EditLetter } from '../edit-letter/edit-letter';\r\nimport { AddAttachment } from '../add-attachment/add-attachment';\r\nimport { EditAttachment } from '../edit-attachment/edit-attachment';\r\nimport { Subject } from 'rxjs';\r\nimport { takeUntil } from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'app-letters-list',\r\n  standalone: false,\r\n  templateUrl: './letters-list.html',\r\n  styleUrl: './letters-list.css'\r\n})\r\nexport class LettersList implements OnInit, OnDestroy {\r\n  @ViewChild('addLetterModal') addLetterModal!: AddLetter;\r\n  @ViewChild('editLetterModal') editLetterModal!: EditLetter;\r\n  @ViewChild('addAttachmentModal') addAttachmentModal!: AddAttachment;\r\n  @ViewChild('editAttachmentModal') editAttachmentModal!: EditAttachment;\r\n  @ViewChild('confirmationModal') confirmationModal!: LettersConfirmationModalComponent;\r\n  \r\n  allLetters: LetterItem[] = [];\r\n  filteredLetters: LetterItem[] = [];\r\n  searchTerm: string = '';\r\n  isLoading: boolean = false;\r\n  isDeleting: boolean = false;\r\n  deletingLetterId: number | null = null;\r\n  expandedAttachments: { [key: number]: boolean } = {};\r\n  private destroy$ = new Subject<void>();\r\n  \r\n  // Pagination\r\n  currentPage = 1;\r\n  pageSize = 10;\r\n  totalCount = 0;\r\n  \r\n  // Filters\r\n  selectedDirection: number | null = null;\r\n  selectedConfidentiality: number | null = null;\r\n  selectedStatus: number | null = null;\r\n  fromDate: string = '';\r\n  toDate: string = '';\r\n\r\n  constructor(\r\n    private lettersService: LettersService,\r\n    private translationService: TranslationService\r\n  ) {}\r\n\r\n  readonly directions: Record<number, string> = {\r\n    0: \"Incoming\",\r\n    1: \"Outgoing\"\r\n  }\r\n\r\n  readonly confidentialities: Record<number, string> = {\r\n    0: \"Public\",\r\n    1: \"Restricted\", \r\n    2: \"Secret\"\r\n  }\r\n\r\n  readonly statuses: Record<number, string> = {\r\n    0: \"Draft\",\r\n    1: \"Approved\",\r\n    2: \"Sent\",\r\n    3: \"Archived\"\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.loadLetters();\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.destroy$.next();\r\n    this.destroy$.complete();\r\n  }\r\n\r\n  loadLetters() {\r\n    this.isLoading = true;\r\n    \r\n    const params: LetterSearchParams = {\r\n      search: this.searchTerm || undefined,\r\n      PageSize: this.pageSize,\r\n      PageNumber: this.currentPage,\r\n      Direction: this.selectedDirection || undefined,\r\n      Confidentiality: this.selectedConfidentiality || undefined\r\n    };\r\n    \r\n    this.lettersService.getAllLetters(params).subscribe({\r\n      next: (res) => {\r\n        console.log('Letters loaded:', res.data.items);\r\n        this.allLetters = res.data.items;\r\n        this.totalCount = res.data.totalCount;\r\n        this.currentPage = res.data.page;\r\n        this.pageSize = res.data.pageSize;\r\n        this.filteredLetters = [...this.allLetters];\r\n        this.isLoading = false;\r\n      },\r\n      error: (error) => {\r\n        console.error('Error loading letters:', error);\r\n        this.isLoading = false;\r\n      }\r\n    });\r\n  }\r\n\r\n  onSearchChange() {\r\n    this.currentPage = 1;\r\n    this.loadLetters();\r\n  }\r\n\r\n  onSearchClick() {\r\n    this.currentPage = 1;\r\n    this.loadLetters();\r\n  }\r\n\r\n  onFilterChange() {\r\n    this.currentPage = 1;\r\n    this.loadLetters();\r\n  }\r\n\r\n  onPageChange(page: number) {\r\n    this.currentPage = page;\r\n    this.loadLetters();\r\n  }\r\n\r\n  onPageSizeChange() {\r\n    this.currentPage = 1;\r\n    this.loadLetters();\r\n  }\r\n\r\n  clearFilters() {\r\n    this.searchTerm = '';\r\n    this.selectedDirection = null;\r\n    this.selectedConfidentiality = null;\r\n    this.selectedStatus = null;\r\n    this.fromDate = '';\r\n    this.toDate = '';\r\n    this.currentPage = 1;\r\n    this.loadLetters();\r\n  }\r\n\r\n  getDirectionLabel(direction: number): string {\r\n    return this.directions[direction] || 'Unknown';\r\n  }\r\n\r\n  getConfidentialityLabel(confidentiality: number): string {\r\n    return this.confidentialities[confidentiality] || 'Unknown';\r\n  }\r\n\r\n  getStatusLabel(status: number): string {\r\n    return this.statuses[status] || 'Unknown';\r\n  }\r\n\r\n  getAttachmentsDisplay(attachments: any[]): string {\r\n    if (!attachments || attachments.length === 0) {\r\n      return '';\r\n    }\r\n    \r\n    const displayAttachments = attachments.slice(0, 2);\r\n    const attachmentStrings = displayAttachments.map(attachment => \r\n      this.getAttachmentDisplayName(attachment)\r\n    );\r\n    \r\n    if (attachments.length > 2) {\r\n      return attachmentStrings.join(', ') + ` +${attachments.length - 2} more`;\r\n    }\r\n    \r\n    return attachmentStrings.join(', ');\r\n  }\r\n\r\n  getAttachmentDisplayName(attachment: any): string {\r\n    if (attachment.fileName && attachment.fileName.trim()) {\r\n      return attachment.fileName;\r\n    }\r\n    \r\n    // Try to extract filename from filePath if fileName is not available\r\n    if (attachment.filePath) {\r\n      const pathParts = attachment.filePath.split('/');\r\n      const fileName = pathParts[pathParts.length - 1];\r\n      if (fileName && fileName.trim()) {\r\n        return fileName;\r\n      }\r\n    }\r\n    \r\n    // Fallback to a generic name\r\n    return 'Document';\r\n  }\r\n\r\n  openAddModal() {\r\n    this.addLetterModal.open();\r\n  }\r\n\r\n  async deleteLetter(id: number, subject: string) {\r\n    // Check if letter is already being deleted\r\n    if (this.isDeleting || this.deletingLetterId === id) {\r\n      console.log('Delete operation already in progress for letter:', id);\r\n      return;\r\n    }\r\n\r\n    // Check if letter still exists in the list\r\n    const letterExists = this.allLetters.some(l => l.id === id);\r\n    if (!letterExists) {\r\n      console.log('Letter not found in list:', id);\r\n      return;\r\n    }\r\n\r\n    const confirmData = {\r\n      title: this.translationService.translate('letters.delete_letter'),\r\n      message: this.translationService.translate('letters.confirm_delete_letter'),\r\n      confirmText: this.translationService.translate('common.delete'),\r\n      cancelText: this.translationService.translate('common.cancel'),\r\n      type: 'delete' as const\r\n    };\r\n\r\n    try {\r\n      const confirmed = await this.confirmationModal.show(confirmData);\r\n      \r\n      if (!confirmed) {\r\n        console.log('User cancelled deletion');\r\n        return;\r\n      }\r\n\r\n      // Double-check before proceeding with deletion\r\n      if (this.isDeleting || this.deletingLetterId === id) {\r\n        console.log('Delete operation already in progress, skipping');\r\n        return;\r\n      }\r\n\r\n      // User confirmed deletion\r\n      this.isDeleting = true;\r\n      this.deletingLetterId = id;\r\n      \r\n      console.log('Starting deletion of letter:', id);\r\n      \r\n      this.lettersService.deleteLetter(id).pipe(\r\n        takeUntil(this.destroy$)\r\n      ).subscribe({\r\n        next: (res) => {\r\n          console.log('Letter deleted successfully:', id);\r\n          this.allLetters = this.allLetters.filter(l => l.id !== id);\r\n          this.filteredLetters = this.filteredLetters.filter(l => l.id !== id);\r\n          this.showSuccessMessage(this.translationService.translate('letters.delete_letter_success'));\r\n          this.isDeleting = false;\r\n          this.deletingLetterId = null;\r\n        },\r\n        error: (error) => {\r\n          console.error('Error deleting letter:', error);\r\n          const errorMessage = error.error?.message || error.message || 'Unknown error occurred';\r\n          this.showErrorMessage(this.translationService.translate('common.error') + ': ' + errorMessage);\r\n          this.isDeleting = false;\r\n          this.deletingLetterId = null;\r\n        }\r\n      });\r\n    } catch (error) {\r\n      console.error('Error in delete confirmation:', error);\r\n      this.isDeleting = false;\r\n      this.deletingLetterId = null;\r\n    }\r\n  }\r\n\r\n  async deleteAttachment(letterId: number, attachmentId: number, fileName: string) {\r\n    // Check if already deleting\r\n    if (this.isDeleting) {\r\n      return;\r\n    }\r\n\r\n    const confirmData = {\r\n      title: this.translationService.translate('letters.delete_attachment'),\r\n      message: this.translationService.translate('letters.confirm_delete_attachment'),\r\n      confirmText: this.translationService.translate('common.delete'),\r\n      cancelText: this.translationService.translate('common.cancel'),\r\n      type: 'delete' as const\r\n    };\r\n\r\n    try {\r\n      const confirmed = await this.confirmationModal.show(confirmData);\r\n      \r\n      if (!confirmed) {\r\n        console.log('User cancelled attachment deletion');\r\n        return;\r\n      }\r\n\r\n      // User confirmed deletion\r\n      this.isDeleting = true;\r\n      this.lettersService.deleteAttachment(letterId, attachmentId).pipe(\r\n        takeUntil(this.destroy$)\r\n      ).subscribe({\r\n        next: (res) => {\r\n          // Update the letter's attachments\r\n          const letter = this.allLetters.find(l => l.id === letterId);\r\n          if (letter) {\r\n            letter.attachments = letter.attachments.filter(a => a.id !== attachmentId);\r\n          }\r\n          const filteredLetter = this.filteredLetters.find(l => l.id === letterId);\r\n          if (filteredLetter) {\r\n            filteredLetter.attachments = filteredLetter.attachments.filter(a => a.id !== attachmentId);\r\n          }\r\n          this.showSuccessMessage(this.translationService.translate('letters.delete_attachment_success'));\r\n          this.isDeleting = false;\r\n        },\r\n        error: (error) => {\r\n          console.error('Error deleting attachment:', error);\r\n          const errorMessage = error.error?.message || error.message || 'Unknown error occurred';\r\n          this.showErrorMessage(this.translationService.translate('common.error') + ': ' + errorMessage);\r\n          this.isDeleting = false;\r\n        }\r\n      });\r\n    } catch (error) {\r\n      console.error('Error in attachment delete confirmation:', error);\r\n      this.isDeleting = false;\r\n    }\r\n  }\r\n\r\n  showSuccessMessage(message: string) {\r\n    const successData = {\r\n      title: this.translationService.translate('common.success'),\r\n      message: message,\r\n      confirmText: this.translationService.translate('common.ok'),\r\n      cancelText: '',\r\n      type: 'info' as const\r\n    };\r\n    this.confirmationModal.show(successData);\r\n  }\r\n\r\n  showErrorMessage(message: string) {\r\n    const errorData = {\r\n      title: this.translationService.translate('common.error'),\r\n      message: message,\r\n      confirmText: this.translationService.translate('common.ok'),\r\n      cancelText: '',\r\n      type: 'warning' as const\r\n    };\r\n    this.confirmationModal.show(errorData);\r\n  }\r\n\r\n  toggleAttachments(letterId: number) {\r\n    this.expandedAttachments[letterId] = !this.expandedAttachments[letterId];\r\n  }\r\n\r\n  editLetter(letter: LetterItem) {\r\n    // Open edit modal with letter data\r\n    this.editLetterModal.open(letter);\r\n  }\r\n\r\n  addAttachment(letter: LetterItem) {\r\n    // Open add attachment modal\r\n    this.addAttachmentModal.open(letter);\r\n  }\r\n\r\n  editAttachment(letter: LetterItem, attachment: any) {\r\n    // Open edit attachment modal\r\n    this.editAttachmentModal.open(letter, attachment);\r\n  }\r\n\r\n  showAttachmentDetails(letterId: number, attachment: any) {\r\n    // Get attachment details from API\r\n    this.lettersService.getLetterAttachments(letterId).subscribe({\r\n      next: (res) => {\r\n        if (res.success && res.data) {\r\n          const attachmentDetails = res.data.find((a: any) => a.id === attachment.id);\r\n          if (attachmentDetails) {\r\n            this.showAttachmentDetailsModal(attachmentDetails);\r\n          }\r\n        }\r\n      },\r\n      error: (error) => {\r\n        console.error('Error loading attachment details:', error);\r\n        this.showErrorMessage(this.translationService.translate('common.error') + ': ' + (error.error?.message || error.message || 'Unknown error occurred'));\r\n      }\r\n    });\r\n  }\r\n\r\n  showAttachmentDetailsModal(attachment: any) {\r\n    const detailsData = {\r\n      title: this.translationService.translate('letters.attachment_details'),\r\n      message: `\r\n        <div class=\"attachment-details\">\r\n          <div class=\"row\">\r\n            <div class=\"col-md-6\">\r\n              <p><strong>${this.translationService.translate('letters.file_name')}:</strong> ${attachment.fileName || 'N/A'}</p>\r\n              <p><strong>${this.translationService.translate('letters.file_type')}:</strong> ${attachment.fileType || 'N/A'}</p>\r\n              <p><strong>${this.translationService.translate('letters.uploaded_by')}:</strong> ${attachment.uploadedByName || 'N/A'}</p>\r\n            </div>\r\n            <div class=\"col-md-6\">\r\n              <p><strong>${this.translationService.translate('letters.uploaded_at')}:</strong> ${this.formatDate(attachment.uploadedAt)}</p>\r\n              <p><strong>${this.translationService.translate('letters.attachment_description')}:</strong> ${attachment.description || 'N/A'}</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      `,\r\n      confirmText: this.translationService.translate('common.close'),\r\n      cancelText: '',\r\n      type: 'info' as const\r\n    };\r\n    this.confirmationModal.show(detailsData);\r\n  }\r\n\r\n  translate(key: string): string {\r\n    return this.translationService.translate(key);\r\n  }\r\n\r\n  isRTL(): boolean {\r\n    return this.translationService.isRTL();\r\n  }\r\n\r\n  get totalPages(): number {\r\n    return Math.ceil(this.totalCount / this.pageSize);\r\n  }\r\n\r\n  get pages(): number[] {\r\n    const pages: number[] = [];\r\n    const maxVisiblePages = 5;\r\n    \r\n    if (this.totalPages === 0) {\r\n      pages.push(1);\r\n      return pages;\r\n    }\r\n    \r\n    let startPage = Math.max(1, this.currentPage - Math.floor(maxVisiblePages / 2));\r\n    let endPage = Math.min(this.totalPages, startPage + maxVisiblePages - 1);\r\n    \r\n    if (endPage - startPage + 1 < maxVisiblePages) {\r\n      startPage = Math.max(1, endPage - maxVisiblePages + 1);\r\n    }\r\n    \r\n    for (let i = startPage; i <= endPage; i++) {\r\n      pages.push(i);\r\n    }\r\n    \r\n    return pages;\r\n  }\r\n\r\n  get Math() {\r\n    return Math;\r\n  }\r\n\r\n  formatDate(dateString: string): string {\r\n    if (!dateString) return '';\r\n    const date = new Date(dateString);\r\n    return date.toLocaleDateString();\r\n  }\r\n\r\n  getDirectionBadgeClass(direction: number): string {\r\n    return direction === LetterDirection.In ? 'bg-primary' : 'bg-success';\r\n  }\r\n\r\n  getConfidentialityBadgeClass(confidentiality: number): string {\r\n    switch (confidentiality) {\r\n      case LetterConfidentiality.Public:\r\n        return 'bg-success';\r\n      case LetterConfidentiality.Restricted:\r\n        return 'bg-warning';\r\n      case LetterConfidentiality.Secret:\r\n        return 'bg-danger';\r\n      default:\r\n        return 'bg-secondary';\r\n    }\r\n  }\r\n\r\n  getStatusBadgeClass(status: number): string {\r\n    switch (status) {\r\n      case LetterStatus.Draft:\r\n        return 'bg-secondary';\r\n      case LetterStatus.Approved:\r\n        return 'bg-info';\r\n      case LetterStatus.Sent:\r\n        return 'bg-success';\r\n      case LetterStatus.Archived:\r\n        return 'bg-dark';\r\n      default:\r\n        return 'bg-secondary';\r\n    }\r\n  }\r\n}\r\n", "<div class=\"letters-container rounded-5 custom-scrollbar\" [dir]=\"isRTL() ? 'rtl' : 'ltr'\">\r\n  <!-- Header Section -->\r\n  <div class=\"letters-header mb-4\">\r\n    <div class=\"d-flex justify-content-between align-items-center\">\r\n      <h1 class=\"letters-title\">{{ translate('letters.title') }}</h1>\r\n      <div class=\"d-flex gap-2\">\r\n        <button class=\"btn btn-primary\" (click)=\"openAddModal()\">\r\n          <i class=\"bi bi-plus-circle me-2\"></i>\r\n          {{ translate('letters.add_letter') }}\r\n        </button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <!-- Search and Filters -->\r\n  <div class=\"search-section mb-4\">\r\n    <div class=\"row\">\r\n      <div class=\"col-md-5\">\r\n        <div class=\"search-input-wrapper\">\r\n          <i class=\"bi bi-search search-icon\"></i>\r\n          <input \r\n            type=\"text\" \r\n            class=\"form-control search-input\" \r\n            [placeholder]=\"translate('letters.search_letters')\"\r\n            [(ngModel)]=\"searchTerm\"\r\n            (keyup.enter)=\"onSearchClick()\"\r\n          >\r\n        </div>\r\n      </div>\r\n      <div class=\"col-md-2\">\r\n        <button class=\"btn btn-primary w-100\" (click)=\"onSearchClick()\">\r\n          <i class=\"bi bi-search me-2\"></i>\r\n          {{ translate('common.search') }}\r\n        </button>\r\n      </div>\r\n      <div class=\"col-md-2\">\r\n        <select \r\n          class=\"form-control\" \r\n          [(ngModel)]=\"selectedDirection\" \r\n          (change)=\"onFilterChange()\"\r\n        >\r\n          <option [value]=\"null\">{{ translate('letters.all_directions') }}</option>\r\n          <option [value]=\"0\">{{ translate('letters.directions.0') }}</option>\r\n          <option [value]=\"1\">{{ translate('letters.directions.1') }}</option>\r\n        </select>\r\n      </div>\r\n      <div class=\"col-md-2\">\r\n        <select \r\n          class=\"form-control\" \r\n          [(ngModel)]=\"selectedConfidentiality\" \r\n          (change)=\"onFilterChange()\"\r\n        >\r\n          <option [value]=\"null\">{{ translate('letters.all_confidentialities') }}</option>\r\n          <option [value]=\"0\">{{ translate('letters.confidentialities.0') }}</option>\r\n          <option [value]=\"1\">{{ translate('letters.confidentialities.1') }}</option>\r\n          <option [value]=\"2\">{{ translate('letters.confidentialities.2') }}</option>\r\n        </select>\r\n      </div>\r\n      <div class=\"col-md-1\">\r\n        <button class=\"btn btn-outline-secondary w-100\" (click)=\"clearFilters()\">\r\n          <i class=\"bi bi-x-circle me-2\"></i>\r\n          {{ translate('common.clear') }}\r\n        </button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <!-- Loading State -->\r\n  <div class=\"row\" *ngIf=\"isLoading\">\r\n    <div class=\"col-12\">\r\n      <div class=\"text-center py-5\">\r\n        <div class=\"spinner-border text-primary\" role=\"status\">\r\n          <span class=\"visually-hidden\">{{ translate('letters.loading_letters') }}</span>\r\n        </div>\r\n        <p class=\"mt-3 text-muted\">{{ translate('letters.loading_letters') }}</p>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <!-- Letters List -->\r\n  <div class=\"row\" *ngIf=\"!isLoading\">\r\n    <div class=\"col-12\">\r\n      <!-- No Letters Found -->\r\n      <div class=\"text-center py-5\" *ngIf=\"filteredLetters.length === 0\">\r\n        <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\">\r\n          <path d=\"M14.5 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V7.5L14.5 2z\"></path>\r\n          <polyline points=\"14,2 14,8 20,8\"></polyline>\r\n        </svg>\r\n        <h4 class=\"text-muted\">{{ translate('letters.no_letters_found') }}</h4>\r\n        <p class=\"text-muted\">{{ translate('letters.get_started_message') }}</p>\r\n        <button class=\"btn btn-primary\" (click)=\"openAddModal()\">\r\n          {{ translate('letters.add_letter') }}\r\n        </button>\r\n      </div>\r\n\r\n      <!-- Letters Cards -->\r\n      <div class=\"row g-4\" *ngIf=\"filteredLetters.length > 0\">\r\n        <div class=\"col-lg-6 col-xl-4\" *ngFor=\"let letter of filteredLetters\">\r\n          <div class=\"card h-100 shadow-sm\">\r\n            <div class=\"card-header d-flex justify-content-between align-items-center\">\r\n              <div class=\"d-flex gap-2\">\r\n                <span class=\"badge\" [class]=\"getDirectionBadgeClass(letter.direction)\">\r\n                  {{ translate('letters.directions.' + letter.direction) }}\r\n                </span>\r\n                <span class=\"badge\" [class]=\"getConfidentialityBadgeClass(letter.confidentiality)\">\r\n                  {{ translate('letters.confidentialities.' + letter.confidentiality) }}\r\n                </span>\r\n                <span class=\"badge\" [class]=\"getStatusBadgeClass(letter.status || 0)\" *ngIf=\"letter.status !== undefined\">\r\n                  {{ translate('letters.statuses.' + letter.status) }}\r\n                </span>\r\n              </div>\r\n              <div class=\"d-flex gap-2\">\r\n                <button class=\"btn btn-sm btn-outline-primary\" (click)=\"editLetter(letter)\" title=\"{{ translate('letters.edit') }}\">\r\n                  <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\">\r\n                    <path d=\"M11 4H4a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h14a2 2 0 0 0 2-2v-7\"></path>\r\n                    <path d=\"m18.5 2.5 3 3L12 15l-4 1 1-4 9.5-9.5z\"></path>\r\n                  </svg>\r\n                </button>\r\n                <button class=\"btn btn-sm btn-outline-danger\" \r\n                        (click)=\"deleteLetter(letter.id, letter.subject)\" \r\n                        [disabled]=\"isDeleting && deletingLetterId === letter.id\"\r\n                        title=\"{{ translate('letters.delete') }}\">\r\n                  <span *ngIf=\"isDeleting && deletingLetterId === letter.id\" class=\"spinner-border spinner-border-sm me-1\" role=\"status\">\r\n                    <span class=\"visually-hidden\">{{ translate('common.loading') }}</span>\r\n                  </span>\r\n                  <svg *ngIf=\"!(isDeleting && deletingLetterId === letter.id)\" width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\">\r\n                    <path d=\"M3 6h18\"></path>\r\n                    <path d=\"M19 6v14c0 1-1 2-2 2H7c-1 0-2-1-2-2V6\"></path>\r\n                    <path d=\"M8 6V4c0-1 1-2 2-2h4c1 0 2 1 2 2v2\"></path>\r\n                  </svg>\r\n                </button>\r\n              </div>\r\n            </div>\r\n            \r\n            <div class=\"card-body\">\r\n              <h5 class=\"card-title\">{{ letter.subject }}</h5>\r\n              <p class=\"card-text text-muted small mb-2\">{{ letter.body | slice:0:100 }}{{ letter.body.length > 100 ? '...' : '' }}</p>\r\n              \r\n              <div class=\"row g-2 mb-3\">\r\n                <div class=\"col-6\">\r\n                  <small class=\"text-muted d-block\">{{ translate('letters.to') }}:</small>\r\n                  <small class=\"fw-medium\">{{ letter.to }}</small>\r\n                </div>\r\n                <div class=\"col-6\">\r\n                  <small class=\"text-muted d-block\">{{ translate('letters.letter_date') }}:</small>\r\n                  <small class=\"fw-medium\">{{ formatDate(letter.letterDate) }}</small>\r\n                </div>\r\n              </div>\r\n\r\n              <div class=\"row g-2 mb-3\" *ngIf=\"letter.referenceNumbers\">\r\n                <div class=\"col-12\">\r\n                  <small class=\"text-muted d-block\">{{ translate('letters.reference_numbers') }}:</small>\r\n                  <small class=\"fw-medium\">{{ letter.referenceNumbers }}</small>\r\n                </div>\r\n              </div>\r\n\r\n              <!-- Attachments Section -->\r\n              <div class=\"attachments-section\" *ngIf=\"letter.attachments && letter.attachments.length > 0\">\r\n                <div class=\"attachments-header d-flex justify-content-between align-items-center mb-3\">\r\n                  <div class=\"d-flex align-items-center\">\r\n                    <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" class=\"me-2 text-muted\">\r\n                      <path d=\"M14.5 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V7.5L14.5 2z\"></path>\r\n                      <polyline points=\"14,2 14,8 20,8\"></polyline>\r\n                    </svg>\r\n                    <span class=\"fw-medium text-muted\">{{ translate('letters.attachments') }} ({{ letter.attachments.length }})</span>\r\n                  </div>\r\n                  <button class=\"btn btn-sm btn-outline-primary\" (click)=\"addAttachment(letter)\" title=\"{{ translate('letters.add_attachment') }}\">\r\n                    <svg width=\"14\" height=\"14\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\">\r\n                      <line x1=\"12\" y1=\"5\" x2=\"12\" y2=\"19\"></line>\r\n                      <line x1=\"5\" y1=\"12\" x2=\"19\" y2=\"12\"></line>\r\n                    </svg>\r\n                  </button>\r\n                </div>\r\n                \r\n                <!-- Attachments List -->\r\n                <div class=\"attachments-list\">\r\n                  <div class=\"attachment-item\" *ngFor=\"let attachment of letter.attachments\">\r\n                    <div class=\"attachment-content d-flex justify-content-between align-items-center p-2 rounded\" \r\n                         (click)=\"showAttachmentDetails(letter.id, attachment)\" \r\n                         style=\"cursor: pointer; transition: background-color 0.2s;\">\r\n                      <div class=\"d-flex align-items-center flex-grow-1\">\r\n                        <!-- \r\n                         -->\r\n                        <div class=\"attachment-info\">\r\n                          <div class=\"attachment-name fw-medium\">{{ getAttachmentDisplayName(attachment) }}</div>\r\n                          <div class=\"attachment-meta text-muted small\">\r\n                            {{ translate('letters.uploaded_by') }}: {{ attachment.uploadedByName }} | {{ formatDate(attachment.uploadedAt) }}\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                      <div class=\"d-flex gap-1\">\r\n                        <button class=\"btn btn-sm btn-outline-primary\" (click)=\"editAttachment(letter, attachment); $event.stopPropagation()\" title=\"{{ translate('letters.edit') }}\">\r\n                          <svg width=\"14\" height=\"14\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\">\r\n                            <path d=\"M11 4H4a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h14a2 2 0 0 0 2-2v-7\"></path>\r\n                            <path d=\"m18.5 2.5 3 3L12 15l-4 1 1-4 9.5-9.5z\"></path>\r\n                          </svg>\r\n                        </button>\r\n                        <button class=\"btn btn-sm btn-outline-danger\" (click)=\"deleteAttachment(letter.id, attachment.id, attachment.fileName); $event.stopPropagation()\" title=\"{{ translate('letters.delete') }}\">\r\n                          <svg width=\"14\" height=\"14\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\">\r\n                            <path d=\"M3 6h18\"></path>\r\n                            <path d=\"M19 6v14c0 1-1 2-2 2H7c-1 0-2-1-2-2V6\"></path>\r\n                            <path d=\"M8 6V4c0-1 1-2 2-2h4c1 0 2 1 2 2v2\"></path>\r\n                          </svg>\r\n                        </button>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <!-- No Attachments -->\r\n              <div class=\"attachments-section\" *ngIf=\"!letter.attachments || letter.attachments.length === 0\">\r\n                <div class=\"d-flex justify-content-between align-items-center\">\r\n                  <small class=\"text-muted\">\r\n                    <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" class=\"me-1\">\r\n                      <path d=\"M14.5 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V7.5L14.5 2z\"></path>\r\n                      <polyline points=\"14,2 14,8 20,8\"></polyline>\r\n                    </svg>\r\n                    {{ translate('letters.no_attachments') }}\r\n                  </small>\r\n                  <button class=\"btn btn-sm btn-outline-primary\" (click)=\"addAttachment(letter)\">\r\n                    <svg width=\"14\" height=\"14\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" class=\"me-1\">\r\n                      <line x1=\"12\" y1=\"5\" x2=\"12\" y2=\"19\"></line>\r\n                      <line x1=\"5\" y1=\"12\" x2=\"19\" y2=\"12\"></line>\r\n                    </svg>\r\n                    {{ translate('letters.add_attachment') }}\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            \r\n            <div class=\"card-footer bg-transparent d-flex justify-content-between align-items-center\">\r\n              <small class=\"text-bold fw-medium\">\r\n                {{ translate('common.created_by') }}: {{ letter.createdByName }}  \r\n              </small>\r\n              <small class=\"\">\r\n                {{ formatDate(letter.createdAt) }}\r\n              </small>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <!-- Pagination Info and Controls -->\r\n  <div class=\"pagination-section\" *ngIf=\"!isLoading && filteredLetters.length > 0\">\r\n    <div class=\"pagination-controls\">\r\n      <div class=\"page-size-control\">\r\n        <label for=\"pageSize\">{{ translate('common.page_size') }}:</label>\r\n        <select id=\"pageSize\" [(ngModel)]=\"pageSize\" (change)=\"onPageSizeChange()\">\r\n          <option value=\"5\">5</option>\r\n          <option value=\"10\">10</option>\r\n          <option value=\"20\">20</option>\r\n          <option value=\"50\">50</option>\r\n        </select>\r\n      </div>\r\n      <div class=\"pagination-info\">\r\n        <span>{{ translate('common.showing') }} {{ (currentPage - 1) * pageSize + 1 }}-{{ Math.min(currentPage * pageSize, totalCount) }} {{ translate('common.of') }} {{ totalCount }} {{ translate('letters.title') }}</span>\r\n      </div>\r\n      \r\n      <nav aria-label=\"Letters pagination\">\r\n        <ul class=\"pagination\">\r\n          <li class=\"page-item\" [class.disabled]=\"currentPage === 1\">\r\n            <button class=\"page-link\" (click)=\"onPageChange(currentPage - 1)\" [disabled]=\"currentPage === 1\">\r\n              <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\">\r\n                <polyline points=\"15,18 9,12 15,6\"/>\r\n              </svg>\r\n            </button>\r\n          </li>\r\n          \r\n          <li *ngFor=\"let page of pages\" class=\"page-item\" [class.active]=\"page === currentPage\">\r\n            <button class=\"page-link\" (click)=\"onPageChange(page)\">{{ page }}</button>\r\n          </li>\r\n          \r\n          <li class=\"page-item\" [class.disabled]=\"currentPage === totalPages\">\r\n            <button class=\"page-link\" (click)=\"onPageChange(currentPage + 1)\" [disabled]=\"currentPage === totalPages\">\r\n              <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\">\r\n                <polyline points=\"9,18 15,12 9,6\"/>\r\n              </svg>\r\n            </button>\r\n          </li>\r\n        </ul>\r\n      </nav>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<!-- Modals -->\r\n<app-add-letter #addLetterModal (letterAdded)=\"loadLetters()\"></app-add-letter>\r\n<app-edit-letter #editLetterModal (letterUpdated)=\"loadLetters()\"></app-edit-letter>\r\n<app-add-attachment #addAttachmentModal (attachmentAdded)=\"loadLetters()\"></app-add-attachment>\r\n<app-edit-attachment #editAttachmentModal (attachmentUpdated)=\"loadLetters()\"></app-edit-attachment>\r\n<app-letters-confirmation-modal #confirmationModal></app-letters-confirmation-modal>\r\n", "import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { LettersList } from './letters-list/letters-list';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: LettersList\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class LettersRoutingModule { }\r\n", "import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { LettersRoutingModule } from './letters-routing.module';\r\nimport { LettersList } from './letters-list/letters-list';\r\nimport { AddLetter } from './add-letter/add-letter';\r\nimport { EditLetter } from './edit-letter/edit-letter';\r\nimport { AddAttachment } from './add-attachment/add-attachment';\r\nimport { EditAttachment } from './edit-attachment/edit-attachment';\r\nimport { LettersConfirmationModalComponent } from './letters-confirmation-modal/letters-confirmation-modal.component';\r\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    LettersList,\r\n    AddLetter,\r\n    EditLetter,\r\n    AddAttachment,\r\n    EditAttachment,\r\n    LettersConfirmationModalComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    LettersRoutingModule,\r\n    ReactiveFormsModule,\r\n    FormsModule\r\n  ]\r\n})\r\nexport class LettersModule { }\r\n"],
  "mappings": "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",
  "names": ["LetterDirection", "LetterConfidentiality", "LetterStatus"]
}
