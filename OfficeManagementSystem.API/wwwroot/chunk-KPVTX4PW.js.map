{
  "version": 3,
  "sources": ["src/app/services/department.service.ts"],
  "sourcesContent": ["import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { environment } from '../../environments/environment';\r\n\r\nexport interface Department {\r\n  id: number;\r\n  code: string;\r\n  nameAr: string;\r\n  nameEn: string;\r\n  type: number;\r\n  parentId: number | null;\r\n  order: number;\r\n  managerUserId: string | null;\r\n  managerName: string | null;\r\n  isActive: boolean;\r\n  createdAt: string;\r\n  updatedAt: string | null;\r\n  children: Department[];\r\n  employeesCount: number;\r\n  expanded?: boolean; // For tree view expansion state\r\n}\r\n\r\nexport interface DepartmentResponse {\r\n  success: boolean;\r\n  message: string;\r\n  data: {\r\n    totalCount: number;\r\n    page: number;\r\n    pageSize: number;\r\n    items: Department[];\r\n  };\r\n  errors: string[];\r\n}\r\n\r\nexport interface DepartmentTreeResponse {\r\n  success: boolean;\r\n  message: string;\r\n  data: Department[];\r\n  errors: string[];\r\n}\r\n\r\nexport interface DepartmentDetailResponse {\r\n  success: boolean;\r\n  message: string;\r\n  data: Department;\r\n  errors: string[];\r\n}\r\n\r\nexport interface CreateDepartmentRequest {\r\n  code: string;\r\n  nameAr: string;\r\n  nameEn: string;\r\n  type: number;\r\n  parentId?: number;\r\n  order: number;\r\n  managerUserId?: string;\r\n}\r\n\r\nexport interface UpdateDepartmentRequest {\r\n  nameAr: string;\r\n  nameEn: string;\r\n  type: number;\r\n  parentId?: number;\r\n  order?: number;\r\n  managerUserId?: string;\r\n  isActive: boolean;\r\n}\r\n\r\nexport interface MoveDepartmentRequest {\r\n  newParentId: number;\r\n  newOrder: number;\r\n}\r\n\r\nexport interface ChangeManagerRequest {\r\n  managerUserId: string;\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class DepartmentService {\r\n  private baseUrl = environment.apiBaseUrl;\r\n\r\n  constructor(private http: HttpClient) {}\r\n\r\n  // Get department names for dropdowns\r\n  getDepartmentNames(): Observable<Array<{ id: number; nameAr: string; nameEn: string }>> {\r\n    return this.http.get<any>(`${this.baseUrl}/Departments/names`).pipe(\r\n      map(response => {\r\n        if (response.success && Array.isArray(response.data)) {\r\n          return response.data as Array<{ id: number; nameAr: string; nameEn: string }>;\r\n        }\r\n        return [];\r\n      })\r\n    );\r\n  }\r\n\r\n  // Get paged departments list\r\n  getDepartments(\r\n    page: number = 1, \r\n    pageSize: number = 10, \r\n    searchTerm?: string,\r\n    type?: number, \r\n    isActive?: boolean, \r\n    parentId?: number\r\n  ): Observable<DepartmentResponse> {\r\n    let url = `${this.baseUrl}/Departments?page=${page}&pageSize=${pageSize}`;\r\n    \r\n    if (searchTerm) {\r\n      url += `&SearchTerm=${encodeURIComponent(searchTerm)}`;\r\n    }\r\n    \r\n    if (type !== undefined) {\r\n      url += `&Type=${type}`;\r\n    }\r\n    \r\n    if (isActive !== undefined) {\r\n      url += `&IsActive=${isActive}`;\r\n    }\r\n    \r\n    if (parentId !== undefined) {\r\n      url += `&ParentId=${parentId}`;\r\n    }\r\n    \r\n    return this.http.get<DepartmentResponse>(url);\r\n  }\r\n\r\n  // Get departments tree\r\n  getDepartmentsTree(): Observable<DepartmentTreeResponse> {\r\n    return this.http.get<DepartmentTreeResponse>(`${this.baseUrl}/Departments/tree`);\r\n  }\r\n\r\n  // Get department by ID\r\n  getDepartment(id: number): Observable<DepartmentDetailResponse> {\r\n    return this.http.get<DepartmentDetailResponse>(`${this.baseUrl}/Departments/${id}`);\r\n  }\r\n\r\n  // Create new department\r\n  createDepartment(department: CreateDepartmentRequest): Observable<DepartmentDetailResponse> {\r\n    return this.http.post<DepartmentDetailResponse>(`${this.baseUrl}/Departments`, department);\r\n  }\r\n\r\n  // Update department\r\n  updateDepartment(id: number, department: UpdateDepartmentRequest): Observable<DepartmentDetailResponse> {\r\n    return this.http.put<DepartmentDetailResponse>(`${this.baseUrl}/Departments/${id}`, department);\r\n  }\r\n\r\n  // Delete department\r\n  deleteDepartment(id: number): Observable<any> {\r\n    return this.http.delete(`${this.baseUrl}/Departments/${id}`);\r\n  }\r\n\r\n  // Move department to new parent\r\n  moveDepartment(id: number, moveRequest: MoveDepartmentRequest): Observable<any> {\r\n    return this.http.post(`${this.baseUrl}/Departments/${id}/move`, moveRequest);\r\n  }\r\n\r\n  // Change department manager\r\n  changeManager(id: number, managerRequest: ChangeManagerRequest): Observable<any> {\r\n    return this.http.post(`${this.baseUrl}/Departments/${id}/manager`, managerRequest);\r\n  }\r\n\r\n  // Get active departments (legacy method)\r\n  getActiveDepartments(): Observable<DepartmentResponse> {\r\n    return this.getDepartments(1, 10, undefined, 1, true);\r\n  }\r\n}\r\n"],
  "mappings": ";;;;;;;;;;;;;AAkFM,IAAO,oBAAP,MAAO,mBAAiB;EAGR;EAFZ,UAAU,YAAY;EAE9B,YAAoB,MAAgB;AAAhB,SAAA,OAAA;EAAmB;;EAGvC,qBAAkB;AAChB,WAAO,KAAK,KAAK,IAAS,GAAG,KAAK,OAAO,oBAAoB,EAAE,KAC7D,IAAI,cAAW;AACb,UAAI,SAAS,WAAW,MAAM,QAAQ,SAAS,IAAI,GAAG;AACpD,eAAO,SAAS;MAClB;AACA,aAAO,CAAA;IACT,CAAC,CAAC;EAEN;;EAGA,eACE,OAAe,GACf,WAAmB,IACnB,YACA,MACA,UACA,UAAiB;AAEjB,QAAI,MAAM,GAAG,KAAK,OAAO,qBAAqB,IAAI,aAAa,QAAQ;AAEvE,QAAI,YAAY;AACd,aAAO,eAAe,mBAAmB,UAAU,CAAC;IACtD;AAEA,QAAI,SAAS,QAAW;AACtB,aAAO,SAAS,IAAI;IACtB;AAEA,QAAI,aAAa,QAAW;AAC1B,aAAO,aAAa,QAAQ;IAC9B;AAEA,QAAI,aAAa,QAAW;AAC1B,aAAO,aAAa,QAAQ;IAC9B;AAEA,WAAO,KAAK,KAAK,IAAwB,GAAG;EAC9C;;EAGA,qBAAkB;AAChB,WAAO,KAAK,KAAK,IAA4B,GAAG,KAAK,OAAO,mBAAmB;EACjF;;EAGA,cAAc,IAAU;AACtB,WAAO,KAAK,KAAK,IAA8B,GAAG,KAAK,OAAO,gBAAgB,EAAE,EAAE;EACpF;;EAGA,iBAAiB,YAAmC;AAClD,WAAO,KAAK,KAAK,KAA+B,GAAG,KAAK,OAAO,gBAAgB,UAAU;EAC3F;;EAGA,iBAAiB,IAAY,YAAmC;AAC9D,WAAO,KAAK,KAAK,IAA8B,GAAG,KAAK,OAAO,gBAAgB,EAAE,IAAI,UAAU;EAChG;;EAGA,iBAAiB,IAAU;AACzB,WAAO,KAAK,KAAK,OAAO,GAAG,KAAK,OAAO,gBAAgB,EAAE,EAAE;EAC7D;;EAGA,eAAe,IAAY,aAAkC;AAC3D,WAAO,KAAK,KAAK,KAAK,GAAG,KAAK,OAAO,gBAAgB,EAAE,SAAS,WAAW;EAC7E;;EAGA,cAAc,IAAY,gBAAoC;AAC5D,WAAO,KAAK,KAAK,KAAK,GAAG,KAAK,OAAO,gBAAgB,EAAE,YAAY,cAAc;EACnF;;EAGA,uBAAoB;AAClB,WAAO,KAAK,eAAe,GAAG,IAAI,QAAW,GAAG,IAAI;EACtD;;qCArFW,oBAAiB,mBAAA,UAAA,CAAA;EAAA;4EAAjB,oBAAiB,SAAjB,mBAAiB,WAAA,YAFhB,OAAM,CAAA;;;sEAEP,mBAAiB,CAAA;UAH7B;WAAW;MACV,YAAY;KACb;;;",
  "names": []
}
