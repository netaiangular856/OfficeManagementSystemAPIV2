{
  "version": 3,
  "sources": ["src/app/components/auth/login/login.component.ts", "src/app/components/auth/login/login.component.html", "src/app/components/auth/request-reset/request-reset.component.ts", "src/app/components/auth/request-reset/request-reset.component.html", "src/app/components/auth/reset-password/reset-password.component.ts", "src/app/components/auth/reset-password/reset-password.component.html", "src/app/components/auth/change-password/change-password.component.ts", "src/app/components/auth/change-password/change-password.component.html", "src/app/components/auth/auth-routing.module.ts", "src/app/components/auth/auth.module.ts"],
  "sourcesContent": ["import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { AuthService } from '../../../services/auth.service';\r\nimport { TranslationService } from '../../../services/translation.service';\r\nimport { LangService } from '../../../services/lang.service';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css'],\r\n  standalone: false\r\n})\r\nexport class LoginComponent implements OnInit {\r\n  loginForm: FormGroup;\r\n  showPassword = false;\r\n  loading = false;\r\n  errorMessage = '';\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private authService: AuthService,\r\n    private router: Router,\r\n    private translationService: TranslationService,\r\n    private langService: LangService\r\n  ) {\r\n    this.loginForm = this.fb.group({\r\n      email: ['', [Validators.required, Validators.email]],\r\n      password: ['', [Validators.required, Validators.minLength(6)]]\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    // Check if user is already authenticated\r\n    if (this.authService.isAuthenticated()) {\r\n      this.router.navigate(['/dashboard']);\r\n    }\r\n  }\r\n\r\n  togglePasswordVisibility(): void {\r\n    this.showPassword = !this.showPassword;\r\n  }\r\n\r\n  onSubmit(): void {\r\n    if (this.loginForm.valid) {\r\n      this.loading = true;\r\n      this.errorMessage = '';\r\n\r\n      const credentials = this.loginForm.value;\r\n      \r\n      this.authService.login(credentials).subscribe({\r\n        next: (response) => {\r\n          this.loading = false;\r\n          this.router.navigate(['/dashboard']);\r\n        },\r\n        error: (error) => {\r\n          this.loading = false;\r\n          // Always use translated messages instead of API error messages\r\n          if (error.status === 401 || error.status === 400) {\r\n            this.errorMessage = this.translationService.translate('login.credentials_error');\r\n          } else {\r\n            this.errorMessage = this.translationService.translate('login.login_failed');\r\n          }\r\n        }\r\n      });\r\n    } else {\r\n      this.markFormGroupTouched();\r\n    }\r\n  }\r\n\r\n  private markFormGroupTouched(): void {\r\n    Object.keys(this.loginForm.controls).forEach(key => {\r\n      const control = this.loginForm.get(key);\r\n      control?.markAsTouched();\r\n    });\r\n  }\r\n\r\n  getFieldError(fieldName: string): string {\r\n    const field = this.loginForm.get(fieldName);\r\n    if (field?.errors && field?.touched) {\r\n      if (field.errors['required']) {\r\n        return this.translationService.translate(`login.${fieldName}_required`);\r\n      }\r\n      if (field.errors['email']) {\r\n        return this.translationService.translate('login.email_invalid');\r\n      }\r\n      if (field.errors['minlength']) {\r\n        return this.translationService.translate('login.password_min_length');\r\n      }\r\n    }\r\n    return '';\r\n  }\r\n\r\n  translate(key: string): string {\r\n    return this.translationService.translate(key);\r\n  }\r\n\r\n  toggleLanguage(): void {\r\n    this.langService.toggleLanguage();\r\n  }\r\n\r\n  setLanguage(lang: 'ar' | 'en'): void {\r\n    // Prevent rapid switching to avoid flickering\r\n    if (this.langService.getCurrentLang() === lang) {\r\n      return;\r\n    }\r\n    this.langService.setLanguage(lang);\r\n  }\r\n\r\n  isRTL(): boolean {\r\n    return this.langService.getCurrentLang() === 'ar';\r\n  }\r\n}\r\n", "<div class=\"login-layout\" [dir]=\"isRTL() ? 'rtl' : 'ltr'\">\r\n  <!-- Top Header with Logo and Language Toggle -->\r\n  <div class=\"top-header\">\r\n    <div class=\"top-logo\">\r\n      <img src=\"/logo-small.svg\" alt=\"EcoOffice\" class=\"eco-logo\">\r\n    </div>\r\n    <div class=\"language-toggle\">\r\n      <div class=\"toggle-container\" [class.rtl]=\"isRTL()\">\r\n        <div class=\"toggle-option\" [class.active]=\"!isRTL()\">\r\n          <div class=\"flag-container\">\r\n            <svg class=\"flag\" viewBox=\"0 0 60 30\" width=\"20\" height=\"15\">\r\n              <clipPath id=\"uk-flag\">\r\n                <path d=\"M30,15 h30 v15 z v15 h-30 z h-30 v-15 z v-15 h30 z\"/>\r\n              </clipPath>\r\n              <path d=\"M0,0 v30 h60 v-30 z\" fill=\"#012169\"/>\r\n              <path d=\"M0,0 L60,30 M60,0 L0,30\" stroke=\"#fff\" stroke-width=\"6\"/>\r\n              <path d=\"M0,0 L60,30 M60,0 L0,30\" stroke=\"#C8102E\" stroke-width=\"4\" clip-path=\"url(#uk-flag)\"/>\r\n              <path d=\"M30,0 v30 M0,15 h60\" stroke=\"#fff\" stroke-width=\"10\"/>\r\n              <path d=\"M30,0 v30 M0,15 h60\" stroke=\"#C8102E\" stroke-width=\"6\"/>\r\n            </svg>\r\n          </div>\r\n          <span class=\"toggle-text\">EN</span>\r\n        </div>\r\n        <div class=\"toggle-option\" [class.active]=\"isRTL()\">\r\n          <div class=\"flag-container\">\r\n            <svg class=\"flag\" viewBox=\"0 0 640 480\" width=\"20\" height=\"15\">\r\n              <path fill=\"#00732f\" d=\"M0 0h640v160H0z\"/>\r\n              <path fill=\"#fff\" d=\"M0 160h640v160H0z\"/>\r\n              <path fill=\"#000\" d=\"M0 320h640v160H0z\"/>\r\n              <path fill=\"#ff0000\" d=\"M0 0h180v480H0z\"/>\r\n            </svg>\r\n          </div>\r\n          <span class=\"toggle-text\">AR</span>\r\n        </div>\r\n        <div class=\"toggle-slider\" [class.rtl]=\"isRTL()\"></div>\r\n        <button class=\"toggle-button\" (click)=\"toggleLanguage()\" [attr.aria-label]=\"isRTL() ? 'Switch to English' : 'Switch to Arabic'\"></button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n\r\n\r\n  <!-- Login Form Section -->\r\n  <div class=\"login-form\">\r\n    <!-- Welcome text block aligned to form card edges -->\r\n    <div class=\"welcome-block\">\r\n      <h1 class=\"welcome-title\">{{ translate('login.welcome_back') }}</h1>\r\n      <p class=\"welcome-subtitle\">{{ translate('login.login_hint') }}</p>\r\n    </div>\r\n    \r\n    <div class=\"form-container\">\r\n      <div class=\"form-title\">\r\n        <h2>{{ translate('login.login') }}</h2>\r\n      </div>\r\n\r\n      <form [formGroup]=\"loginForm\" (ngSubmit)=\"onSubmit()\" class=\"login-form-content\">\r\n        <div class=\"form-group\">\r\n          <label [for]=\"'email'\" class=\"form-label\">{{ translate('login.email') }}</label>\r\n          <input\r\n            type=\"email\"\r\n            id=\"email\"\r\n            formControlName=\"email\"\r\n            class=\"form-control\"\r\n            [class.error]=\"getFieldError('email')\"\r\n            [placeholder]=\"translate('login.email')\"\r\n          >\r\n          <div class=\"form-error\" *ngIf=\"getFieldError('email')\">\r\n            {{ getFieldError('email') }}\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"form-group\">\r\n          <label [for]=\"'password'\" class=\"form-label\">{{ translate('login.password') }}</label>\r\n          <div class=\"password-input-container\">\r\n            <input\r\n              [type]=\"showPassword ? 'text' : 'password'\"\r\n              id=\"password\"\r\n              formControlName=\"password\"\r\n              class=\"form-control\"\r\n              [class.error]=\"getFieldError('password')\"\r\n              [placeholder]=\"translate('login.password')\"\r\n            >\r\n            <button\r\n              type=\"button\"\r\n              class=\"password-toggle\"\r\n              (click)=\"togglePasswordVisibility()\"\r\n              [attr.aria-label]=\"showPassword ? translate('login.hide') : translate('login.show')\"\r\n            >\r\n              <!-- Eye icon for show password - direction changes with language -->\r\n              <svg *ngIf=\"!showPassword\" class=\"eye-icon\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\">\r\n                <path d=\"M2 12s3-7 10-7 10 7 10 7-3 7-10 7-10-7-10-7Z\"/>\r\n                <circle cx=\"12\" cy=\"12\" r=\"3\"/>\r\n              </svg>\r\n              <!-- Eye-off icon for hide password - direction changes with language -->\r\n              <svg *ngIf=\"showPassword\" class=\"eye-icon\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\">\r\n                <path d=\"M9.88 9.88a3 3 0 1 0 4.24 4.24\"/>\r\n                <path d=\"M10.73 5.08A10.43 10.43 0 0 1 12 5c7 0 10 7 10 7a13.16 13.16 0 0 1-1.67 2.68\"/>\r\n                <path d=\"M6.61 6.61A13.526 13.526 0 0 0 2 12s3 7 10 7a9.749 9.749 0 0 0 5.39-1.61\"/>\r\n                <line x1=\"2\" x2=\"22\" y1=\"2\" y2=\"22\"/>\r\n              </svg>\r\n            </button>\r\n          </div>\r\n          <div class=\"form-error\" *ngIf=\"getFieldError('password')\">\r\n            {{ getFieldError('password') }}\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"form-actions\">\r\n          <button\r\n            type=\"submit\"\r\n            class=\"btn btn-primary login-btn\"\r\n            [disabled]=\"loading\"\r\n          >\r\n            <span *ngIf=\"!loading\">{{ translate('login.login') }}</span>\r\n            <span *ngIf=\"loading\">{{ translate('login.loading') }}</span>\r\n          </button>\r\n        </div>\r\n\r\n        <div class=\"form-footer\">\r\n          <a routerLink=\"/auth/request-reset\" class=\"forgot-password-link\">\r\n            {{ translate('login.forgot_password') }}\r\n          </a>\r\n        </div>\r\n\r\n        <div class=\"error-message\" *ngIf=\"errorMessage\">\r\n          {{ errorMessage }}\r\n        </div>\r\n      </form>\r\n    </div>\r\n  </div>\r\n    <!-- Side Section (Hero) -->\r\n    <div class=\"login-side\">\r\n        <div class=\"side-overlay\">\r\n          <div class=\"side-content\">\r\n            <div class=\"brand\">\r\n              <img src=\"/logo-white.png\" alt=\"EcoOffice\" class=\"brand-mark\">\r\n            </div>\r\n            <h1 class=\"side-title\">{{ translate('login.paperless_slogan_title') }}</h1>\r\n            <p class=\"side-subtitle\">{{ translate('login.paperless_slogan') }}</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n</div>\r\n", "import { Component } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { AuthService } from '../../../services/auth.service';\r\nimport { TranslationService } from '../../../services/translation.service';\r\nimport { LangService } from '../../../services/lang.service';\r\n\r\n@Component({\r\n  selector: 'app-request-reset',\r\n  templateUrl: './request-reset.component.html',\r\n  styleUrls: ['./request-reset.component.css'],\r\n  standalone: false\r\n})\r\nexport class RequestResetComponent {\r\n  resetForm: FormGroup;\r\n  loading = false;\r\n  successMessage = '';\r\n  errorMessage = '';\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private authService: AuthService,\r\n    private router: Router,\r\n    private translationService: TranslationService,\r\n    private langService: LangService\r\n  ) {\r\n    this.resetForm = this.fb.group({\r\n      email: ['', [Validators.required, Validators.email]]\r\n    });\r\n  }\r\n\r\n  onSubmit(): void {\r\n    if (this.resetForm.valid) {\r\n      this.loading = true;\r\n      this.errorMessage = '';\r\n      this.successMessage = '';\r\n\r\n      const email = this.resetForm.get('email')?.value;\r\n      \r\n      this.authService.sendResetEmail(email).subscribe({\r\n        next: (response) => {\r\n          this.loading = false;\r\n          this.successMessage = this.translate('request_reset.success_message');\r\n          this.resetForm.reset();\r\n        },\r\n        error: (error) => {\r\n          this.loading = false;\r\n          this.errorMessage = this.translate('request_reset.error_message');\r\n        }\r\n      });\r\n    } else {\r\n      this.markFormGroupTouched();\r\n    }\r\n  }\r\n\r\n  private markFormGroupTouched(): void {\r\n    Object.keys(this.resetForm.controls).forEach(key => {\r\n      const control = this.resetForm.get(key);\r\n      control?.markAsTouched();\r\n    });\r\n  }\r\n\r\n  getFieldError(fieldName: string): string {\r\n    const field = this.resetForm.get(fieldName);\r\n    if (field?.errors && field?.touched) {\r\n      if (field.errors['required']) {\r\n        return this.translate(`login.${fieldName}_required`);\r\n      }\r\n      if (field.errors['email']) {\r\n        return this.translate('login.email_invalid');\r\n      }\r\n    }\r\n    return '';\r\n  }\r\n\r\n  goToLogin(): void {\r\n    this.router.navigate(['/auth/login']);\r\n  }\r\n\r\n  translate(key: string): string {\r\n    return this.translationService.translate(key);\r\n  }\r\n\r\n  setLanguage(lang: 'ar' | 'en'): void {\r\n    this.langService.setLanguage(lang);\r\n  }\r\n\r\n  toggleLanguage(): void {\r\n    this.langService.toggleLanguage();\r\n  }\r\n\r\n  isRTL(): boolean {\r\n    return this.langService.getCurrentLang() === 'ar';\r\n  }\r\n}\r\n", "<div class=\"request-reset-layout\" [dir]=\"isRTL() ? 'rtl' : 'ltr'\">\r\n  <!-- Top Header with Logo and Language Toggle -->\r\n  <div class=\"top-header\">\r\n    <div class=\"top-logo\">\r\n      <img src=\"/logo-small.svg\" alt=\"EcoOffice\" class=\"eco-logo\">\r\n    </div>\r\n    <div class=\"language-toggle\">\r\n      <div class=\"toggle-container\" [class.rtl]=\"isRTL()\">\r\n        <div class=\"toggle-option\" [class.active]=\"!isRTL()\">\r\n          <div class=\"flag-container\">\r\n            <svg class=\"flag\" viewBox=\"0 0 60 30\" width=\"20\" height=\"15\">\r\n              <clipPath id=\"uk-flag\">\r\n                <path d=\"M30,15 h30 v15 z v15 h-30 z h-30 v-15 z v-15 h30 z\"/>\r\n              </clipPath>\r\n              <path d=\"M0,0 v30 h60 v-30 z\" fill=\"#012169\"/>\r\n              <path d=\"M0,0 L60,30 M60,0 L0,30\" stroke=\"#fff\" stroke-width=\"6\"/>\r\n              <path d=\"M0,0 L60,30 M60,0 L0,30\" stroke=\"#C8102E\" stroke-width=\"4\" clip-path=\"url(#uk-flag)\"/>\r\n              <path d=\"M30,0 v30 M0,15 h60\" stroke=\"#fff\" stroke-width=\"10\"/>\r\n              <path d=\"M30,0 v30 M0,15 h60\" stroke=\"#C8102E\" stroke-width=\"6\"/>\r\n            </svg>\r\n          </div>\r\n          <span class=\"toggle-text\">EN</span>\r\n        </div>\r\n        <div class=\"toggle-option\" [class.active]=\"isRTL()\">\r\n          <div class=\"flag-container\">\r\n            <svg class=\"flag\" viewBox=\"0 0 640 480\" width=\"20\" height=\"15\">\r\n              <path fill=\"#00732f\" d=\"M0 0h640v160H0z\"/>\r\n              <path fill=\"#fff\" d=\"M0 160h640v160H0z\"/>\r\n              <path fill=\"#000\" d=\"M0 320h640v160H0z\"/>\r\n              <path fill=\"#ff0000\" d=\"M0 0h180v480H0z\"/>\r\n            </svg>\r\n          </div>\r\n          <span class=\"toggle-text\">AR</span>\r\n        </div>\r\n        <div class=\"toggle-slider\" [class.rtl]=\"isRTL()\"></div>\r\n        <button class=\"toggle-button\" (click)=\"toggleLanguage()\" [attr.aria-label]=\"isRTL() ? 'Switch to English' : 'Switch to Arabic'\"></button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <!-- Request Reset Form Section -->\r\n  <div class=\"request-reset-form\">\r\n    <!-- Welcome text block aligned to form card edges -->\r\n    <div class=\"welcome-block\">\r\n      <h1 class=\"welcome-title\">{{ translate('request_reset.title') }}</h1>\r\n      <p class=\"welcome-subtitle\">{{ translate('request_reset.subtitle') }}</p>\r\n    </div>\r\n    \r\n    <div class=\"form-container\">\r\n      <div class=\"form-title\">\r\n        <h2>{{ translate('request_reset.title') }}</h2>\r\n      </div>\r\n\r\n      <form [formGroup]=\"resetForm\" (ngSubmit)=\"onSubmit()\" class=\"request-reset-form-content\">\r\n        <div class=\"form-group\">\r\n          <label [for]=\"'email'\" class=\"form-label\">{{ translate('request_reset.email') }}</label>\r\n          <input\r\n            type=\"email\"\r\n            id=\"email\"\r\n            formControlName=\"email\"\r\n            class=\"form-control\"\r\n            [class.error]=\"getFieldError('email')\"\r\n            [placeholder]=\"translate('request_reset.email')\"\r\n          >\r\n          <div class=\"form-error\" *ngIf=\"getFieldError('email')\">\r\n            {{ getFieldError('email') }}\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"form-actions\">\r\n          <button\r\n            type=\"submit\"\r\n            class=\"btn btn-primary reset-btn\"\r\n            [disabled]=\"loading\"\r\n          >\r\n            <span *ngIf=\"!loading\">{{ translate('request_reset.send_button') }}</span>\r\n            <span *ngIf=\"loading\">{{ translate('login.loading') }}</span>\r\n          </button>\r\n        </div>\r\n\r\n        <div class=\"form-footer\">\r\n          <a (click)=\"goToLogin()\" class=\"back-to-login-link\">\r\n            {{ translate('request_reset.back_to_login') }}\r\n          </a>\r\n        </div>\r\n\r\n        <div class=\"success-message\" *ngIf=\"successMessage\">\r\n          {{ successMessage }}\r\n        </div>\r\n\r\n        <div class=\"error-message\" *ngIf=\"errorMessage\">\r\n          {{ errorMessage }}\r\n        </div>\r\n      </form>\r\n    </div>\r\n  </div>\r\n\r\n  \r\n</div>\r\n", "import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators, ValidatorFn, AbstractControl, ValidationErrors } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { AuthService } from '../../../services/auth.service';\r\nimport { TranslationService } from '../../../services/translation.service';\r\nimport { LangService } from '../../../services/lang.service';\r\n\r\n@Component({\r\n  selector: 'app-reset-password',\r\n  templateUrl: './reset-password.component.html',\r\n  styleUrls: ['./reset-password.component.css'],\r\n  standalone: false\r\n})\r\nexport class ResetPasswordComponent implements OnInit {\r\n  resetForm: FormGroup;\r\n  showNewPassword = false;\r\n  showConfirmPassword = false;\r\n  loading = false;\r\n  successMessage = '';\r\n  errorMessage = '';\r\n  token = '';\r\n  email = '';\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private authService: AuthService,\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n    private translationService: TranslationService,\r\n    private langService: LangService\r\n  ) {\r\n    this.resetForm = this.fb.group({\r\n      newPassword: ['', [Validators.required, Validators.minLength(8), this.passwordStrengthValidator()]],\r\n      confirmPassword: ['', [Validators.required]]\r\n    }, { validators: this.passwordMatchValidator });\r\n  }\r\n\r\n  // Custom password strength validator\r\n  passwordStrengthValidator(): ValidatorFn {\r\n    return (control: AbstractControl): ValidationErrors | null => {\r\n      const password = control.value;\r\n      if (!password) return null;\r\n      \r\n      const hasUpperCase = /[A-Z]/.test(password);\r\n      const hasLowerCase = /[a-z]/.test(password);\r\n      const hasNumbers = /\\d/.test(password);\r\n      const hasSpecialChar = /[!@#$%^&*(),.?\":{}|<>]/.test(password);\r\n      \r\n      const valid = hasUpperCase && hasLowerCase && hasNumbers && hasSpecialChar;\r\n      \r\n      return valid ? null : { passwordStrength: true };\r\n    };\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    // Get token from route parameters and email from query parameters\r\n    this.route.params.subscribe(params => {\r\n      this.token = params['token'] || '';\r\n    });\r\n    \r\n    this.route.queryParams.subscribe(params => {\r\n      this.email = params['email'] || '';\r\n      \r\n      // Check if we have the required parameters\r\n      if (!this.token || !this.email) {\r\n        // Only show error if we're actually on the reset password page\r\n        if (this.router.url.includes('reset-password')) {\r\n          if (!this.token && !this.email) {\r\n            // Both are missing - invalid reset link\r\n            this.errorMessage = this.translate('reset_password.invalid_reset_link');\r\n          } else if (!this.token) {\r\n            // Token is missing\r\n            this.errorMessage = this.translate('reset_password.missing_token');\r\n          } else if (!this.email) {\r\n            // Email is missing\r\n            this.errorMessage = this.translate('reset_password.missing_email');\r\n          }\r\n        }\r\n      } else {\r\n        // Clear any existing error messages when we have valid parameters\r\n        this.errorMessage = '';\r\n      }\r\n    });\r\n  }\r\n\r\n  passwordMatchValidator(form: FormGroup): { [key: string]: boolean } | null {\r\n    const newPassword = form.get('newPassword');\r\n    const confirmPassword = form.get('confirmPassword');\r\n    \r\n    if (newPassword && confirmPassword && newPassword.value !== confirmPassword.value) {\r\n      return { 'passwordMismatch': true };\r\n    }\r\n    \r\n    return null;\r\n  }\r\n\r\n  togglePasswordVisibility(field: 'newPassword' | 'confirmPassword'): void {\r\n    if (field === 'newPassword') {\r\n      this.showNewPassword = !this.showNewPassword;\r\n    } else {\r\n      this.showConfirmPassword = !this.showConfirmPassword;\r\n    }\r\n  }\r\n\r\n  onSubmit(): void {\r\n    if (this.resetForm.valid && this.token && this.email) {\r\n      this.loading = true;\r\n      this.errorMessage = '';\r\n      this.successMessage = '';\r\n\r\n      const request = {\r\n        email: this.email,\r\n        token: this.token,\r\n        newPassword: this.resetForm.get('newPassword')?.value,\r\n        confirmPassword: this.resetForm.get('confirmPassword')?.value\r\n      };\r\n      \r\n      this.authService.resetPassword(request).subscribe({\r\n        next: (response) => {\r\n          this.loading = false;\r\n          this.successMessage = this.translate('reset_password.success_message');\r\n          setTimeout(() => {\r\n            this.router.navigate(['/auth/login']);\r\n          }, 2000);\r\n        },\r\n        error: (error) => {\r\n          this.loading = false;\r\n          // Handle different types of errors\r\n          if (error.status === 400) {\r\n            this.errorMessage = this.translate('reset_password.validation_error');\r\n          } else if (error.status === 401) {\r\n            this.errorMessage = this.translate('reset_password.invalid_token');\r\n          } else if (error.status === 404) {\r\n            this.errorMessage = this.translate('reset_password.user_not_found');\r\n          } else {\r\n            this.errorMessage = this.translate('reset_password.error_message');\r\n          }\r\n        }\r\n      });\r\n    } else {\r\n      this.markFormGroupTouched();\r\n    }\r\n  }\r\n\r\n  private markFormGroupTouched(): void {\r\n    Object.keys(this.resetForm.controls).forEach(key => {\r\n      const control = this.resetForm.get(key);\r\n      control?.markAsTouched();\r\n    });\r\n  }\r\n\r\n  getFieldError(fieldName: string): string {\r\n    const field = this.resetForm.get(fieldName);\r\n    if (field?.errors && field?.touched) {\r\n      if (field.errors['required']) {\r\n        // Map field names to proper translation keys\r\n        if (fieldName === 'newPassword') {\r\n          return this.translate('reset_password.new_password_required');\r\n        } else if (fieldName === 'confirmPassword') {\r\n          return this.translate('reset_password.confirm_password_required');\r\n        }\r\n        return this.translate('reset_password.field_required');\r\n      }\r\n      if (field.errors['minlength']) {\r\n        return this.translate('login.password_min_length');\r\n      }\r\n      if (field.errors['passwordStrength']) {\r\n        return this.translate('reset_password.password_strength_error');\r\n      }\r\n    }\r\n    \r\n    // Check for password mismatch error\r\n    if (fieldName === 'confirmPassword' && this.resetForm.errors?.['passwordMismatch']) {\r\n      return this.translate('login.passwords_not_match');\r\n    }\r\n    \r\n    return '';\r\n  }\r\n\r\n  goToLogin(): void {\r\n    this.router.navigate(['/auth/login']);\r\n  }\r\n\r\n  translate(key: string): string {\r\n    return this.translationService.translate(key);\r\n  }\r\n\r\n  setLanguage(lang: 'ar' | 'en'): void {\r\n    this.langService.setLanguage(lang);\r\n  }\r\n\r\n  toggleLanguage(): void {\r\n    this.langService.toggleLanguage();\r\n  }\r\n\r\n  isRTL(): boolean {\r\n    return this.translationService.isRTL();\r\n  }\r\n}\r\n", "<div class=\"reset-password-layout\" [dir]=\"isRTL() ? 'rtl' : 'ltr'\">\r\n  <!-- Top Header with Logo and Language Toggle -->\r\n  <div class=\"top-header\">\r\n    <div class=\"top-logo\">\r\n      <img src=\"/logo-small.svg\" alt=\"EcoOffice\" class=\"eco-logo\">\r\n    </div>\r\n    <div class=\"language-toggle\">\r\n      <div class=\"toggle-container\" [class.rtl]=\"isRTL()\" [class.ltr]=\"!isRTL()\">\r\n        <div class=\"toggle-option\" [class.active]=\"!isRTL()\">\r\n          <div class=\"flag-container\">\r\n            <svg class=\"flag\" viewBox=\"0 0 60 30\" width=\"20\" height=\"15\">\r\n              <clipPath id=\"uk-flag\">\r\n                <path d=\"M30,15 h30 v15 z v15 h-30 z h-30 v-15 z v-15 h30 z\"/>\r\n              </clipPath>\r\n              <path d=\"M0,0 v30 h60 v-30 z\" fill=\"#012169\"/>\r\n              <path d=\"M0,0 L60,30 M60,0 L0,30\" stroke=\"#fff\" stroke-width=\"6\"/>\r\n              <path d=\"M0,0 L60,30 M60,0 L0,30\" stroke=\"#C8102E\" stroke-width=\"4\" clip-path=\"url(#uk-flag)\"/>\r\n              <path d=\"M30,0 v30 M0,15 h60\" stroke=\"#fff\" stroke-width=\"10\"/>\r\n              <path d=\"M30,0 v30 M0,15 h60\" stroke=\"#C8102E\" stroke-width=\"6\"/>\r\n            </svg>\r\n          </div>\r\n          <span class=\"toggle-text\">EN</span>\r\n        </div>\r\n        <div class=\"toggle-option\" [class.active]=\"isRTL()\">\r\n          <div class=\"flag-container\">\r\n            <svg class=\"flag\" viewBox=\"0 0 640 480\" width=\"20\" height=\"15\">\r\n              <path fill=\"#00732f\" d=\"M0 0h640v160H0z\"/>\r\n              <path fill=\"#fff\" d=\"M0 160h640v160H0z\"/>\r\n              <path fill=\"#000\" d=\"M0 320h640v160H0z\"/>\r\n              <path fill=\"#ff0000\" d=\"M0 0h180v480H0z\"/>\r\n            </svg>\r\n          </div>\r\n          <span class=\"toggle-text\">AR</span>\r\n        </div>\r\n        <div class=\"toggle-slider\" [class.rtl]=\"isRTL()\" [class.ltr]=\"!isRTL()\"></div>\r\n        <button class=\"toggle-button\" (click)=\"toggleLanguage()\" [attr.aria-label]=\"isRTL() ? 'Switch to English' : 'Switch to Arabic'\"></button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <!-- Reset Password Form Section -->\r\n  <div class=\"reset-password-form\">\r\n    <!-- Welcome text block aligned to form card edges -->\r\n    <div class=\"welcome-block\">\r\n      <h1 class=\"welcome-title\">{{ translate('reset_password.title') }}</h1>\r\n      <p class=\"welcome-subtitle\">{{ translate('reset_password.subtitle') }}</p>\r\n    </div>\r\n    \r\n    <div class=\"form-container\">\r\n      <div class=\"form-title\">\r\n        <h2>{{ translate('reset_password.title') }}</h2>\r\n      </div>\r\n\r\n      <form [formGroup]=\"resetForm\" (ngSubmit)=\"onSubmit()\" class=\"reset-password-form-content\">\r\n        <div class=\"form-group\">\r\n          <label [for]=\"'newPassword'\" class=\"form-label\">{{ translate('reset_password.new_password') }}</label>\r\n          <div class=\"password-input-container\">\r\n            <input\r\n              [type]=\"showNewPassword ? 'text' : 'password'\"\r\n              id=\"newPassword\"\r\n              formControlName=\"newPassword\"\r\n              class=\"form-control\"\r\n              [class.error]=\"getFieldError('newPassword')\"\r\n              [placeholder]=\"translate('reset_password.new_password')\"\r\n            >\r\n            <button\r\n              type=\"button\"\r\n              class=\"password-toggle\"\r\n              (click)=\"togglePasswordVisibility('newPassword')\"\r\n              [attr.aria-label]=\"showNewPassword ? translate('login.hide') : translate('login.show')\"\r\n            >\r\n              <span class=\"toggle-text\">{{ showNewPassword ? translate('login.hide') : translate('login.show') }}</span>\r\n              <i class=\"toggle-icon\" [class]=\"showNewPassword ? 'eye-off' : 'eye'\"></i>\r\n            </button>\r\n          </div>\r\n          <div class=\"form-error\" *ngIf=\"getFieldError('newPassword')\">\r\n            {{ getFieldError('newPassword') }}\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"form-group\">\r\n          <label [for]=\"'confirmPassword'\" class=\"form-label\">{{ translate('reset_password.confirm_new_password') }}</label>\r\n          <div class=\"password-input-container\">\r\n            <input\r\n              [type]=\"showConfirmPassword ? 'text' : 'password'\"\r\n              id=\"confirmPassword\"\r\n              formControlName=\"confirmPassword\"\r\n              class=\"form-control\"\r\n              [class.error]=\"getFieldError('confirmPassword')\"\r\n              [placeholder]=\"translate('reset_password.confirm_new_password')\"\r\n            >\r\n            <button\r\n              type=\"button\"\r\n              class=\"password-toggle\"\r\n              (click)=\"togglePasswordVisibility('confirmPassword')\"\r\n              [attr.aria-label]=\"showConfirmPassword ? translate('login.hide') : translate('login.show')\"\r\n            >\r\n              <span class=\"toggle-text\">{{ showConfirmPassword ? translate('login.hide') : translate('login.show') }}</span>\r\n              <i class=\"toggle-icon\" [class]=\"showConfirmPassword ? 'eye-off' : 'eye'\"></i>\r\n            </button>\r\n          </div>\r\n          <div class=\"form-error\" *ngIf=\"getFieldError('confirmPassword')\">\r\n            {{ getFieldError('confirmPassword') }}\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"form-actions\">\r\n          <button\r\n            type=\"submit\"\r\n            class=\"btn btn-primary reset-btn\"\r\n            [disabled]=\"loading || !token || !email\"\r\n          >\r\n            <span *ngIf=\"!loading\">{{ translate('reset_password.reset_button') }}</span>\r\n            <span *ngIf=\"loading\">{{ translate('login.loading') }}</span>\r\n          </button>\r\n        </div>\r\n\r\n        <div class=\"form-footer\">\r\n          <a (click)=\"goToLogin()\" class=\"back-to-login-link\">\r\n            {{ translate('reset_password.back_to_login') }}\r\n          </a>\r\n        </div>\r\n\r\n        <div class=\"success-message\" *ngIf=\"successMessage\">\r\n          {{ successMessage }}\r\n        </div>\r\n\r\n        <div class=\"error-message\" *ngIf=\"errorMessage\">\r\n          {{ errorMessage }}\r\n        </div>\r\n      </form>\r\n    </div>\r\n  </div>\r\n\r\n</div>\r\n", "import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { AuthService } from '../../../services/auth.service';\r\nimport { TranslationService } from '../../../services/translation.service';\r\nimport { LangService } from '../../../services/lang.service';\r\n\r\n@Component({\r\n  selector: 'app-change-password',\r\n  templateUrl: './change-password.component.html',\r\n  styleUrls: ['./change-password.component.css'],\r\n  standalone: false\r\n})\r\nexport class ChangePasswordComponent implements OnInit {\r\n  changePasswordForm: FormGroup;\r\n  showCurrentPassword = false;\r\n  showNewPassword = false;\r\n  showConfirmPassword = false;\r\n  loading = false;\r\n  successMessage = '';\r\n  errorMessage = '';\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private authService: AuthService,\r\n    private router: Router,\r\n    private translationService: TranslationService,\r\n    private langService: LangService\r\n  ) {\r\n    this.changePasswordForm = this.fb.group({\r\n      currentPassword: ['', [Validators.required]],\r\n      newPassword: ['', [Validators.required, Validators.minLength(8)]],\r\n      confirmPassword: ['', [Validators.required]]\r\n    }, { validators: this.passwordMatchValidator });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    // Check if user is authenticated\r\n    if (!this.authService.isAuthenticated()) {\r\n      this.router.navigate(['/auth/login']);\r\n    }\r\n  }\r\n\r\n  passwordMatchValidator(form: FormGroup): { [key: string]: boolean } | null {\r\n    const newPassword = form.get('newPassword');\r\n    const confirmPassword = form.get('confirmPassword');\r\n    \r\n    if (newPassword && confirmPassword && newPassword.value !== confirmPassword.value) {\r\n      return { 'passwordMismatch': true };\r\n    }\r\n    \r\n    return null;\r\n  }\r\n\r\n  togglePasswordVisibility(field: 'currentPassword' | 'newPassword' | 'confirmPassword'): void {\r\n    switch (field) {\r\n      case 'currentPassword':\r\n        this.showCurrentPassword = !this.showCurrentPassword;\r\n        break;\r\n      case 'newPassword':\r\n        this.showNewPassword = !this.showNewPassword;\r\n        break;\r\n      case 'confirmPassword':\r\n        this.showConfirmPassword = !this.showConfirmPassword;\r\n        break;\r\n    }\r\n  }\r\n\r\n  onSubmit(): void {\r\n    if (this.changePasswordForm.valid) {\r\n      this.loading = true;\r\n      this.errorMessage = '';\r\n      this.successMessage = '';\r\n\r\n      const request = {\r\n        currentPassword: this.changePasswordForm.get('currentPassword')?.value,\r\n        newPassword: this.changePasswordForm.get('newPassword')?.value,\r\n        confirmPassword: this.changePasswordForm.get('confirmPassword')?.value\r\n      };\r\n      \r\n      this.authService.changePassword(request).subscribe({\r\n        next: (response) => {\r\n          this.loading = false;\r\n          this.successMessage = this.translate('password_changed');\r\n          this.changePasswordForm.reset();\r\n        },\r\n        error: (error) => {\r\n          this.loading = false;\r\n          this.errorMessage = error.message || 'Failed to change password. Please try again.';\r\n        }\r\n      });\r\n    } else {\r\n      this.markFormGroupTouched();\r\n    }\r\n  }\r\n\r\n  private markFormGroupTouched(): void {\r\n    Object.keys(this.changePasswordForm.controls).forEach(key => {\r\n      const control = this.changePasswordForm.get(key);\r\n      control?.markAsTouched();\r\n    });\r\n  }\r\n\r\n  getFieldError(fieldName: string): string {\r\n    const field = this.changePasswordForm.get(fieldName);\r\n    if (field?.errors && field?.touched) {\r\n      if (field.errors['required']) {\r\n        return this.translate(`${fieldName}_required`);\r\n      }\r\n      if (field.errors['minlength']) {\r\n        return this.translate('password_min_length');\r\n      }\r\n    }\r\n    \r\n    // Check for password mismatch error\r\n    if (fieldName === 'confirmPassword' && this.changePasswordForm.errors?.['passwordMismatch']) {\r\n      return this.translate('passwords_not_match');\r\n    }\r\n    \r\n    return '';\r\n  }\r\n\r\n  goBack(): void {\r\n    this.router.navigate(['/dashboard']);\r\n  }\r\n\r\n  translate(key: string): string {\r\n    return this.translationService.translate(key);\r\n  }\r\n\r\n  toggleLanguage(): void {\r\n    this.langService.toggleLanguage();\r\n  }\r\n\r\n  isRTL(): boolean {\r\n    return this.translationService.isRTL();\r\n  }\r\n}\r\n", "<div class=\"change-password-container\">\r\n  <!-- Language Toggle -->\r\n  <div class=\"language-toggle\">\r\n    <div class=\"toggle-container\" [class.rtl]=\"isRTL()\" [class.ltr]=\"!isRTL()\">\r\n      <div class=\"toggle-option\" [class.active]=\"!isRTL()\">\r\n        <div class=\"flag-container\">\r\n          <svg class=\"flag\" viewBox=\"0 0 60 30\" width=\"20\" height=\"15\">\r\n            <clipPath id=\"uk-flag\">\r\n              <path d=\"M30,15 h30 v15 z v15 h-30 z h-30 v-15 z v-15 h30 z\"/>\r\n            </clipPath>\r\n            <path d=\"M0,0 v30 h60 v-30 z\" fill=\"#012169\"/>\r\n            <path d=\"M0,0 L60,30 M60,0 L0,30\" stroke=\"#fff\" stroke-width=\"6\"/>\r\n            <path d=\"M0,0 L60,30 M60,0 L0,30\" stroke=\"#C8102E\" stroke-width=\"4\" clip-path=\"url(#uk-flag)\"/>\r\n            <path d=\"M30,0 v30 M0,15 h60\" stroke=\"#fff\" stroke-width=\"10\"/>\r\n            <path d=\"M30,0 v30 M0,15 h60\" stroke=\"#C8102E\" stroke-width=\"6\"/>\r\n          </svg>\r\n        </div>\r\n        <span class=\"toggle-text\">EN</span>\r\n      </div>\r\n      <div class=\"toggle-option\" [class.active]=\"isRTL()\">\r\n        <div class=\"flag-container\">\r\n          <svg class=\"flag\" viewBox=\"0 0 640 480\" width=\"20\" height=\"15\">\r\n            <path fill=\"#00732f\" d=\"M0 0h640v160H0z\"/>\r\n            <path fill=\"#fff\" d=\"M0 160h640v160H0z\"/>\r\n            <path fill=\"#000\" d=\"M0 320h640v160H0z\"/>\r\n            <path fill=\"#ff0000\" d=\"M0 0h180v480H0z\"/>\r\n          </svg>\r\n        </div>\r\n        <span class=\"toggle-text\">AR</span>\r\n      </div>\r\n      <div class=\"toggle-slider\" [class.rtl]=\"isRTL()\" [class.ltr]=\"!isRTL()\"></div>\r\n      <button class=\"toggle-button\" (click)=\"toggleLanguage()\" [attr.aria-label]=\"isRTL() ? 'Switch to English' : 'Switch to Arabic'\"></button>\r\n    </div>\r\n  </div>\r\n\r\n  <!-- Hero Section -->\r\n  <div class=\"hero-section\">\r\n    <div class=\"hero-content\">\r\n      <div class=\"logo-container\">\r\n        <img src=\"/logo-white.png\" alt=\"EcoOffice\" class=\"hero-logo\">\r\n        <span class=\"logo-text\">EcoOffice</span>\r\n      </div>\r\n      <div class=\"slogan\">\r\n        <p>{{ translate('paperless_slogan') }}</p>\r\n      </div>\r\n    </div>\r\n    <div class=\"hero-illustration\"></div>\r\n  </div>\r\n\r\n  <!-- Form Section -->\r\n  <div class=\"form-section\">\r\n    <div class=\"form-container\">\r\n      <div class=\"form-header\">\r\n        <h1 class=\"title\">{{ translate('change_password') }}</h1>\r\n        <p class=\"subtitle\">{{ translate('login_hint') }}</p>\r\n      </div>\r\n\r\n      <form [formGroup]=\"changePasswordForm\" (ngSubmit)=\"onSubmit()\" class=\"change-password-form\">\r\n        <div class=\"form-group\">\r\n          <label [for]=\"'currentPassword'\" class=\"form-label\">{{ translate('current_password') }}</label>\r\n          <div class=\"password-input-container\">\r\n            <input\r\n              [type]=\"showCurrentPassword ? 'text' : 'password'\"\r\n              id=\"currentPassword\"\r\n              formControlName=\"currentPassword\"\r\n              class=\"form-control\"\r\n              [class.error]=\"getFieldError('currentPassword')\"\r\n              [placeholder]=\"translate('current_password')\"\r\n            >\r\n            <button\r\n              type=\"button\"\r\n              class=\"password-toggle\"\r\n              (click)=\"togglePasswordVisibility('currentPassword')\"\r\n              [attr.aria-label]=\"showCurrentPassword ? translate('hide') : translate('show')\"\r\n            >\r\n              <span class=\"toggle-text\">{{ showCurrentPassword ? translate('hide') : translate('show') }}</span>\r\n              <i class=\"toggle-icon\" [class]=\"showCurrentPassword ? 'eye-off' : 'eye'\"></i>\r\n            </button>\r\n          </div>\r\n          <div class=\"form-error\" *ngIf=\"getFieldError('currentPassword')\">\r\n            {{ getFieldError('currentPassword') }}\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"form-group\">\r\n          <label [for]=\"'newPassword'\" class=\"form-label\">{{ translate('new_password') }}</label>\r\n          <div class=\"password-input-container\">\r\n            <input\r\n              [type]=\"showNewPassword ? 'text' : 'password'\"\r\n              id=\"newPassword\"\r\n              formControlName=\"newPassword\"\r\n              class=\"form-control\"\r\n              [class.error]=\"getFieldError('newPassword')\"\r\n              [placeholder]=\"translate('new_password')\"\r\n            >\r\n            <button\r\n              type=\"button\"\r\n              class=\"password-toggle\"\r\n              (click)=\"togglePasswordVisibility('newPassword')\"\r\n              [attr.aria-label]=\"showNewPassword ? translate('hide') : translate('show')\"\r\n            >\r\n              <span class=\"toggle-text\">{{ showNewPassword ? translate('hide') : translate('show') }}</span>\r\n              <i class=\"toggle-icon\" [class]=\"showNewPassword ? 'eye-off' : 'eye'\"></i>\r\n            </button>\r\n          </div>\r\n          <div class=\"form-error\" *ngIf=\"getFieldError('newPassword')\">\r\n            {{ getFieldError('newPassword') }}\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"form-group\">\r\n          <label [for]=\"'confirmPassword'\" class=\"form-label\">{{ translate('confirm_new_password') }}</label>\r\n          <div class=\"password-input-container\">\r\n            <input\r\n              [type]=\"showConfirmPassword ? 'text' : 'password'\"\r\n              id=\"confirmPassword\"\r\n              formControlName=\"confirmPassword\"\r\n              class=\"form-control\"\r\n              [class.error]=\"getFieldError('confirmPassword')\"\r\n              [placeholder]=\"translate('confirm_new_password')\"\r\n            >\r\n            <button\r\n              type=\"button\"\r\n              class=\"password-toggle\"\r\n              (click)=\"togglePasswordVisibility('confirmPassword')\"\r\n              [attr.aria-label]=\"showConfirmPassword ? translate('hide') : translate('show')\"\r\n            >\r\n              <span class=\"toggle-text\">{{ showConfirmPassword ? translate('hide') : translate('show') }}</span>\r\n              <i class=\"toggle-icon\" [class]=\"showConfirmPassword ? 'eye-off' : 'eye'\"></i>\r\n            </button>\r\n          </div>\r\n          <div class=\"form-error\" *ngIf=\"getFieldError('confirmPassword')\">\r\n            {{ getFieldError('confirmPassword') }}\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"form-actions\">\r\n          <button\r\n            type=\"submit\"\r\n            class=\"btn btn-primary change-btn\"\r\n            [disabled]=\"loading\"\r\n          >\r\n            <span *ngIf=\"!loading\">{{ translate('change_password') }}</span>\r\n            <span *ngIf=\"loading\">{{ translate('loading') }}</span>\r\n          </button>\r\n        </div>\r\n\r\n        <div class=\"form-footer\">\r\n          <a (click)=\"goBack()\" class=\"back-link\">\r\n            {{ translate('profile') }}\r\n          </a>\r\n        </div>\r\n\r\n        <div class=\"success-message\" *ngIf=\"successMessage\">\r\n          {{ successMessage }}\r\n        </div>\r\n\r\n        <div class=\"error-message\" *ngIf=\"errorMessage\">\r\n          {{ errorMessage }}\r\n        </div>\r\n      </form>\r\n    </div>\r\n  </div>\r\n</div>\r\n", "import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\n\r\nimport { LoginComponent } from './login/login.component';\r\nimport { RequestResetComponent } from './request-reset/request-reset.component';\r\nimport { ResetPasswordComponent } from './reset-password/reset-password.component';\r\nimport { ChangePasswordComponent } from './change-password/change-password.component';\r\n\r\nconst routes: Routes = [\r\n  { path: 'login', component: LoginComponent },\r\n  { path: 'request-reset', component: RequestResetComponent },\r\n  { path: 'reset-password', component: ResetPasswordComponent },\r\n  { path: 'reset-password/:token', component: ResetPasswordComponent },\r\n  { path: 'change-password', component: ChangePasswordComponent },\r\n  { path: '', redirectTo: 'login', pathMatch: 'full' }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AuthRoutingModule { }\r\n", "import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { RouterModule } from '@angular/router';\r\n\r\nimport { LoginComponent } from './login/login.component';\r\nimport { RequestResetComponent } from './request-reset/request-reset.component';\r\nimport { ResetPasswordComponent } from './reset-password/reset-password.component';\r\nimport { ChangePasswordComponent } from './change-password/change-password.component';\r\nimport { AuthRoutingModule } from './auth-routing.module';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    LoginComponent,\r\n    RequestResetComponent,\r\n    ResetPasswordComponent,\r\n    ChangePasswordComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    ReactiveFormsModule,\r\n    RouterModule,\r\n    AuthRoutingModule\r\n  ]\r\n})\r\nexport class AuthModule { }\r\n"],
  "mappings": "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",
  "names": []
}
