{
  "version": 3,
  "sources": ["src/app/services/employees.service.ts", "src/app/components/employees/employees-list/employees.ts", "src/app/components/employees/employees-list/employees.html", "src/app/components/employees/edit-employee/edit-employee.ts", "src/app/components/employees/edit-employee/edit-employee.html", "src/app/components/employees/add-employee/add-employee.ts", "src/app/components/employees/add-employee/add-employee.html", "src/app/components/employees/employees-routing-module.ts", "src/app/components/employees/employees-module.ts"],
  "sourcesContent": ["import { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { environment } from '../../environments/environment';\r\nimport { Observable } from 'rxjs';\r\nimport { Employee, EmployeeRoot } from '../models/employee.model';\r\n\r\nexport interface EmployeeSearchParams {\r\n  page?: number;\r\n  pageSize?: number;\r\n  search?: string;\r\n}\r\n\r\nexport interface EmployeeKpiTrend {\r\n  date: string;\r\n  averageKpiScore: number;\r\n  totalEmployees: number;\r\n  highPerformers: number;\r\n  averagePerformers: number;\r\n  lowPerformers: number;\r\n}\r\n\r\nexport interface EmployeeKpiTrendResponse {\r\n  trendData: EmployeeKpiTrend[];\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class EmployeesService {\r\n  private apiUrl = `${environment.apiBaseUrl}/Employees`;\r\n\r\n  constructor(private http: HttpClient) {}\r\n\r\n  getEmployees(params: EmployeeSearchParams = {}): Observable<EmployeeRoot> {\r\n    let httpParams = new HttpParams();\r\n    \r\n    if (params.page) httpParams = httpParams.set('page', params.page.toString());\r\n    if (params.pageSize) httpParams = httpParams.set('pageSize', params.pageSize.toString());\r\n    if (params.search) httpParams = httpParams.set('search', params.search);\r\n    \r\n    return this.http.get<EmployeeRoot>(this.apiUrl, { params: httpParams });\r\n  }\r\n\r\n  getEmployee(id: string): Observable<Employee> {\r\n    return this.http.get<Employee>(`${this.apiUrl}/${id}`);\r\n  }\r\n\r\n  addEmployee(employee: Partial<Employee>): Observable<Employee> {\r\n    return this.http.post<Employee>(this.apiUrl, employee);\r\n  }\r\n\r\n  updateEmployee(id: string, employee: Partial<Employee>): Observable<Employee> {\r\n    return this.http.put<Employee>(`${this.apiUrl}/${id}`, employee);\r\n  }\r\n\r\n  deleteEmployee(id: string): Observable<void> {\r\n    return this.http.delete<void>(`${this.apiUrl}/${id}`);\r\n  }\r\n\r\n  getEmployeeKpiTrend(date?: string): Observable<EmployeeKpiTrendResponse> {\r\n    let url = `${environment.apiBaseUrl}/Dashboard/employees/kpi-trend`;\r\n    if (date) {\r\n      url += `?date=${date}`;\r\n    }\r\n    return this.http.get<EmployeeKpiTrendResponse>(url);\r\n  }\r\n}\r\n", "import { Component, signal, OnInit, inject } from '@angular/core';\r\nimport { EmployeesService, EmployeeKpiTrend, EmployeeSearchParams } from '../../../services/employees.service';\r\nimport { Employee } from '../../../models/employee.model';\r\nimport { TranslationService } from '../../../services/translation.service';\r\nimport { Router } from '@angular/router';\r\nimport { LangService } from '../../../services/lang.service';\r\nimport { EChartsOption } from 'echarts';\r\nimport { ApexOptions } from 'ng-apexcharts';\r\n\r\n@Component({\r\n  selector: 'app-employees',\r\n  standalone: false,\r\n  templateUrl: './employees.html',\r\n  styleUrl: './employees.css'\r\n})\r\nexport class Employees implements OnInit {\r\n  private employeesService = inject(EmployeesService);\r\n  private translationService = inject(TranslationService);\r\n  private router = inject(Router);\r\n  private langService = inject(LangService);\r\n\r\n  // Data\r\n  employees: Employee[] = [];\r\n  allEmployees: Employee[] = []; // Store all employees for filtering\r\n  kpiTrendData: EmployeeKpiTrend[] = [];\r\n  filteredKpiTrendData: EmployeeKpiTrend[] = [];\r\n  totalCount = 0;\r\n  currentPage = 1;\r\n  pageSize = 6;\r\n  searchTerm = '';\r\n  \r\n  // UI State\r\n  loading = signal(false);\r\n  viewMode = signal<'cards' | 'table'>('cards');\r\n  showDeleteModalFlag = signal(false);\r\n  showSuccessModalFlag = signal(false);\r\n  employeeToDeleteFlag = signal<Employee | null>(null);\r\n  successMessageFlag = signal('');\r\n  \r\n  // Date Filter State\r\n  startDate = signal<string>('');\r\n  endDate = signal<string>('');\r\n  employeeFilterDate = signal<string>('');\r\n  \r\n  // Language\r\n  currentLang = signal<'ar' | 'en'>('en');\r\n  isRTL = signal(false);\r\n\r\n  // ECharts Options\r\n  totalEmployeesChartOptions: EChartsOption = {};\r\n  echartsInitOpts = {\r\n    renderer: 'canvas' as const,\r\n    useDirtyRect: false\r\n  };\r\n\r\n  // ApexCharts Options for KPI Radial Chart\r\n  kpiRadialChart: ApexOptions = {\r\n    series: [0],\r\n    chart: {\r\n      type: 'radialBar',\r\n      height: 320,\r\n      width: '100%'\r\n    },\r\n    plotOptions: {\r\n      radialBar: {\r\n        startAngle: -90,\r\n        endAngle: 90,\r\n        track: {\r\n          background: '#f1f1f1',\r\n          strokeWidth: '97%',\r\n          margin: 5\r\n        },\r\n        dataLabels: {\r\n          name: {\r\n            show: false\r\n          },\r\n          value: {\r\n            offsetY: -2,\r\n            fontSize: '28px',\r\n            fontWeight: 'bold',\r\n            color: '#2BA149',\r\n            formatter: function (val: any) {\r\n              return val + '%';\r\n            }\r\n          }\r\n        }\r\n      }\r\n    },\r\n    colors: ['#2BA149'],\r\n    labels: ['KPI Score'],\r\n    stroke: {\r\n      lineCap: 'round'\r\n    },\r\n    fill: {\r\n      type: 'solid',\r\n      colors: ['#2BA149']\r\n    }\r\n  };\r\n\r\n  // Math object for template\r\n  Math = Math;\r\n\r\n  ngOnInit() {\r\n    this.initializeLanguage();\r\n    this.loadEmployees();\r\n    this.loadKpiTrendData();\r\n  }\r\n\r\n  private initializeLanguage() {\r\n    this.langService.currentLang$.subscribe(lang => {\r\n      this.currentLang.set(lang);\r\n      this.isRTL.set(lang === 'ar');\r\n    });\r\n  }\r\n\r\n  private loadEmployees() {\r\n    this.loading.set(true);\r\n    \r\n    const params: EmployeeSearchParams = {\r\n      page: this.currentPage,\r\n      pageSize: this.pageSize,\r\n      search: this.searchTerm || undefined\r\n    };\r\n    \r\n    this.employeesService.getEmployees(params).subscribe({\r\n      next: (res) => {\r\n        this.employees = res.data.items;\r\n        this.allEmployees = [...res.data.items]; // Store all employees\r\n        this.totalCount = res.data.totalCount;\r\n        this.currentPage = res.data.page;\r\n        this.pageSize = res.data.pageSize;\r\n\r\n        this.loading.set(false);\r\n      },\r\n      error: (error) => {\r\n        console.error('Error loading employees:', error);\r\n        this.loading.set(false);\r\n      }\r\n    });\r\n  }\r\n\r\n  private loadKpiTrendData(date?: string) {\r\n    this.employeesService.getEmployeeKpiTrend(date).subscribe({\r\n      next: (res) => {\r\n        this.kpiTrendData = res.trendData;\r\n        this.filteredKpiTrendData = [...this.kpiTrendData];\r\n        this.initializeDateRange();\r\n        // Initialize charts after data is loaded\r\n        setTimeout(() => {\r\n          this.initializeCharts();\r\n        }, 200);\r\n      },\r\n      error: (error) => {\r\n        console.error('Error loading KPI trend data:', error);\r\n      }\r\n    });\r\n  }\r\n\r\n  private initializeDateRange() {\r\n    if (this.kpiTrendData.length > 0) {\r\n      const dates = this.kpiTrendData.map(d => new Date(d.date)).sort((a, b) => a.getTime() - b.getTime());\r\n      this.startDate.set(dates[0].toISOString().split('T')[0]);\r\n      this.endDate.set(dates[dates.length - 1].toISOString().split('T')[0]);\r\n    }\r\n  }\r\n\r\n  maxDate(): string {\r\n    return new Date().toISOString().split('T')[0];\r\n  }\r\n\r\n  onStartDateChange(event: Event) {\r\n    const target = event.target as HTMLInputElement;\r\n    this.startDate.set(target.value);\r\n  }\r\n\r\n  onEndDateChange(event: Event) {\r\n    const target = event.target as HTMLInputElement;\r\n    this.endDate.set(target.value);\r\n  }\r\n\r\n  applyDateFilter() {\r\n    if (!this.startDate() || !this.endDate()) {\r\n      this.filteredKpiTrendData = [...this.kpiTrendData];\r\n      return;\r\n    }\r\n\r\n    const start = new Date(this.startDate());\r\n    const end = new Date(this.endDate());\r\n    \r\n    this.filteredKpiTrendData = this.kpiTrendData.filter(data => {\r\n      const dataDate = new Date(data.date);\r\n      return dataDate >= start && dataDate <= end;\r\n    });\r\n  }\r\n\r\n  resetDateFilter() {\r\n    this.filteredKpiTrendData = [...this.kpiTrendData];\r\n    this.initializeDateRange();\r\n  }\r\n\r\n  // Employee Date Filter Methods\r\n  onEmployeeDateChange(event: Event) {\r\n    const target = event.target as HTMLInputElement;\r\n    this.employeeFilterDate.set(target.value);\r\n  }\r\n\r\n  applyEmployeeFilter() {\r\n    if (!this.employeeFilterDate()) {\r\n      this.employees = [...this.allEmployees];\r\n      return;\r\n    }\r\n\r\n    const filterDate = new Date(this.employeeFilterDate());\r\n    filterDate.setHours(0, 0, 0, 0); // Set to start of day\r\n    \r\n    this.employees = this.allEmployees.filter(employee => {\r\n      const hireDate = new Date(employee.hireDate);\r\n      hireDate.setHours(0, 0, 0, 0); // Set to start of day\r\n      return hireDate.getTime() === filterDate.getTime();\r\n    });\r\n\r\n    this.totalCount = this.employees.length;\r\n    this.currentPage = 1; // Reset to first page\r\n  }\r\n\r\n  resetEmployeeFilter() {\r\n    this.employees = [...this.allEmployees];\r\n    this.employeeFilterDate.set('');\r\n    this.totalCount = this.allEmployees.length;\r\n    this.currentPage = 1;\r\n  }\r\n\r\n  // Unified Filter Methods\r\n  applyUnifiedFilter() {\r\n    const selectedDate = this.employeeFilterDate();\r\n    \r\n    if (!selectedDate) {\r\n      // Reset both employee and KPI data to show all\r\n      this.resetUnifiedFilter();\r\n      return;\r\n    }\r\n\r\n    // Filter employees by hire date\r\n    this.applyEmployeeFilter();\r\n    \r\n    // Load KPI data for the selected date\r\n    this.loadKpiTrendData(selectedDate);\r\n  }\r\n\r\n  resetUnifiedFilter() {\r\n    // Reset employee filter\r\n    this.employees = [...this.allEmployees];\r\n    this.employeeFilterDate.set('');\r\n    this.totalCount = this.allEmployees.length;\r\n    this.currentPage = 1;\r\n    \r\n    // Reset KPI data to show all\r\n    this.loadKpiTrendData();\r\n  }\r\n\r\n  changePage(page: number) {\r\n    if (page >= 1 && page <= this.totalPages) {\r\n      this.currentPage = page;\r\n      this.loadEmployees();\r\n    }\r\n  }\r\n\r\n  onSearchChange(searchTerm: string) {\r\n    this.searchTerm = searchTerm;\r\n    this.currentPage = 1;\r\n    this.loadEmployees();\r\n  }\r\n\r\n  onSearchClick() {\r\n    this.currentPage = 1;\r\n    this.loadEmployees();\r\n  }\r\n\r\n  clearSearch() {\r\n    this.searchTerm = '';\r\n    this.currentPage = 1;\r\n    this.loadEmployees();\r\n  }\r\n\r\n  onPageSizeChange(newPageSize: number) {\r\n    this.pageSize = newPageSize;\r\n    this.currentPage = 1;\r\n    this.loadEmployees();\r\n  }\r\n\r\n  get totalPages(): number {\r\n    return Math.ceil(this.totalCount / this.pageSize);\r\n  }\r\n\r\n  get pages(): number[] {\r\n    const pages: number[] = [];\r\n    const maxVisiblePages = 5;\r\n    \r\n    if (this.totalPages === 0) {\r\n      pages.push(1);\r\n      return pages;\r\n    }\r\n    \r\n    let startPage = Math.max(1, this.currentPage - Math.floor(maxVisiblePages / 2));\r\n    let endPage = Math.min(this.totalPages, startPage + maxVisiblePages - 1);\r\n    \r\n    if (endPage - startPage + 1 < maxVisiblePages) {\r\n      startPage = Math.max(1, endPage - maxVisiblePages + 1);\r\n    }\r\n    \r\n    for (let i = startPage; i <= endPage; i++) {\r\n      pages.push(i);\r\n    }\r\n    \r\n    return pages;\r\n  }\r\n\r\n  getFullName(employee: Employee): string {\r\n    return `${employee.firstName} ${employee.lastName}`;\r\n  }\r\n\r\n  getInitials(employee: Employee): string {\r\n    return `${employee.firstName.charAt(0)}${employee.lastName.charAt(0)}`.toUpperCase();\r\n  }\r\n\r\n  getStatusClass(isActive: boolean): string {\r\n    return isActive ? 'status-active' : 'status-inactive';\r\n  }\r\n\r\n  copyToClipboard(text: string) {\r\n    navigator.clipboard.writeText(text).then(() => {\r\n      // Could show a toast notification here\r\n      console.log('Copied to clipboard:', text);\r\n    });\r\n  }\r\n\r\n  goToEdit(id: string) {\r\n    this.router.navigate(['/employees/edit', id]);\r\n  }\r\n\r\n  // KPI Trend Helper Methods\r\n  getLatestKpiScore(): number {\r\n    if (this.filteredKpiTrendData.length === 0) return 0;\r\n    return Math.round(this.filteredKpiTrendData[this.filteredKpiTrendData.length - 1].averageKpiScore);\r\n  }\r\n\r\n  getLatestTotalEmployees(): number {\r\n    if (this.filteredKpiTrendData.length === 0) return 0;\r\n    return this.filteredKpiTrendData[this.filteredKpiTrendData.length - 1].totalEmployees;\r\n  }\r\n\r\n  getLatestHighPerformers(): number {\r\n    if (this.filteredKpiTrendData.length === 0) return 0;\r\n    return this.filteredKpiTrendData[this.filteredKpiTrendData.length - 1].highPerformers;\r\n  }\r\n\r\n  getLatestLowPerformers(): number {\r\n    if (this.filteredKpiTrendData.length === 0) return 0;\r\n    return this.filteredKpiTrendData[this.filteredKpiTrendData.length - 1].lowPerformers;\r\n  }\r\n\r\n  getHighPerformersPercentage(): number {\r\n    if (this.kpiTrendData.length === 0) return 0;\r\n    const latest = this.kpiTrendData[this.kpiTrendData.length - 1];\r\n    const total = latest.totalEmployees;\r\n    return total > 0 ? (latest.highPerformers / total) * 100 : 0;\r\n  }\r\n\r\n  getLowPerformersPercentage(): number {\r\n    if (this.kpiTrendData.length === 0) return 0;\r\n    const latest = this.kpiTrendData[this.kpiTrendData.length - 1];\r\n    const total = latest.totalEmployees;\r\n    return total > 0 ? (latest.lowPerformers / total) * 100 : 0;\r\n  }\r\n\r\n  getKpiScorePath(): string {\r\n    if (this.filteredKpiTrendData.length < 2) return '';\r\n    \r\n    const width = 300;\r\n    const height = 60;\r\n    const step = width / (this.filteredKpiTrendData.length - 1);\r\n    \r\n    let path = `M 0 ${height - (this.filteredKpiTrendData[0].averageKpiScore / 100) * height}`;\r\n    \r\n    for (let i = 1; i < this.filteredKpiTrendData.length; i++) {\r\n      const x = i * step;\r\n      const y = height - (this.filteredKpiTrendData[i].averageKpiScore / 100) * height;\r\n      path += ` L ${x} ${y}`;\r\n    }\r\n    \r\n    return path;\r\n  }\r\n\r\n  getEmployeesPath(): string {\r\n    if (this.filteredKpiTrendData.length < 2) return '';\r\n    \r\n    const width = 300;\r\n    const height = 60;\r\n    const maxEmployees = Math.max(...this.filteredKpiTrendData.map(d => d.totalEmployees));\r\n    const step = width / (this.filteredKpiTrendData.length - 1);\r\n    \r\n    let path = `M 0 ${height - (this.filteredKpiTrendData[0].totalEmployees / maxEmployees) * height}`;\r\n    \r\n    for (let i = 1; i < this.filteredKpiTrendData.length; i++) {\r\n      const x = i * step;\r\n      const y = height - (this.filteredKpiTrendData[i].totalEmployees / maxEmployees) * height;\r\n      path += ` L ${x} ${y}`;\r\n    }\r\n    \r\n    return path;\r\n  }\r\n\r\n  // ECharts Initialization Methods\r\n  initializeTotalEmployeesChart(): void {\r\n    const totalEmployees = this.getLatestTotalEmployees();\r\n    \r\n    // Ensure we have valid data\r\n    if (totalEmployees === null || totalEmployees === undefined || isNaN(totalEmployees)) {\r\n      this.totalEmployeesChartOptions = {};\r\n      return;\r\n    }\r\n    \r\n    // Single color for all elements\r\n    const chartColor = '#34495E'; // Tech Blue 600\r\n    \r\n    this.totalEmployeesChartOptions = {\r\n      grid: {\r\n        top: '20%',\r\n        left: '5%',\r\n        right: '5%',\r\n      },\r\n      series: [\r\n        {\r\n          type: 'gauge',\r\n          startAngle: 200,\r\n          endAngle: -20,\r\n          min: 0,\r\n          max: Math.max(totalEmployees, 100),\r\n          splitNumber: 10,\r\n          radius: '80%',\r\n          axisLine: {\r\n            lineStyle: {\r\n              width: 6,\r\n              color: [[1, chartColor]]\r\n            }\r\n          },\r\n          progress: {\r\n            show: true,\r\n            width: 6,\r\n            itemStyle: {\r\n              color: chartColor\r\n            }\r\n          },\r\n          pointer: {\r\n            show: true,\r\n            length: '80%',\r\n            width: 3,\r\n            itemStyle: {\r\n              color: chartColor\r\n            }\r\n          },\r\n          axisTick: {\r\n            show: true,\r\n            distance: -18,\r\n            length: 8,\r\n            lineStyle: {\r\n              color: '#999',\r\n              width: 1\r\n            }\r\n          },\r\n          splitLine: {\r\n            show: true,\r\n            distance: -30,\r\n            length: 15,\r\n            lineStyle: {\r\n              color: '#34495E',\r\n              width: 1\r\n            }\r\n          },\r\n          axisLabel: {\r\n            show: true,\r\n            distance:-5,\r\n            color: '#666',\r\n            fontSize: 10\r\n          },\r\n          detail: {\r\n            show: true,\r\n            fontSize: 40,\r\n            offsetCenter: [0, '60%'],\r\n            formatter: '{value}',\r\n            color: chartColor,\r\n            fontWeight: 'bold'\r\n          },\r\n          data: [\r\n            {\r\n              value: totalEmployees\r\n            }\r\n          ]\r\n        }\r\n      ]\r\n    };\r\n  }\r\n\r\n  // Initialize KPI Radial Chart using ApexCharts\r\n  initializeKpiRadialChart(): void {\r\n    const kpiScore = this.getLatestKpiScore();\r\n    \r\n    // Update only the series value\r\n    this.kpiRadialChart.series = [kpiScore];\r\n  }\r\n\r\n  // Method to initialize all charts\r\n  initializeCharts(): void {\r\n    try {\r\n      console.log('Initializing charts...');\r\n      this.initializeTotalEmployeesChart();\r\n      this.initializeKpiRadialChart();\r\n      console.log('Charts initialized successfully');\r\n    } catch (error) {\r\n      console.error('Error initializing charts:', error);\r\n    }\r\n  }\r\n\r\n  goAddEmployee() {\r\n    this.router.navigate(['/employees/add']);\r\n  }\r\n\r\n  openDeleteModal(employee: Employee) {\r\n    this.employeeToDeleteFlag.set(employee);\r\n    this.showDeleteModalFlag.set(true);\r\n  }\r\n\r\n  closeDeleteModal() {\r\n    this.showDeleteModalFlag.set(false);\r\n    this.employeeToDeleteFlag.set(null);\r\n  }\r\n\r\n  confirmDelete() {\r\n    const employee = this.employeeToDeleteFlag();\r\n    console.log('Confirm delete called, employee:', employee);\r\n    if (employee) {\r\n      console.log('Proceeding with delete for employee ID:', employee.id);\r\n      this.deleteEmployee(employee.id);\r\n    } else {\r\n      console.error('No employee selected for deletion');\r\n    }\r\n  }\r\n\r\n  private deleteEmployee(id: string) {\r\n    console.log('Attempting to delete employee with ID:', id);\r\n    this.loading.set(true);\r\n    \r\n    this.employeesService.deleteEmployee(id).subscribe({\r\n      next: (response) => {\r\n        console.log('Delete API response:', response);\r\n        this.loading.set(false);\r\n        this.displaySuccessModal('employees.deleted_success');\r\n        this.closeDeleteModal();\r\n        this.loadEmployees(); // Reload the list\r\n      },\r\n      error: (error) => {\r\n        console.error('Error deleting employee:', error);\r\n        this.loading.set(false);\r\n        \r\n        // Show error message to user\r\n        if (error.status === 404) {\r\n          this.displaySuccessModal('employees.delete_error_not_found');\r\n        } else if (error.status === 403) {\r\n          this.displaySuccessModal('employees.delete_error_permission');\r\n        } else {\r\n          this.displaySuccessModal('employees.delete_error_general');\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  private displaySuccessModal(messageKey: string) {\r\n    this.successMessageFlag.set(this.translate(messageKey));\r\n    this.showSuccessModalFlag.set(true);\r\n    this.loading.set(false);\r\n  }\r\n\r\n  closeSuccessModal() {\r\n    this.showSuccessModalFlag.set(false);\r\n    this.successMessageFlag.set('');\r\n  }\r\n\r\n  // Getters for template\r\n  showDeleteModal() {\r\n    return this.showDeleteModalFlag();\r\n  }\r\n\r\n  showSuccessModal() {\r\n    return this.showSuccessModalFlag();\r\n  }\r\n\r\n  employeeToDelete() {\r\n    return this.employeeToDeleteFlag();\r\n  }\r\n\r\n  successMessage() {\r\n    return this.successMessageFlag();\r\n  }\r\n\r\n  getDeleteMessage(): string {\r\n    const employee = this.employeeToDelete();\r\n    if (employee) {\r\n      const name = this.getFullName(employee);\r\n      return this.translate('employees.confirm_delete_message').replace('%name%', name);\r\n    }\r\n    return this.translate('employees.confirm_delete');\r\n  }\r\n\r\n\r\n\r\n  // Translation helper\r\n  translate(key: string): string {\r\n    return this.translationService.translate(key);\r\n  }\r\n}\r\n", "<div class=\"employees-page rounded-5\" [class.rtl]=\"isRTL()\">\r\n  <!-- Top Bar -->\r\n\r\n\r\n\r\n\r\n  <!-- Page Title -->\r\n  <h1 class=\"page-title\">{{ translate('employees.title') }}</h1>\r\n\r\n  <!-- Unified Date Filter -->\r\n  <div class=\"employee-filter-section\">\r\n    <div class=\"filter-header\">\r\n      <h3 class=\"filter-title\">{{ translate('employees.filter.title') }}</h3>\r\n      <p class=\"filter-subtitle\">{{ translate('employees.filter.subtitle') }}</p>\r\n    </div>\r\n    \r\n    <div class=\"employee-date-filter\">\r\n      <button class=\"reset-filter-btn\" (click)=\"resetUnifiedFilter()\">\r\n        <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\">\r\n          <path d=\"M3 12a9 9 0 0 1 9-9 9.75 9.75 0 0 1 6.74 2.74L21 8\"/>\r\n          <path d=\"M21 3v5h-5\"/>\r\n          <path d=\"M21 12a9 9 0 0 1-9 9 9.75 9.75 0 0 1-6.74-2.74L3 16\"/>\r\n          <path d=\"M3 21v-5h5\"/>\r\n        </svg>\r\n        {{ translate('employees.filter.resetFilter') }}\r\n      </button>\r\n      <button class=\"filter-btn\" (click)=\"applyUnifiedFilter()\">\r\n        <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\">\r\n          <path d=\"M3 4a1 1 0 0 1 1-1h16a1 1 0 0 1 1 1v2.586a1 1 0 0 1-.293.707l-6.414 6.414a1 1 0 0 0-.293.707V17l-4 4v-6.586a1 1 0 0 0-.293-.707L3.293 7.207A1 1 0 0 1 3 6.5V4z\"/>\r\n        </svg>\r\n        {{ translate('employees.filter.applyFilter') }}\r\n      </button>\r\n     \r\n      <div class=\"date-filter-group\">\r\n        <label class=\"date-label\">{{ translate('employees.filter.hireDate') }}</label>\r\n        <input \r\n          type=\"date\" \r\n          class=\"date-input\" \r\n          [value]=\"employeeFilterDate()\" \r\n          (change)=\"onEmployeeDateChange($event)\"\r\n          [max]=\"maxDate()\">\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <!-- Employee KPI Trend Chart -->\r\n  <div class=\"kpi-trend-section\" *ngIf=\"kpiTrendData.length > 0\">\r\n    <div class=\"kpi-trend-header\">\r\n      <h2 class=\"kpi-trend-title\">{{ translate('employees.kpi_trend.title') }}</h2>\r\n      <p class=\"kpi-trend-subtitle\">{{ translate('employees.kpi_trend.subtitle') }}</p>\r\n    </div>\r\n    \r\n    <div class=\"kpi-trend-cards\">\r\n      <!-- Average KPI Score Card -->\r\n      <div class=\"kpi-trend-card kpi-score-card\">\r\n        <div class=\"card-header\">\r\n          <div class=\"card-icon\">\r\n            <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\">\r\n              <path d=\"M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z\"/>\r\n            </svg>\r\n          </div>\r\n          <div class=\"card-info\">\r\n            <h3 class=\"card-title\">{{ translate('employees.kpi_trend.averageScore') }}</h3>\r\n            <div class=\"card-value\">{{ getLatestKpiScore() }}%</div>\r\n          </div>\r\n        </div>\r\n        <div class=\"card-chart\">\r\n          <div class=\"kpi-radial-chart\">\r\n            <apx-chart\r\n              [series]=\"kpiRadialChart.series!\"\r\n              [chart]=\"kpiRadialChart.chart!\"\r\n              [plotOptions]=\"kpiRadialChart.plotOptions!\"\r\n              [labels]=\"kpiRadialChart.labels!\"\r\n              [colors]=\"kpiRadialChart.colors!\"\r\n              [stroke]=\"kpiRadialChart.stroke!\"\r\n              [fill]=\"kpiRadialChart.fill!\">\r\n            </apx-chart>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- Total Employees Card -->\r\n      <div class=\"kpi-trend-card employees-count-card\">\r\n        <div class=\"card-header\">\r\n          <div class=\"card-icon\">\r\n            <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\">\r\n              <path d=\"M17 21v-2a4 4 0 0 0-4-4H5a4 4 0 0 0-4 4v2\"/>\r\n              <circle cx=\"9\" cy=\"7\" r=\"4\"/>\r\n              <path d=\"M23 21v-2a4 4 0 0 0-3-3.87\"/>\r\n              <path d=\"M16 3.13a4 4 0 0 1 0 7.75\"/>\r\n            </svg>\r\n          </div>\r\n          <div class=\"card-info\">\r\n            <h3 class=\"card-title\">{{ translate('employees.kpi_trend.totalEmployees') }}</h3>\r\n            <div class=\"card-value\">{{ getLatestTotalEmployees() }}</div>\r\n          </div>\r\n        </div>\r\n        <div class=\"card-chart\">\r\n          <div class=\"echarts-container\" style=\"height: 250px; width: 90%;\">\r\n            <div echarts\r\n                 [options]=\"totalEmployeesChartOptions\"\r\n                 [initOpts]=\"echartsInitOpts\"\r\n                 class=\"echarts-chart\">\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- Performance Distribution Card -->\r\n      <div class=\"kpi-trend-card performance-card\">\r\n        <div class=\"card-header\">\r\n          <div class=\"card-icon\">\r\n            <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\">\r\n              <path d=\"M3 3v18h18\"/>\r\n              <path d=\"M18.7 8l-5.1 5.2-2.8-2.7L7 14.3\"/>\r\n            </svg>\r\n          </div>\r\n          <div class=\"card-info\">\r\n            <h3 class=\"card-title\">{{ translate('employees.kpi_trend.performance') }}</h3>\r\n            <div class=\"performance-stats\">\r\n              <div class=\"stat-item\">\r\n                <span class=\"stat-label\">{{ translate('employees.kpi_trend.high') }}</span>\r\n                <span class=\"stat-value high\">{{ getLatestHighPerformers() }}</span>\r\n              </div>\r\n              <div class=\"stat-item\">\r\n                <span class=\"stat-label\">{{ translate('employees.kpi_trend.low') }}</span>\r\n                <span class=\"stat-value low\">{{ getLatestLowPerformers() }}</span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"card-chart\">\r\n          <div class=\"performance-chart\">\r\n            <div class=\"chart-bars\">\r\n              <div class=\"bar high-bar\" [style.height.%]=\"getHighPerformersPercentage()\"></div>\r\n              <div class=\"bar low-bar\" [style.height.%]=\"getLowPerformersPercentage()\"></div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <!-- Loading State -->\r\n  <div class=\"loading-state\" *ngIf=\"loading()\">\r\n    <div class=\"spinner\"></div>\r\n    <p>{{ translate('common.loading') }}</p>\r\n  </div>\r\n\r\n  <!-- Empty State -->\r\n  <div class=\"empty-state\" *ngIf=\"!loading() && employees.length === 0\">\r\n    <svg class=\"empty-icon\" width=\"64\" height=\"64\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"1\">\r\n      <path d=\"M17 21v-2a4 4 0 0 0-4-4H5a4 4 0 0 0-4 4v2\"></path>\r\n      <circle cx=\"9\" cy=\"7\" r=\"4\"></circle>\r\n      <path d=\"M23 21v-2a4 4 0 0 0-3-3.87\"></path>\r\n      <path d=\"M16 3.13a4 4 0 0 1 0 7.75\"></path>\r\n    </svg>\r\n    <h3>{{ translate('employees.no_employees_found') }}</h3>\r\n    <p>{{ translate('employees.get_started_message') }}</p>\r\n    <button class=\"add-employee-btn\" routerLink=\"/employees/add\">\r\n      {{ translate('employees.add_employee') }}\r\n    </button>\r\n  </div>\r\n\r\n  <div class=\"top-bar\">\r\n    <!-- LTR: Button on right, view toggle on left -->\r\n    <div class=\"top-bar-left\" [class.ltr-right]=\"!isRTL()\">\r\n      <button class=\"add-employee-btn\" (click)=\"goAddEmployee()\">\r\n        <svg class=\"plus-icon\" width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\">\r\n          <line x1=\"12\" y1=\"5\" x2=\"12\" y2=\"19\"></line>\r\n          <line x1=\"5\" y1=\"12\" x2=\"19\" y2=\"12\"></line>\r\n        </svg>\r\n        {{ translate('employees.add_employee') }}\r\n      </button>\r\n    </div>\r\n    <div class=\"top-bar-right\" [class.ltr-left]=\"!isRTL()\">\r\n      <div class=\"view-toggle\">\r\n        <button \r\n          class=\"toggle-btn\" \r\n          [class.active]=\"viewMode() === 'cards'\"\r\n          (click)=\"viewMode.set('cards')\">\r\n          <svg width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\">\r\n            <rect x=\"3\" y=\"3\" width=\"7\" height=\"7\"></rect>\r\n            <rect x=\"14\" y=\"3\" width=\"7\" height=\"7\"></rect>\r\n            <rect x=\"14\" y=\"14\" width=\"7\" height=\"7\"></rect>\r\n            <rect x=\"3\" y=\"14\" width=\"7\" height=\"7\"></rect>\r\n          </svg>\r\n          {{ translate('employees.view_cards') }}\r\n        </button>\r\n        <button \r\n          class=\"toggle-btn\" \r\n          [class.active]=\"viewMode() === 'table'\"\r\n          (click)=\"viewMode.set('table')\">\r\n          <svg width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\">\r\n            <path d=\"M3 3h18v18H3zM21 9H3M21 15H3M12 9v12\"></path>\r\n          </svg>\r\n          {{ translate('employees.view_table') }}\r\n        </button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n    <!-- Search Section -->\r\n    <div class=\"search-section mb-4\">\r\n      <div class=\"row\">\r\n        <div class=\"col-md-5\">\r\n          <div class=\"search-input-wrapper\">\r\n            <i class=\"bi bi-search search-icon\"></i>\r\n             <input \r\n               type=\"text\" \r\n               class=\"form-control search-input\" \r\n               [placeholder]=\"translate('employees.search_employees')\"\r\n               [(ngModel)]=\"searchTerm\"\r\n               (keyup.enter)=\"onSearchClick()\"\r\n             >\r\n          </div>\r\n        </div>\r\n        <div class=\"col-md-2\">\r\n          <button class=\"btn btn-primary w-100\" (click)=\"onSearchClick()\">\r\n            {{ translate('common.search') }}\r\n          </button>\r\n        </div>\r\n        <div class=\"col-md-2\">\r\n          <button class=\"btn btn-outline-secondary w-100\" (click)=\"clearSearch()\">\r\n            <i class=\"bi bi-x-circle me-2\"></i>\r\n            {{ translate('common.clear') }}\r\n          </button>\r\n        </div>\r\n        <div class=\"col-md-3\">\r\n          <!-- Empty space for layout balance -->\r\n        </div>\r\n      </div>\r\n    </div>\r\n  <!-- Cards View -->\r\n  <div class=\"employees-grid\" *ngIf=\"!loading() && employees.length > 0 && viewMode() === 'cards'\">\r\n    <div class=\"employee-card\" *ngFor=\"let employee of employees\">\r\n      <div class=\"card-header\">\r\n        <div class=\"employee-info\">\r\n          <h3 class=\"employee-name\">{{ getFullName(employee) }}</h3>\r\n          <span class=\"employee-job-title\">{{ employee.jobTitle }}</span>\r\n        </div>\r\n        <div class=\"employee-avatar\">\r\n          <img *ngIf=\"employee.imageUrl\" [src]=\"employee.imageUrl\" [alt]=\"getFullName(employee)\">\r\n          <div *ngIf=\"!employee.imageUrl\" class=\"avatar-initials\">\r\n            {{ getInitials(employee) }}\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"card-divider\"></div>\r\n\r\n      <div class=\"card-details\">\r\n        <div class=\"detail-row\" (click)=\"copyToClipboard(employee.email)\">\r\n          <span class=\"detail-label\">{{ translate('employees.email') }}</span>\r\n          <span class=\"detail-value\">{{ employee.email }}</span>\r\n          <button class=\"copy-btn\" title=\"Copy to clipboard\">\r\n            <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\">\r\n              <rect x=\"9\" y=\"9\" width=\"13\" height=\"13\" rx=\"2\" ry=\"2\"></rect>\r\n              <path d=\"M5 15H4a2 2 0 0 1-2-2V4a2 2 0 0 1 2-2h9a2 2 0 0 1 2 2v1\"></path>\r\n            </svg>\r\n          </button>\r\n        </div>\r\n\r\n        <div class=\"detail-row\" (click)=\"copyToClipboard(employee.phoneNumber)\">\r\n          <span class=\"detail-label\">{{ translate('employees.phone') }}</span>\r\n          <span class=\"detail-value\">{{ employee.phoneNumber }}</span>\r\n          <button class=\"copy-btn\" title=\"Copy to clipboard\">\r\n            <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\">\r\n              <rect x=\"9\" y=\"9\" width=\"13\" height=\"13\" rx=\"2\" ry=\"2\"></rect>\r\n              <path d=\"M5 15H4a2 2 0 0 1-2-2V4a2 2 0 0 1 2-2h9a2 2 0 0 1 2 2v1\"></path>\r\n            </svg>\r\n          </button>\r\n        </div>\r\n\r\n        <div class=\"detail-row\" *ngIf=\"employee.departmentName\">\r\n          <span class=\"detail-label\">{{ translate('employees.department') }}</span>\r\n          <span class=\"detail-value\">{{ employee.departmentName }}</span>\r\n          <svg class=\"detail-icon\" width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\">\r\n            <rect x=\"3\" y=\"3\" width=\"7\" height=\"7\"></rect>\r\n            <rect x=\"14\" y=\"3\" width=\"7\" height=\"7\"></rect>\r\n            <rect x=\"14\" y=\"14\" width=\"7\" height=\"7\"></rect>\r\n            <rect x=\"3\" y=\"14\" width=\"7\" height=\"7\"></rect>\r\n          </svg>\r\n        </div>\r\n\r\n        <div class=\"detail-row\" *ngIf=\"employee.timeZone\">\r\n          <span class=\"detail-label\">{{ translate('employees.time_zone') }}</span>\r\n          <span class=\"detail-value\">{{ employee.timeZone }}</span>\r\n          <svg class=\"detail-icon\" width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\">\r\n            <path d=\"M21 10c0 7-9 13-9 13s-9-6-9-13a9 9 0 0 1 18 0z\"></path>\r\n            <circle cx=\"12\" cy=\"10\" r=\"3\"></circle>\r\n          </svg>\r\n        </div>\r\n\r\n        <div class=\"detail-row\">\r\n          <span class=\"detail-label\">{{ translate('employees.hire_date') }}</span>\r\n          <span class=\"detail-value\">{{ employee.hireDate | date:(isRTL() ? 'dd/MM/yyyy' : 'yyyy-MM-dd') }}</span>\r\n          <svg class=\"detail-icon\" width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\">\r\n            <rect x=\"3\" y=\"4\" width=\"18\" height=\"18\" rx=\"2\" ry=\"2\"></rect>\r\n            <line x1=\"16\" y1=\"2\" x2=\"16\" y2=\"6\"></line>\r\n            <line x1=\"8\" y1=\"2\" x2=\"8\" y2=\"6\"></line>\r\n            <line x1=\"3\" y1=\"10\" x2=\"21\" y2=\"10\"></line>\r\n          </svg>\r\n        </div>\r\n\r\n        <!-- <div class=\"detail-row\" *ngIf=\"employee.roles && employee.roles.length > 0\">\r\n          <span class=\"detail-label\">{{ translate('employees.roles') }}</span>\r\n          <span class=\"detail-value\">{{ employee.roles.join(', ') }}</span>\r\n          <svg class=\"detail-icon\" width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\">\r\n            <path d=\"M20 21v-2a4 4 0 0 0-4-4H8a4 4 0 0 0-4 4v2\"></path>\r\n            <circle cx=\"12\" cy=\"7\" r=\"4\"></circle>\r\n          </svg>\r\n        </div> -->\r\n      </div>\r\n\r\n      <div class=\"card-status\">\r\n        <span class=\"status-label\">{{ translate('employees.status') }}</span>\r\n        <span class=\"status-badge\" [class]=\"getStatusClass(employee.isActive)\">\r\n          {{ translate('employees.' + (employee.isActive ? 'active' : 'inactive')) }}\r\n        </span>\r\n      </div>\r\n\r\n      <div class=\"card-actions\">\r\n        <button class=\"delete-btn\" (click)=\"openDeleteModal(employee)\">\r\n          <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\">\r\n            <polyline points=\"3,6 5,6 21,6\"></polyline>\r\n            <path d=\"M19,6v14a2,2,0,0,1-2,2H7a2,2,0,0,1-2-2V6m3,0V4a2,2,0,0,1,2-2h4a2,2,0,0,1,2,2V6\"></path>\r\n          </svg>\r\n          {{ translate('employees.delete') }}\r\n        </button>\r\n        <button class=\"edit-btn\" (click)=\"goToEdit(employee.id)\">\r\n          <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\">\r\n            <path d=\"M11 4H4a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h14a2 2 0 0 0 2-2v-7\"></path>\r\n            <path d=\"M18.5 2.5a2.121 2.121 0 0 1 3 3L12 15l-4 1 1-4 9.5-9.5z\"></path>\r\n          </svg>\r\n          {{ translate('employees.edit') }}\r\n        </button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <!-- Table View -->\r\n  <div class=\"employees-table\" *ngIf=\"!loading() && employees.length > 0 && viewMode() === 'table'\">\r\n    <table class=\"table\">\r\n      <thead>\r\n        <tr>\r\n          <th>{{ translate('employees.avatar') }}</th>\r\n          <th>{{ translate('employees.name') }}</th>\r\n          <th>{{ translate('employees.email') }}</th>\r\n          <th>{{ translate('employees.job_title') }}</th>\r\n          <th>{{ translate('employees.department') }}</th>\r\n          <th>{{ translate('employees.phone') }}</th>\r\n          <th>{{ translate('employees.hire_date') }}</th>\r\n          <th>{{ translate('employees.roles') }}</th>\r\n          <th>{{ translate('employees.status') }}</th>\r\n          <th>{{ translate('employees.actions') }}</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr *ngFor=\"let employee of employees\">\r\n          <td>\r\n            <div class=\"employee-avatar-small\">\r\n              <img *ngIf=\"employee.imageUrl\" [src]=\"employee.imageUrl\" [alt]=\"getFullName(employee)\">\r\n              <div *ngIf=\"!employee.imageUrl\" class=\"avatar-initials-small\">\r\n                {{ getInitials(employee) }}\r\n              </div>\r\n            </div>\r\n          </td>\r\n          <td>{{ getFullName(employee) }}</td>\r\n          <td>{{ employee.email }}</td>\r\n          <td>{{ employee.jobTitle }}</td>\r\n          <td>{{ employee.departmentName || translate('employees.no_department') }}</td>\r\n          <td>{{ employee.phoneNumber }}</td>\r\n          <td>{{ employee.hireDate | date:(isRTL() ? 'dd/MM/yyyy' : 'yyyy-MM-dd') }}</td>\r\n          <td>{{ employee.roles ? employee.roles.join(', ') : translate('employees.no_roles') }}</td>\r\n          <td>\r\n            <span class=\"status-badge\" [class]=\"getStatusClass(employee.isActive)\">\r\n              {{ translate('employees.' + (employee.isActive ? 'active' : 'inactive')) }}\r\n            </span>\r\n          </td>\r\n          <td>\r\n            <div class=\"table-actions\">\r\n              <button class=\"edit-btn-small\" (click)=\"goToEdit(employee.id)\" title=\"Edit\">\r\n                <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\">\r\n                  <path d=\"M11 4H4a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h14a2 2 0 0 0 2-2v-7\"></path>\r\n                  <path d=\"M18.5 2.5a2.121 2.121 0 0 1 3 3L12 15l-4 1 1-4 9.5-9.5z\"></path>\r\n                </svg>\r\n              </button>\r\n              <button class=\"delete-btn-small\" (click)=\"openDeleteModal(employee)\" title=\"Delete\">\r\n                <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\">\r\n                  <polyline points=\"3,6 5,6 21,6\"></polyline>\r\n                  <path d=\"M19,6v14a2,2,0,0,1-2,2H7a2,2,0,0,1-2-2V6m3,0V4a2,2,0,0,1,2-2h4a2,2,0,0,1,2,2V6\"></path>\r\n                </svg>\r\n              </button>\r\n            </div>\r\n          </td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n  </div>\r\n\r\n  <!-- Pagination Info and Controls -->\r\n  <div class=\"pagination-section\">\r\n    \r\n    \r\n    <div class=\"pagination-controls\">\r\n      <div class=\"page-size-control\">\r\n        <label for=\"pageSize\">{{ translate('common.page_size') }}:</label>\r\n        <select #pageSizeSelect id=\"pageSize\" [value]=\"pageSize\" (change)=\"onPageSizeChange(+pageSizeSelect.value)\">\r\n          <option value=\"6\">6</option>\r\n          <option value=\"12\">12</option>\r\n          <option value=\"24\">24</option>\r\n          <option value=\"48\">48</option>\r\n        </select>\r\n      </div>\r\n      <div class=\"pagination-info\">\r\n      <span>{{ translate('common.showing') }} {{ (currentPage - 1) * pageSize + 1 }}-{{ Math.min(currentPage * pageSize, totalCount) }} {{ translate('common.of') }} {{ totalCount }} {{ translate('employees.title') }}</span>\r\n    </div>\r\n      <nav aria-label=\"Employees pagination\">\r\n        <ul class=\"pagination\">\r\n          <li class=\"page-item\" [class.disabled]=\"currentPage === 1\">\r\n            <button class=\"page-link\" (click)=\"changePage(currentPage - 1)\" [disabled]=\"currentPage === 1\">\r\n              <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\">\r\n                <polyline points=\"15,18 9,12 15,6\"/>\r\n              </svg>\r\n            </button>\r\n          </li>\r\n          \r\n          <li *ngFor=\"let page of pages\" class=\"page-item\" [class.active]=\"page === currentPage\">\r\n            <button class=\"page-link\" (click)=\"changePage(page)\">{{ page }}</button>\r\n          </li>\r\n          \r\n          <li class=\"page-item\" [class.disabled]=\"currentPage === totalPages\">\r\n            <button class=\"page-link\" (click)=\"changePage(currentPage + 1)\" [disabled]=\"currentPage === totalPages\">\r\n              <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\">\r\n                <polyline points=\"9,18 15,12 9,6\"/>\r\n              </svg>\r\n            </button>\r\n          </li>\r\n        </ul>\r\n      </nav>\r\n    </div>\r\n  </div>\r\n\r\n  <!-- Delete Confirmation Modal -->\r\n  <div class=\"delete-modal-overlay\" *ngIf=\"showDeleteModal()\" (click)=\"closeDeleteModal()\">\r\n    <div class=\"delete-modal\" (click)=\"$event.stopPropagation()\">\r\n      <div class=\"delete-icon\">\r\n        <svg width=\"48\" height=\"48\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\">\r\n          <path d=\"M3 6h18\"></path>\r\n          <path d=\"M19 6v14a2 2 0 0 1-2 2H7a2 2 0 0 1-2-2V6\"></path>\r\n          <path d=\"M8 6V4a2 2 0 0 1 2-2h4a2 2 0 0 1 2 2v2\"></path>\r\n        </svg>\r\n      </div>\r\n      <h3 class=\"delete-title\">{{ translate('employees.confirm_delete') }}</h3>\r\n      <p class=\"delete-message\">{{ getDeleteMessage() }}</p>\r\n      <div class=\"delete-actions\">\r\n        <button class=\"cancel-btn\" (click)=\"closeDeleteModal()\">\r\n          {{ translate('common.cancel') }}\r\n        </button>\r\n        <button class=\"confirm-delete-btn\" (click)=\"confirmDelete()\">\r\n          {{ translate('employees.delete') }}\r\n        </button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n\r\n\r\n  <!-- Success Modal -->\r\n  <div class=\"success-modal-overlay\" *ngIf=\"showSuccessModal()\" (click)=\"closeSuccessModal()\">\r\n    <div class=\"success-modal\" (click)=\"$event.stopPropagation()\">\r\n      <div class=\"success-icon\">\r\n        <svg width=\"48\" height=\"48\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\">\r\n          <path d=\"M22 11.08V12a10 10 0 1 1-5.93-9.14\"></path>\r\n          <polyline points=\"22,4 12,14.01 9,11.01\"></polyline>\r\n        </svg>\r\n      </div>\r\n      <h3 class=\"success-title\">{{ translate('common.success') }}</h3>\r\n      <p class=\"success-message\">{{ successMessage() }}</p>\r\n      <button class=\"success-close-btn\" (click)=\"closeSuccessModal()\">\r\n        {{ translate('common.ok') }}\r\n      </button>\r\n    </div>\r\n    </div>\r\n</div>\r\n\r\n\r\n", "import { Component, signal, OnInit, inject, ViewChild, ElementRef } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { EmployeesService } from '../../../services/employees.service';\r\nimport { DepartmentService, Department } from '../../../services/department.service';\r\nimport { Employee } from '../../../models/employee.model';\r\nimport { TranslationService } from '../../../services/translation.service';\r\nimport { LangService } from '../../../services/lang.service';\r\n\r\n@Component({\r\n  selector: 'app-edit-employee',\r\n  standalone: false,\r\n  templateUrl: './edit-employee.html',\r\n  styleUrl: './edit-employee.css'\r\n})\r\nexport class EditEmployee implements OnInit {\r\n  @ViewChild('fileInput') fileInput!: ElementRef<HTMLInputElement>;\r\n\r\n  private formBuilder = inject(FormBuilder);\r\n  private route = inject(ActivatedRoute);\r\n  private router = inject(Router);\r\n  private employeesService = inject(EmployeesService);\r\n  private departmentsService = inject(DepartmentService);\r\n  private translationService = inject(TranslationService);\r\n  private langService = inject(LangService);\r\n\r\n  // Form\r\n  employeeForm!: FormGroup;\r\n  \r\n  // Data\r\n  employee = signal<Employee | null>(null);\r\n  departments = signal<Array<{ id: number; nameAr: string; nameEn: string }>>([]);\r\n  \r\n  // UI State\r\n  submitted = signal(false);\r\n  submitting = signal(false);\r\n  imagePreview = signal<string | null>(null);\r\n  selectedFile = signal<File | null>(null);\r\n  currentImageUrl = signal<string | null>(null);\r\n  imageError = signal<string | null>(null);\r\n  showSuccessDialog = signal(false);\r\n  successMessage = signal('');\r\n  \r\n  // Language\r\n  currentLang = signal<'ar' | 'en'>('en');\r\n  isRTL = signal(false);\r\n\r\n  ngOnInit() {\r\n  this.initializeForm();\r\n    this.loadDepartments();\r\n    this.loadEmployee();\r\n    this.initializeLanguage();\r\n  }\r\n\r\n  private initializeLanguage() {\r\n    this.langService.currentLang$.subscribe(lang => {\r\n      this.currentLang.set(lang);\r\n      this.isRTL.set(lang === 'ar');\r\n    });\r\n  }\r\n\r\n  private initializeForm() {\r\n    this.employeeForm = this.formBuilder.group({\r\n      firstName: ['', [Validators.required, Validators.minLength(2)]],\r\n      lastName: ['', [Validators.required, Validators.minLength(2)]],\r\n      email: [''], // No validation for readonly email\r\n      jobTitle: ['', [Validators.required, Validators.minLength(2)]],\r\n      phoneNumber: ['', [Validators.required, Validators.pattern(/^[+]?[\\d\\s\\-\\(\\)]{5,}$/)]],\r\n      nationalId: ['', [Validators.required, Validators.pattern(/^\\d{9,14}$/)]],\r\n      hireDate: ['', [Validators.required]],\r\n      departmentId: ['', [Validators.required]],\r\n      timeZone: ['', [Validators.required]],\r\n      // role: ['', [Validators.required]]\r\n    });\r\n  }\r\n\r\n  private loadDepartments() {\r\n    this.departmentsService.getDepartmentNames().subscribe({\r\n      next: (departments) => {\r\n        this.departments.set(departments);\r\n      },\r\n      error: (error: any) => {\r\n        console.error('Error loading departments:', error);\r\n      }\r\n    });\r\n  }\r\n\r\n  private loadEmployee() {\r\n    const employeeId = this.route.snapshot.paramMap.get('id');\r\n    if (!employeeId) {\r\n      console.error('No employee ID provided');\r\n      return;\r\n    }\r\n\r\n    console.log('Loading employee with ID:', employeeId);\r\n\r\n    this.employeesService.getEmployee(employeeId).subscribe({\r\n      next: (response: any) => {\r\n        console.log('Employee API response:', response);\r\n        \r\n        // Handle both direct Employee and wrapped response\r\n        let employee: Employee;\r\n        if (response.data) {\r\n          employee = response.data;\r\n        } else if (response.id) {\r\n          employee = response;\r\n        } else {\r\n          console.error('Invalid employee response format:', response);\r\n          return;\r\n        }\r\n        \r\n        console.log('Processed employee data:', employee);\r\n        this.employee.set(employee);\r\n        this.currentImageUrl.set(employee.imageUrl || null);\r\n        this.populateForm(employee);\r\n      },\r\n      error: (error) => {\r\n        console.error('Error loading employee:', error);\r\n      }\r\n    });\r\n  }\r\n\r\n  private populateForm(employee: Employee) {\r\n    console.log('Populating form with employee:', employee);\r\n    console.log('Form before population:', this.employeeForm.value);\r\n    \r\n    if (this.employeeForm) {\r\n      const formValues = {\r\n        firstName: employee.firstName,\r\n        lastName: employee.lastName,\r\n        email: employee.email,\r\n        jobTitle: employee.jobTitle,\r\n        phoneNumber: employee.phoneNumber,\r\n        nationalId: employee.nationalId,\r\n        hireDate: this.formatDateForInput(employee.hireDate),\r\n        departmentId: employee.departmentId,\r\n        timeZone: employee.timeZone,\r\n        // role: employee.roles && employee.roles.length > 0 ? employee.roles[0] : ''\r\n      };\r\n      \r\n      console.log('Setting form values:', formValues);\r\n      this.employeeForm.patchValue(formValues);\r\n      console.log('Form after population:', this.employeeForm.value);\r\n    } else {\r\n      console.error('Form not initialized yet');\r\n    }\r\n  }\r\n\r\n  private formatDateForInput(dateString: string): string {\r\n    if (!dateString) return '';\r\n    const date = new Date(dateString);\r\n    return date.toISOString().split('T')[0];\r\n  }\r\n\r\n  triggerFileInput() {\r\n    this.fileInput.nativeElement.click();\r\n  }\r\n\r\n  onFileSelected(event: any) {\r\n    const file = event.target.files[0];\r\n    if (file) {\r\n      this.validateAndSetImage(file);\r\n    }\r\n  }\r\n\r\n  private validateAndSetImage(file: File) {\r\n    // Reset previous errors\r\n    this.imageError.set(null);\r\n\r\n    // Check file type\r\n    const allowedTypes = ['image/jpeg', 'image/jpg', 'image/png', 'image/webp'];\r\n    if (!allowedTypes.includes(file.type)) {\r\n      this.imageError.set('employees.image_format_error');\r\n      return;\r\n    }\r\n\r\n    // Check file size (2MB = 2 * 1024 * 1024 bytes)\r\n    const maxSize = 2 * 1024 * 1024;\r\n    if (file.size > maxSize) {\r\n      this.imageError.set('employees.image_size_error');\r\n      return;\r\n    }\r\n\r\n    // Create preview\r\n    const reader = new FileReader();\r\n    reader.onload = (e: any) => {\r\n      this.imagePreview.set(e.target.result);\r\n      this.selectedFile.set(file);\r\n      this.currentImageUrl.set(null); // Clear current image when new one is selected\r\n    };\r\n    reader.readAsDataURL(file);\r\n  }\r\n\r\n  removeImage() {\r\n    this.imagePreview.set(null);\r\n    this.selectedFile.set(null);\r\n    this.currentImageUrl.set(null);\r\n    this.imageError.set(null);\r\n    if (this.fileInput.nativeElement) {\r\n      this.fileInput.nativeElement.value = '';\r\n    }\r\n  }\r\n\r\n  isFieldInvalid(fieldName: string): boolean {\r\n    const field = this.employeeForm.get(fieldName);\r\n    return !!(field && field.invalid && (field.dirty || field.touched || this.submitted()));\r\n  }\r\n\r\n  getErrorMessage(fieldName: string): string {\r\n    const field = this.employeeForm.get(fieldName);\r\n    if (field && field.errors) {\r\n      if (field.errors['required']) {\r\n        return this.translate('common.field_required');\r\n      }\r\n      if (field.errors['email']) {\r\n        return this.translate('login.email_invalid');\r\n      }\r\n      if (field.errors['minlength']) {\r\n        return this.translate('common.min_length') + ': ' + field.errors['minlength'].requiredLength;\r\n      }\r\n      if (field.errors['pattern']) {\r\n        if (fieldName === 'phoneNumber') {\r\n          return this.translate('users.phone_invalid_format');\r\n        }\r\n        if (fieldName === 'nationalId') {\r\n          return this.translate('common.field_required');\r\n        }\r\n      }\r\n    }\r\n    return '';\r\n  }\r\n\r\n  private showSuccessMessage(message: string) {\r\n    this.successMessage.set(message);\r\n    this.showSuccessDialog.set(true);\r\n    \r\n    // Auto-hide after 3 seconds\r\n    setTimeout(() => {\r\n      this.showSuccessDialog.set(false);\r\n      this.successMessage.set('');\r\n    }, 3000);\r\n  }\r\n\r\n  onSubmit() {\r\n    this.submitted.set(true);\r\n    \r\n    if (this.employeeForm.invalid) {\r\n      return;\r\n    }\r\n\r\n    this.submitting.set(true);\r\n    \r\n    // TODO: Implement actual image upload logic\r\n    // For now, just update the employee without image handling\r\n    const employeeData = this.employeeForm.value;\r\n    const employeeId = this.employee()?.id;\r\n    \r\n    if (!employeeId) {\r\n      console.error('No employee ID available');\r\n      this.submitting.set(false);\r\n      return;\r\n    }\r\n    \r\n    this.employeesService.updateEmployee(employeeId, employeeData).subscribe({\r\n      next: (response) => {\r\n        console.log('Employee updated successfully:', response);\r\n        this.submitting.set(false);\r\n        this.showSuccessMessage(this.translate('employees.employee_updated_successfully'));\r\n        \r\n        // Navigate back to employees list after a short delay\r\n        setTimeout(() => {\r\n          this.router.navigate(['/employees']);\r\n        }, 2000);\r\n      },\r\n      error: (error) => {\r\n        console.error('Error updating employee:', error);\r\n        this.submitting.set(false);\r\n        // TODO: Show error message\r\n      }\r\n    });\r\n  }\r\n\r\n  goBack() {\r\n    this.router.navigate(['/employees']);\r\n  }\r\n\r\n  // Translation helper\r\n  translate(key: string): string {\r\n    return this.translationService.translate(key);\r\n}\r\n}\r\n\r\n", "<div class=\"edit-employee-page\" [class.rtl]=\"isRTL()\">\r\n  <!-- Page Header -->\r\n  <div class=\"page-header\">\r\n    <div class=\"header-content\">\r\n      <button type=\"button\" class=\"back-btn\" (click)=\"goBack()\">\r\n        <svg width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\">\r\n          <polyline points=\"15,18 9,12 15,6\"></polyline>\r\n        </svg>\r\n        {{ translate('common.back') }}\r\n      </button>\r\n      <div class=\"header-text\">\r\n        <h1>{{ translate('employees.edit_employee') }}</h1>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <!-- Employee Form -->\r\n  <form class=\"employee-form\" [formGroup]=\"employeeForm\" (ngSubmit)=\"onSubmit()\">\r\n    <!-- Image Upload Section -->\r\n    <div class=\"form-section\">\r\n      <h3 class=\"section-title\">{{ translate('employees.avatar_upload') }}</h3>\r\n      \r\n      <!-- Current Image Display -->\r\n      <div class=\"image-upload-container\" *ngIf=\"currentImageUrl() && !imagePreview()\">\r\n        <div class=\"image-preview\">\r\n          <img [src]=\"currentImageUrl()\" [alt]=\"translate('employees.image_preview')\" class=\"preview-image\">\r\n          <button type=\"button\" class=\"remove-image-btn\" (click)=\"removeImage()\">\r\n            <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\">\r\n              <line x1=\"18\" y1=\"6\" x2=\"6\" y2=\"18\"></line>\r\n              <line x1=\"6\" y1=\"6\" x2=\"18\" y2=\"18\"></line>\r\n            </svg>\r\n            {{ translate('employees.remove') }}\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- New Image Preview -->\r\n      <div class=\"image-upload-container\" *ngIf=\"imagePreview()\">\r\n        <div class=\"image-preview\">\r\n          <img [src]=\"imagePreview()\" [alt]=\"translate('employees.image_preview')\" class=\"preview-image\">\r\n          <button type=\"button\" class=\"remove-image-btn\" (click)=\"removeImage()\">\r\n            <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\">\r\n              <line x1=\"18\" y1=\"6\" x2=\"6\" y2=\"18\"></line>\r\n              <line x1=\"6\" y1=\"6\" x2=\"18\" y2=\"18\"></line>\r\n            </svg>\r\n            {{ translate('employees.remove') }}\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- Upload Area -->\r\n      <div class=\"upload-area\" *ngIf=\"!currentImageUrl() && !imagePreview()\" (click)=\"triggerFileInput()\">\r\n        <svg class=\"upload-icon\" width=\"48\" height=\"48\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\">\r\n          <path d=\"M21 15v4a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2v-4\"></path>\r\n          <polyline points=\"7,10 12,15 17,10\"></polyline>\r\n          <line x1=\"12\" y1=\"15\" x2=\"12\" y2=\"3\"></line>\r\n        </svg>\r\n        <p class=\"upload-text\">{{ translate('employees.avatar_drag_drop') }}</p>\r\n        <p class=\"upload-requirements\">{{ translate('employees.avatar_requirements') }}</p>\r\n        <button type=\"button\" class=\"browse-btn\">{{ translate('employees.browse_files') }}</button>\r\n      </div>\r\n\r\n      <!-- Hidden File Input -->\r\n      <input \r\n        #fileInput\r\n        type=\"file\" \r\n        class=\"file-input\" \r\n        accept=\"image/*\"\r\n        (change)=\"onFileSelected($event)\"\r\n        style=\"display: none;\">\r\n\r\n      <!-- Image Error Display -->\r\n      <div class=\"form-error\" *ngIf=\"imageError()\">\r\n        {{ translate(imageError()!) }}\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Personal Information Section -->\r\n    <div class=\"form-section\">\r\n      <h3 class=\"section-title\">{{ translate('employees.personal_information') }}</h3>\r\n      \r\n      <div class=\"form-row\">\r\n        <div class=\"form-group\">\r\n          <label class=\"form-label\" for=\"firstName\">{{ translate('employees.first_name') }}</label>\r\n          <input \r\n            type=\"text\" \r\n            id=\"firstName\"\r\n            formControlName=\"firstName\"\r\n            class=\"form-control\"\r\n            [class.invalid]=\"isFieldInvalid('firstName')\"\r\n            [placeholder]=\"translate('employees.first_name_placeholder')\">\r\n          <div class=\"form-error\" *ngIf=\"isFieldInvalid('firstName')\">\r\n            {{ getErrorMessage('firstName') }}\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"form-group\">\r\n          <label class=\"form-label\" for=\"lastName\">{{ translate('employees.last_name') }}</label>\r\n          <input \r\n            type=\"text\" \r\n            id=\"lastName\"\r\n            formControlName=\"lastName\"\r\n            class=\"form-control\"\r\n            [class.invalid]=\"isFieldInvalid('lastName')\"\r\n            [placeholder]=\"translate('employees.last_name_placeholder')\">\r\n          <div class=\"form-error\" *ngIf=\"isFieldInvalid('lastName')\">\r\n            {{ getErrorMessage('lastName') }}\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"form-group\">\r\n        <label class=\"form-label\" for=\"email\">{{ translate('employees.email') }}</label>\r\n        <input \r\n          type=\"email\" \r\n          id=\"email\"\r\n          formControlName=\"email\"\r\n          class=\"form-control\"\r\n          readonly\r\n          [placeholder]=\"translate('employees.email_help')\">\r\n        <!-- <div class=\"form-help\">{{ translate('employees.email_help') }}</div> -->\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Job Information Section -->\r\n    <div class=\"form-section\">\r\n      <h3 class=\"section-title\">{{ translate('employees.job_information') }}</h3>\r\n      \r\n      <div class=\"form-row\">\r\n        <div class=\"form-group\">\r\n          <label class=\"form-label\" for=\"jobTitle\">{{ translate('employees.job_title') }}</label>\r\n          <input \r\n            type=\"text\" \r\n            id=\"jobTitle\"\r\n            formControlName=\"jobTitle\"\r\n            class=\"form-control\"\r\n            [class.invalid]=\"isFieldInvalid('jobTitle')\"\r\n            [placeholder]=\"translate('employees.job_title_placeholder')\">\r\n          <div class=\"form-error\" *ngIf=\"isFieldInvalid('jobTitle')\">\r\n            {{ getErrorMessage('jobTitle') }}\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"form-group\">\r\n          <label class=\"form-label\" for=\"departmentId\">{{ translate('employees.department') }}</label>\r\n          <select \r\n            id=\"departmentId\"\r\n            formControlName=\"departmentId\"\r\n            class=\"form-control\"\r\n            [class.invalid]=\"isFieldInvalid('departmentId')\">\r\n            <option value=\"\">{{ translate('employees.select_department') }}</option>\r\n            <option *ngFor=\"let dept of departments()\" [value]=\"dept.id\">\r\n              {{ currentLang() === 'ar' ? dept.nameAr : dept.nameEn }}\r\n            </option>\r\n          </select>\r\n          <div class=\"form-error\" *ngIf=\"isFieldInvalid('departmentId')\">\r\n            {{ getErrorMessage('departmentId') }}\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- <div class=\"form-group\">\r\n        <label class=\"form-label\" for=\"role\">{{ translate('employees.roles') }}</label>\r\n        <select \r\n          id=\"role\"\r\n          formControlName=\"role\"\r\n          class=\"form-control\"\r\n          [class.invalid]=\"isFieldInvalid('role')\">\r\n          <option value=\"\">{{ translate('employees.select_role') }}</option>\r\n          <option value=\"Manager\">Manager</option>\r\n          <option value=\"Employee\">Employee</option>\r\n          <option value=\"Admin\">Admin</option>\r\n        </select>\r\n        <div class=\"form-error\" *ngIf=\"isFieldInvalid('role')\">\r\n          {{ getErrorMessage('role') }}\r\n        </div>\r\n      </div> -->\r\n\r\n      <div class=\"form-group\">\r\n        <label class=\"form-label\" for=\"hireDate\">{{ translate('employees.hire_date') }}</label>\r\n        <input \r\n          type=\"date\" \r\n          id=\"hireDate\"\r\n          formControlName=\"hireDate\"\r\n          class=\"form-control\"\r\n          [class.invalid]=\"isFieldInvalid('hireDate')\">\r\n        <div class=\"form-error\" *ngIf=\"isFieldInvalid('hireDate')\">\r\n          {{ getErrorMessage('hireDate') }}\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Contact Information Section -->\r\n    <div class=\"form-section\">\r\n      <h3 class=\"section-title\">{{ translate('employees.contact_information') }}</h3>\r\n      \r\n      <div class=\"form-row\">\r\n        <div class=\"form-group\">\r\n          <label class=\"form-label\" for=\"phoneNumber\">{{ translate('employees.phone') }}</label>\r\n          <input \r\n            type=\"tel\" \r\n            id=\"phoneNumber\"\r\n            formControlName=\"phoneNumber\"\r\n            class=\"form-control\"\r\n            [class.invalid]=\"isFieldInvalid('phoneNumber')\"\r\n            [placeholder]=\"translate('employees.phone_placeholder')\">\r\n          <div class=\"form-error\" *ngIf=\"isFieldInvalid('phoneNumber')\">\r\n            {{ getErrorMessage('phoneNumber') }}\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"form-group\">\r\n          <label class=\"form-label\" for=\"nationalId\">{{ translate('employees.national_id') }}</label>\r\n          <input \r\n            type=\"text\" \r\n            id=\"nationalId\"\r\n            formControlName=\"nationalId\"\r\n            class=\"form-control\"\r\n            [class.invalid]=\"isFieldInvalid('nationalId')\"\r\n            [placeholder]=\"translate('employees.national_id_placeholder')\">\r\n          <div class=\"form-error\" *ngIf=\"isFieldInvalid('nationalId')\">\r\n            {{ getErrorMessage('nationalId') }}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Additional Information Section -->\r\n    <div class=\"form-section\">\r\n      <h3 class=\"section-title\">{{ translate('employees.additional_information') }}</h3>\r\n      \r\n      <div class=\"form-group\">\r\n        <label class=\"form-label\" for=\"timeZone\">{{ translate('employees.time_zone') }}</label>\r\n        <input \r\n          type=\"text\" \r\n          id=\"timeZone\"\r\n          formControlName=\"timeZone\"\r\n          class=\"form-control\"\r\n          [class.invalid]=\"isFieldInvalid('timeZone')\"\r\n          [placeholder]=\"translate('employees.time_zone_placeholder')\">\r\n        <div class=\"form-error\" *ngIf=\"isFieldInvalid('timeZone')\">\r\n          {{ getErrorMessage('timeZone') }}\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Form Actions -->\r\n    <div class=\"form-actions\">\r\n      <button type=\"button\" class=\"btn btn-secondary\" (click)=\"goBack()\">\r\n        {{ translate('common.back') }}\r\n      </button>\r\n      <button type=\"submit\" class=\"btn btn-primary\" [disabled]=\"submitting()\">\r\n        <span *ngIf=\"!submitting()\">{{ translate('common.save') }}</span>\r\n        <span *ngIf=\"submitting()\">{{ translate('common.saving') }}</span>\r\n      </button>\r\n    </div>\r\n  </form>\r\n</div>\r\n\r\n<!-- Success Dialog -->\r\n<div class=\"success-dialog\" *ngIf=\"showSuccessDialog()\">\r\n  <div class=\"dialog-content\">\r\n    <div class=\"dialog-icon\">\r\n      <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\">\r\n        <polyline points=\"20,6 9,17 4,12\"></polyline>\r\n      </svg>\r\n    </div>\r\n    <div class=\"dialog-message\">\r\n      {{ successMessage() }}\r\n    </div>\r\n  </div>\r\n</div>", "import { Component, signal, OnInit, inject, ViewChild, ElementRef } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { EmployeesService } from '../../../services/employees.service';\r\nimport { DepartmentService, Department } from '../../../services/department.service';\r\nimport { Employee } from '../../../models/employee.model';\r\nimport { TranslationService } from '../../../services/translation.service';\r\nimport { LangService } from '../../../services/lang.service';\r\n\r\n@Component({\r\n  selector: 'app-add-employee',\r\n  standalone: false,\r\n  templateUrl: './add-employee.html',\r\n  styleUrl: './add-employee.css'\r\n})\r\nexport class AddEmployee implements OnInit {\r\n  @ViewChild('fileInput') fileInput!: ElementRef<HTMLInputElement>;\r\n\r\n  private formBuilder = inject(FormBuilder);\r\n  private router = inject(Router);\r\n  private employeesService = inject(EmployeesService);\r\n  private departmentsService = inject(DepartmentService);\r\n  private translationService = inject(TranslationService);\r\n  private langService = inject(LangService);\r\n\r\n  // Form\r\n  employeeForm!: FormGroup;\r\n  \r\n  // Data\r\n  departments = signal<Array<{ id: number; nameAr: string; nameEn: string }>>([]);\r\n  \r\n  // UI State\r\n  submitted = signal(false);\r\n  submitting = signal(false);\r\n  imagePreview = signal<string | null>(null);\r\n  selectedFile = signal<File | null>(null);\r\n  imageError = signal<string | null>(null);\r\n  showSuccessDialog = signal(false);\r\n  successMessage = signal('');\r\n  \r\n  // Language\r\n  currentLang = signal<'ar' | 'en'>('en');\r\n  isRTL = signal(false);\r\n\r\n  ngOnInit() {\r\n    this.initializeForm();\r\n    this.loadDepartments();\r\n    this.initializeLanguage();\r\n  }\r\n\r\n  private initializeLanguage() {\r\n    this.langService.currentLang$.subscribe(lang => {\r\n      this.currentLang.set(lang);\r\n      this.isRTL.set(lang === 'ar');\r\n    });\r\n  }\r\n\r\n  private initializeForm() {\r\n    this.employeeForm = this.formBuilder.group({\r\n      firstName: ['', [Validators.required, Validators.minLength(2)]],\r\n      lastName: ['', [Validators.required, Validators.minLength(2)]],\r\n      email: ['', [Validators.required, Validators.email]],\r\n      password: ['', [Validators.required, Validators.minLength(8), this.passwordStrengthValidator()]],\r\n      jobTitle: ['', [Validators.required, Validators.minLength(2)]],\r\n      phoneNumber: ['', [Validators.required, Validators.pattern(/^[+]?[\\d\\s\\-\\(\\)]{5,}$/)]],\r\n      nationalId: ['', [Validators.required, Validators.pattern(/^\\d{9,14}$/)]],\r\n      hireDate: ['', [Validators.required]],\r\n      departmentId: ['', [Validators.required]],\r\n      timeZone: ['', [Validators.required]],\r\n      role: ['', [Validators.required]]\r\n    });\r\n  }\r\n\r\n  private passwordStrengthValidator() {\r\n    return (control: any) => {\r\n      const password = control.value;\r\n      if (!password) return null;\r\n      \r\n      const hasUpperCase = /[A-Z]/.test(password);\r\n      const hasLowerCase = /[a-z]/.test(password);\r\n      const hasNumbers = /\\d/.test(password);\r\n      const hasSpecialChar = /[!@#$%^&*(),.?\":{}|<>]/.test(password);\r\n      \r\n      if (hasUpperCase && hasLowerCase && hasNumbers && hasSpecialChar) {\r\n        return null;\r\n      }\r\n      \r\n      return { passwordStrength: true };\r\n    };\r\n  }\r\n\r\n  private loadDepartments() {\r\n    this.departmentsService.getDepartmentNames().subscribe({\r\n      next: (departments) => {\r\n        this.departments.set(departments);\r\n      },\r\n      error: (error: any) => {\r\n        console.error('Error loading departments:', error);\r\n      }\r\n    });\r\n  }\r\n\r\n  triggerFileInput() {\r\n    this.fileInput.nativeElement.click();\r\n  }\r\n\r\n  onFileSelected(event: any) {\r\n    const file = event.target.files[0];\r\n    if (file) {\r\n      this.validateAndSetImage(file);\r\n    }\r\n  }\r\n\r\n  private validateAndSetImage(file: File) {\r\n    // Reset previous errors\r\n    this.imageError.set(null);\r\n\r\n    // Check file type\r\n    const allowedTypes = ['image/jpeg', 'image/jpg', 'image/png', 'image/webp'];\r\n    if (!allowedTypes.includes(file.type)) {\r\n      this.imageError.set('employees.image_format_error');\r\n      return;\r\n    }\r\n\r\n    // Check file size (2MB = 2 * 1024 * 1024 bytes)\r\n    const maxSize = 2 * 1024 * 1024;\r\n    if (file.size > maxSize) {\r\n      this.imageError.set('employees.image_size_error');\r\n      return;\r\n    }\r\n\r\n    // Create preview\r\n    const reader = new FileReader();\r\n    reader.onload = (e: any) => {\r\n      this.imagePreview.set(e.target.result);\r\n      this.selectedFile.set(file);\r\n    };\r\n    reader.readAsDataURL(file);\r\n  }\r\n\r\n  removeImage() {\r\n    this.imagePreview.set(null);\r\n    this.selectedFile.set(null);\r\n    this.imageError.set(null);\r\n    if (this.fileInput.nativeElement) {\r\n      this.fileInput.nativeElement.value = '';\r\n    }\r\n  }\r\n\r\n  isFieldInvalid(fieldName: string): boolean {\r\n    const field = this.employeeForm.get(fieldName);\r\n    return !!(field && field.invalid && (field.dirty || field.touched || this.submitted()));\r\n  }\r\n\r\n  getErrorMessage(fieldName: string): string {\r\n    const field = this.employeeForm.get(fieldName);\r\n    if (field && field.errors) {\r\n      if (field.errors['required']) {\r\n        return this.translate('common.field_required');\r\n      }\r\n      if (field.errors['email']) {\r\n        return this.translate('login.email_invalid');\r\n      }\r\n      if (field.errors['minlength']) {\r\n        return this.translate('common.min_length') + ': ' + field.errors['minlength'].requiredLength;\r\n      }\r\n      if (field.errors['passwordStrength']) {\r\n        return this.translate('reset_password.password_strength_error');\r\n      }\r\n      if (field.errors['pattern']) {\r\n        if (fieldName === 'phoneNumber') {\r\n          return this.translate('users.phone_invalid_format');\r\n        }\r\n        if (fieldName === 'nationalId') {\r\n          return this.translate('common.field_required');\r\n        }\r\n      }\r\n    }\r\n    return '';\r\n  }\r\n\r\n  private showSuccessMessage(message: string) {\r\n    this.successMessage.set(message);\r\n    this.showSuccessDialog.set(true);\r\n    \r\n    // Auto-hide after 3 seconds\r\n    setTimeout(() => {\r\n      this.showSuccessDialog.set(false);\r\n      this.successMessage.set('');\r\n    }, 3000);\r\n  }\r\n\r\n  onSubmit() {\r\n    this.submitted.set(true);\r\n    \r\n    if (this.employeeForm.invalid) {\r\n      return;\r\n    }\r\n\r\n    this.submitting.set(true);\r\n    \r\n    // TODO: Implement actual image upload logic\r\n    // For now, just create the employee without image\r\n    const employeeData = this.employeeForm.value;\r\n    \r\n    this.employeesService.addEmployee(employeeData).subscribe({\r\n      next: (response) => {\r\n        console.log('Employee created successfully:', response);\r\n        this.submitting.set(false);\r\n        this.showSuccessMessage(this.translate('employees.employee_created_successfully'));\r\n        \r\n        // Reset form\r\n        this.employeeForm.reset();\r\n        this.imagePreview.set(null);\r\n        this.selectedFile.set(null);\r\n        this.submitted.set(false);\r\n        \r\n        // Navigate back to employees list after a short delay\r\n        setTimeout(() => {\r\n          this.router.navigate(['/employees']);\r\n        }, 2000);\r\n      },\r\n      error: (error) => {\r\n        console.error('Error creating employee:', error);\r\n        this.submitting.set(false);\r\n        // TODO: Show error message\r\n      }\r\n    });\r\n  }\r\n\r\n  goBack() {\r\n    this.router.navigate(['/employees']);\r\n  }\r\n\r\n  // Translation helper\r\n  translate(key: string): string {\r\n    return this.translationService.translate(key);\r\n  }\r\n}\r\n", "<div class=\"add-employee-page\" [class.rtl]=\"isRTL()\">\r\n  <!-- Page Header -->\r\n  <div class=\"page-header\">\r\n    <div class=\"header-content\">\r\n      <button type=\"button\" class=\"back-btn\" (click)=\"goBack()\">\r\n        <svg width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\">\r\n          <polyline points=\"15,18 9,12 15,6\"></polyline>\r\n        </svg>\r\n        {{ translate('common.back') }}\r\n      </button>\r\n      <div class=\"header-text\">\r\n        <h1>{{ translate('employees.add_employee') }}</h1>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <!-- Employee Form -->\r\n  <form class=\"employee-form\" [formGroup]=\"employeeForm\" (ngSubmit)=\"onSubmit()\">\r\n    <!-- Image Upload Section -->\r\n    <div class=\"form-section\">\r\n      <h3 class=\"section-title\">{{ translate('employees.avatar_upload') }}</h3>\r\n      \r\n      <!-- Image Preview -->\r\n      <div class=\"image-upload-container\" *ngIf=\"imagePreview()\">\r\n        <div class=\"image-preview\">\r\n          <img [src]=\"imagePreview()\" [alt]=\"translate('employees.image_preview')\" class=\"preview-image\">\r\n          <button type=\"button\" class=\"remove-image-btn\" (click)=\"removeImage()\">\r\n            <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\">\r\n              <line x1=\"18\" y1=\"6\" x2=\"6\" y2=\"18\"></line>\r\n              <line x1=\"6\" y1=\"6\" x2=\"18\" y2=\"18\"></line>\r\n            </svg>\r\n            {{ translate('employees.remove') }}\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- Upload Area -->\r\n      <div class=\"upload-area\" *ngIf=\"!imagePreview()\" (click)=\"triggerFileInput()\">\r\n        <svg class=\"upload-icon\" width=\"48\" height=\"48\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\">\r\n          <path d=\"M21 15v4a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2v-4\"></path>\r\n          <polyline points=\"7,10 12,15 17,10\"></polyline>\r\n          <line x1=\"12\" y1=\"15\" x2=\"12\" y2=\"3\"></line>\r\n        </svg>\r\n        <p class=\"upload-text\">{{ translate('employees.avatar_drag_drop') }}</p>\r\n        <p class=\"upload-requirements\">{{ translate('employees.avatar_requirements') }}</p>\r\n        <button type=\"button\" class=\"browse-btn\">{{ translate('employees.browse_files') }}</button>\r\n      </div>\r\n\r\n      <!-- Hidden File Input -->\r\n      <input \r\n        #fileInput\r\n        type=\"file\" \r\n        class=\"file-input\" \r\n        accept=\"image/*\"\r\n        (change)=\"onFileSelected($event)\"\r\n        style=\"display: none;\">\r\n\r\n      <!-- Image Error Display -->\r\n      <div class=\"form-error\" *ngIf=\"imageError()\">\r\n        {{ translate(imageError()!) }}\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Personal Information Section -->\r\n    <div class=\"form-section\">\r\n      <h3 class=\"section-title\">{{ translate('employees.personal_information') }}</h3>\r\n      \r\n      <div class=\"form-row\">\r\n        <div class=\"form-group\">\r\n          <label class=\"form-label\" for=\"firstName\">{{ translate('employees.first_name') }}</label>\r\n          <input \r\n            type=\"text\" \r\n            id=\"firstName\"\r\n            formControlName=\"firstName\"\r\n            class=\"form-control\"\r\n            [class.invalid]=\"isFieldInvalid('firstName')\"\r\n            [placeholder]=\"translate('employees.first_name_placeholder')\">\r\n          <div class=\"form-error\" *ngIf=\"isFieldInvalid('firstName')\">\r\n            {{ getErrorMessage('firstName') }}\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"form-group\">\r\n          <label class=\"form-label\" for=\"lastName\">{{ translate('employees.last_name') }}</label>\r\n          <input \r\n            type=\"text\" \r\n            id=\"lastName\"\r\n            formControlName=\"lastName\"\r\n            class=\"form-control\"\r\n            [class.invalid]=\"isFieldInvalid('lastName')\"\r\n            [placeholder]=\"translate('employees.last_name_placeholder')\">\r\n          <div class=\"form-error\" *ngIf=\"isFieldInvalid('lastName')\">\r\n            {{ getErrorMessage('lastName') }}\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"form-group\">\r\n        <label class=\"form-label\" for=\"email\">{{ translate('employees.email') }}</label>\r\n        <input \r\n          type=\"email\" \r\n          id=\"email\"\r\n          formControlName=\"email\"\r\n          class=\"form-control\"\r\n          [class.invalid]=\"isFieldInvalid('email')\"\r\n          [placeholder]=\"translate('employees.email_placeholder')\">\r\n        <div class=\"form-error\" *ngIf=\"isFieldInvalid('email')\">\r\n          {{ getErrorMessage('email') }}\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"form-group\">\r\n        <label class=\"form-label\" for=\"password\">{{ translate('employees.password') }}</label>\r\n        <input \r\n          type=\"password\" \r\n          id=\"password\"\r\n          formControlName=\"password\"\r\n          class=\"form-control\"\r\n          [class.invalid]=\"isFieldInvalid('password')\"\r\n          [placeholder]=\"translate('employees.password_placeholder')\">\r\n        <div class=\"form-error\" *ngIf=\"isFieldInvalid('password')\">\r\n          {{ getErrorMessage('password') }}\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Job Information Section -->\r\n    <div class=\"form-section\">\r\n      <h3 class=\"section-title\">{{ translate('employees.job_information') }}</h3>\r\n      \r\n      <div class=\"form-row\">\r\n        <div class=\"form-group\">\r\n          <label class=\"form-label\" for=\"jobTitle\">{{ translate('employees.job_title') }}</label>\r\n          <input \r\n            type=\"text\" \r\n            id=\"jobTitle\"\r\n            formControlName=\"jobTitle\"\r\n            class=\"form-control\"\r\n            [class.invalid]=\"isFieldInvalid('jobTitle')\"\r\n            [placeholder]=\"translate('employees.job_title_placeholder')\">\r\n          <div class=\"form-error\" *ngIf=\"isFieldInvalid('jobTitle')\">\r\n            {{ getErrorMessage('jobTitle') }}\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"form-group\">\r\n          <label class=\"form-label\" for=\"departmentId\">{{ translate('employees.department') }}</label>\r\n          <select \r\n            id=\"departmentId\"\r\n            formControlName=\"departmentId\"\r\n            class=\"form-control\"\r\n            [class.invalid]=\"isFieldInvalid('departmentId')\">\r\n            <option value=\"\">{{ translate('employees.select_department') }}</option>\r\n            <option *ngFor=\"let dept of departments()\" [value]=\"dept.id\">\r\n              {{ currentLang() === 'ar' ? dept.nameAr : dept.nameEn }}\r\n            </option>\r\n          </select>\r\n          <div class=\"form-error\" *ngIf=\"isFieldInvalid('departmentId')\">\r\n            {{ getErrorMessage('departmentId') }}\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"form-group\">\r\n        <label class=\"form-label\" for=\"role\">{{ translate('employees.roles') }}</label>\r\n        <select \r\n          id=\"role\"\r\n          formControlName=\"role\"\r\n          class=\"form-control\"\r\n          [class.invalid]=\"isFieldInvalid('role')\">\r\n          <option value=\"\" disabled>{{ translate('employees.select_role') }}</option>\r\n          <option value=\"Manager\">Manager</option>\r\n          <option value=\"Employee\">Employee</option>\r\n          <option value=\"Admin\">Admin</option>\r\n          <option value=\"Secretary\">Secretary</option>\r\n\r\n        </select>\r\n        <div class=\"form-error\" *ngIf=\"isFieldInvalid('role')\">\r\n          {{ getErrorMessage('role') }}\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"form-group\">\r\n        <label class=\"form-label\" for=\"hireDate\">{{ translate('employees.hire_date') }}</label>\r\n        <input \r\n          type=\"date\" \r\n          id=\"hireDate\"\r\n          formControlName=\"hireDate\"\r\n          class=\"form-control\"\r\n          [class.invalid]=\"isFieldInvalid('hireDate')\">\r\n        <div class=\"form-error\" *ngIf=\"isFieldInvalid('hireDate')\">\r\n          {{ getErrorMessage('hireDate') }}\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Contact Information Section -->\r\n    <div class=\"form-section\">\r\n      <h3 class=\"section-title\">{{ translate('employees.contact_information') }}</h3>\r\n      \r\n      <div class=\"form-row\">\r\n        <div class=\"form-group\">\r\n          <label class=\"form-label\" for=\"phoneNumber\">{{ translate('employees.phone') }}</label>\r\n          <input \r\n            type=\"tel\" \r\n            id=\"phoneNumber\"\r\n            formControlName=\"phoneNumber\"\r\n            class=\"form-control\"\r\n            [class.invalid]=\"isFieldInvalid('phoneNumber')\"\r\n            [placeholder]=\"translate('employees.phone_placeholder')\">\r\n          <div class=\"form-error\" *ngIf=\"isFieldInvalid('phoneNumber')\">\r\n            {{ getErrorMessage('phoneNumber') }}\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"form-group\">\r\n          <label class=\"form-label\" for=\"nationalId\">{{ translate('employees.national_id') }}</label>\r\n          <input \r\n            type=\"text\" \r\n            id=\"nationalId\"\r\n            formControlName=\"nationalId\"\r\n            class=\"form-control\"\r\n            [class.invalid]=\"isFieldInvalid('nationalId')\"\r\n            [placeholder]=\"translate('employees.national_id_placeholder')\">\r\n          <div class=\"form-error\" *ngIf=\"isFieldInvalid('nationalId')\">\r\n            {{ getErrorMessage('nationalId') }}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Additional Information Section -->\r\n    <div class=\"form-section\">\r\n      <h3 class=\"section-title\">{{ translate('employees.additional_information') }}</h3>\r\n      \r\n      <div class=\"form-group\">\r\n        <label class=\"form-label\" for=\"timeZone\">{{ translate('employees.time_zone') }}</label>\r\n        <input \r\n          type=\"text\" \r\n          id=\"timeZone\"\r\n          formControlName=\"timeZone\"\r\n          class=\"form-control\"\r\n          [class.invalid]=\"isFieldInvalid('timeZone')\"\r\n          [placeholder]=\"translate('employees.time_zone_placeholder')\">\r\n        <div class=\"form-error\" *ngIf=\"isFieldInvalid('timeZone')\">\r\n          {{ getErrorMessage('timeZone') }}\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Form Actions -->\r\n    <div class=\"form-actions\">\r\n      <button type=\"button\" class=\"btn btn-secondary\" (click)=\"goBack()\">\r\n        {{ translate('common.back') }}\r\n      </button>\r\n      <button type=\"submit\" class=\"btn btn-primary\" [disabled]=\"submitting()\">\r\n        <span *ngIf=\"!submitting()\">{{ translate('common.save') }}</span>\r\n        <span *ngIf=\"submitting()\">{{ translate('common.saving') }}</span>\r\n      </button>\r\n    </div>\r\n  </form>\r\n</div>\r\n\r\n<!-- Success Dialog -->\r\n<div class=\"success-dialog\" *ngIf=\"showSuccessDialog()\">\r\n  <div class=\"dialog-content\">\r\n    <div class=\"dialog-icon\">\r\n      <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\">\r\n        <polyline points=\"20,6 9,17 4,12\"></polyline>\r\n      </svg>\r\n    </div>\r\n    <div class=\"dialog-message\">\r\n      {{ successMessage() }}\r\n    </div>\r\n  </div>\r\n</div>", "import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { Employees } from './employees-list/employees';\r\nimport { EditEmployee } from './edit-employee/edit-employee';\r\nimport { AddEmployee } from './add-employee/add-employee';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path:'',\r\n    component:Employees\r\n  },\r\n  {\r\n    path:'edit/:id',\r\n    component:EditEmployee\r\n  },\r\n  {\r\n    path:'add',\r\n    component:AddEmployee\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class EmployeesRoutingModule { }\r\n", "import { NgModule } from '@angular/core';\r\nimport { CommonModule, NgFor } from '@angular/common';\r\n\r\nimport { EmployeesRoutingModule } from './employees-routing-module';\r\nimport { Employees } from './employees-list/employees';\r\nimport { EditEmployee } from './edit-employee/edit-employee';\r\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\r\nimport { AddEmployee } from './add-employee/add-employee';\r\nimport { NgxEchartsModule } from 'ngx-echarts';\r\nimport { NgApexchartsModule } from 'ng-apexcharts';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    Employees,\r\n    EditEmployee,\r\n    AddEmployee\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    NgFor,\r\n    EmployeesRoutingModule,\r\n    ReactiveFormsModule,\r\n    FormsModule,\r\n    NgxEchartsModule.forRoot({\r\n      echarts: () => import('echarts')\r\n    }),\r\n    NgApexchartsModule\r\n  ]\r\n})\r\nexport class EmployeesModule { }\r\n"],
  "mappings": "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",
  "names": []
}
