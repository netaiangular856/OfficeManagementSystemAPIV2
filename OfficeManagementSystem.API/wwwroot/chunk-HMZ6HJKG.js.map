{
  "version": 3,
  "sources": ["src/app/services/partners.service.ts", "src/app/components/partners/partners-confirmation-modal/partners-confirmation-modal.component.ts", "src/app/components/partners/add-partner/add-partner.ts", "src/app/components/partners/add-partner/add-partner.html", "src/app/components/partners/edit-partner/edit-partner.ts", "src/app/components/partners/edit-partner/edit-partner.html", "src/app/components/partners/edit-contacts-modal/edit-contacts-modal.component.ts", "src/app/components/partners/edit-contacts-modal/edit-contacts-modal.component.html", "src/app/components/partners/view-partner-modal/view-partner-modal.component.ts", "src/app/components/partners/view-partner-modal/view-partner-modal.component.html", "src/app/components/partners/partners-list/partners-list.ts", "src/app/components/partners/partners-list/partners-list.html", "src/app/components/partners/partners-routing-module.ts", "src/app/components/partners/partners-module.ts"],
  "sourcesContent": ["import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { environment } from '../../environments/environment';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { Contact, CreatePartnerDto, Item, PartnerModel } from '../models/partner.model';\r\n\r\nexport interface PartnerSearchParams {\r\n  Search?: string;\r\n  PageSize?: number;\r\n  PageNumber?: number;\r\n  Category?: number;\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class PartnersService {\r\n  \r\n  private apiUrl=`${environment.apiBaseUrl}/Partners`;\r\n  constructor(private http:HttpClient) { }\r\n\r\n  getAllPartners(params: PartnerSearchParams = {}):Observable<PartnerModel>{\r\n    let url = this.apiUrl;\r\n    const queryParams = new URLSearchParams();\r\n    \r\n    if (params.Search) queryParams.append('Search', params.Search);\r\n    if (params.PageSize) queryParams.append('PageSize', params.PageSize.toString());\r\n    if (params.PageNumber) queryParams.append('PageNumber', params.PageNumber.toString());\r\n    if (params.Category !== undefined) queryParams.append('Category', params.Category.toString());\r\n    \r\n    if (queryParams.toString()) {\r\n      url += '?' + queryParams.toString();\r\n    }\r\n    \r\n    return this.http.get<PartnerModel>(url);\r\n  }\r\n  addPartner(partner:CreatePartnerDto):Observable<any>{\r\n    return this.http.post<any>(this.apiUrl,partner);\r\n  }\r\n  updatePartner(id:number,partner:PartnerModel):Observable<any>{\r\n    return this.http.put<any>(`${this.apiUrl}/${id}`,partner);\r\n  }\r\n  getPartner(id:number):Observable<any>{\r\n    return this.http.get<any>(`${this.apiUrl}/${id}`);\r\n  }\r\n  getContacts(partnerId:number):Observable<Contact[]>{\r\n    return this.http.get<any>(`${this.apiUrl}/${partnerId}/contacts`).pipe(\r\n      map(response => response.success ? response.data : [])\r\n    );\r\n  }\r\n  \r\n  addContact(partnerId: number, contact: Contact): Observable<any> {\r\n    return this.http.post<any>(`${this.apiUrl}/${partnerId}/contacts`, contact);\r\n  }\r\n\r\n  updateContact(partnerId: number, contactId: number, contact: Contact): Observable<any> {\r\n    return this.http.put<any>(`${this.apiUrl}/${partnerId}/contacts/${contactId}`, contact);\r\n  }\r\n  \r\n  deleteContact(partnerId: number, contactId: number): Observable<any> {\r\n    const url = `${this.apiUrl}/${partnerId}/contacts/${contactId}`;\r\n    console.log('API Call - Delete Contact:', {\r\n      url,\r\n      partnerId,\r\n      contactId,\r\n      fullUrl: `${environment.apiBaseUrl}/Partners/${partnerId}/contacts/${contactId}`\r\n    });\r\n    return this.http.delete(url, {\r\n      observe: 'response'\r\n    });\r\n  }\r\n  \r\n  deletePartner(id:number){\r\n    return this.http.delete(`${this.apiUrl}/${id}`);\r\n  }\r\n  getPartnerById(id:number):Observable<{success: boolean, message: string, data: Item, errors: any[]}>{\r\n    return this.http.get<{success: boolean, message: string, data: Item, errors: any[]}>(`${this.apiUrl}/${id}`);\r\n  }\r\n}\r\n", "import { Component, Input, Output, EventEmitter } from '@angular/core';\r\n\r\nexport interface PartnersConfirmationModalData {\r\n  title: string;\r\n  message: string;\r\n  confirmText: string;\r\n  cancelText: string;\r\n  type: 'delete' | 'warning' | 'info';\r\n}\r\n\r\n@Component({\r\n  selector: 'app-partners-confirmation-modal',\r\n  standalone: false,\r\n  template: `\r\n    <div class=\"modal-overlay\" *ngIf=\"isVisible\" (click)=\"onOverlayClick($event)\">\r\n      <div class=\"modal-container\" [dir]=\"isRTL ? 'rtl' : 'ltr'\">\r\n        <!-- Close Button -->\r\n        <button class=\"close-btn\" (click)=\"onCancel()\">\r\n          <svg width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\">\r\n            <line x1=\"18\" y1=\"6\" x2=\"6\" y2=\"18\"></line>\r\n            <line x1=\"6\" y1=\"6\" x2=\"18\" y2=\"18\"></line>\r\n          </svg>\r\n        </button>\r\n\r\n        <!-- Icon -->\r\n        <div class=\"modal-icon\" [class]=\"'icon-' + data.type\">\r\n          <svg *ngIf=\"data.type === 'delete'\" width=\"48\" height=\"48\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\">\r\n            <polyline points=\"3,6 5,6 21,6\"></polyline>\r\n            <path d=\"M19,6v14a2,2,0,0,1-2,2H7a2,2,0,0,1-2-2V6m3,0V4a2,2,0,0,1,2-2h4a2,2,0,0,1,2,2V6\"></path>\r\n            <line x1=\"10\" y1=\"11\" x2=\"10\" y2=\"17\"></line>\r\n            <line x1=\"14\" y1=\"11\" x2=\"14\" y2=\"17\"></line>\r\n          </svg>\r\n          <svg *ngIf=\"data.type === 'warning'\" width=\"48\" height=\"48\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\">\r\n            <path d=\"M10.29 3.86L1.82 18a2 2 0 0 0 1.71 3h16.94a2 2 0 0 0 1.71-3L13.71 3.86a2 2 0 0 0-3.42 0z\"></path>\r\n            <line x1=\"12\" y1=\"9\" x2=\"12\" y2=\"13\"></line>\r\n            <line x1=\"12\" y1=\"17\" x2=\"12.01\" y2=\"17\"></line>\r\n          </svg>\r\n          <svg *ngIf=\"data.type === 'info'\" width=\"48\" height=\"48\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\">\r\n            <circle cx=\"12\" cy=\"12\" r=\"10\"></circle>\r\n            <line x1=\"12\" y1=\"16\" x2=\"12\" y2=\"12\"></line>\r\n            <line x1=\"12\" y1=\"8\" x2=\"12.01\" y2=\"8\"></line>\r\n          </svg>\r\n        </div>\r\n\r\n        <!-- Title -->\r\n        <h2 class=\"modal-title\">{{ data.title || 'No Title' }}</h2>\r\n\r\n        <!-- Message -->\r\n        <p class=\"modal-message\">{{ data.message || 'No Message' }}</p>\r\n\r\n        <!-- Action Buttons -->\r\n        <div class=\"modal-actions\">\r\n          <button class=\"btn btn-cancel\" (click)=\"onCancel()\" *ngIf=\"data.cancelText\">\r\n            {{ data.cancelText || 'Cancel' }}\r\n          </button>\r\n          <button class=\"btn btn-confirm\" [class]=\"'btn-' + data.type\" (click)=\"onConfirm()\">\r\n            {{ data.confirmText || 'Confirm' }}\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  `,\r\n  styles: [`\r\n    .modal-overlay {\r\n      position: fixed;\r\n      top: 0;\r\n      left: 0;\r\n      right: 0;\r\n      bottom: 0;\r\n      background: rgba(0, 0, 0, 0.5);\r\n      backdrop-filter: blur(4px);\r\n      display: flex;\r\n      align-items: center;\r\n      justify-content: center;\r\n      z-index: 99999;\r\n      padding: 1rem;\r\n    }\r\n\r\n    .modal-container {\r\n      background: white;\r\n      border-radius: 12px;\r\n      padding: 2rem;\r\n      max-width: 400px;\r\n      width: 100%;\r\n      position: relative;\r\n      box-shadow: 0 20px 25px -5px rgba(0, 0, 0, 0.1), 0 10px 10px -5px rgba(0, 0, 0, 0.04);\r\n      animation: modalSlideIn 0.3s ease-out;\r\n      text-align: center;\r\n    }\r\n\r\n    @keyframes modalSlideIn {\r\n      from {\r\n        opacity: 0;\r\n        transform: scale(0.95) translateY(-10px);\r\n      }\r\n      to {\r\n        opacity: 1;\r\n        transform: scale(1) translateY(0);\r\n      }\r\n    }\r\n\r\n    .close-btn {\r\n      position: absolute;\r\n      top: 1rem;\r\n      right: 1rem;\r\n      background: none;\r\n      border: none;\r\n      cursor: pointer;\r\n      padding: 0.5rem;\r\n      border-radius: 50%;\r\n      transition: background-color 0.2s;\r\n    }\r\n\r\n    .close-btn:hover {\r\n      background-color: #f3f4f6;\r\n    }\r\n\r\n    .modal-icon {\r\n      text-align: center;\r\n      margin-bottom: 1.5rem;\r\n      color: #6b7280;\r\n      display: flex;\r\n      justify-content: center;\r\n      align-items: center;\r\n    }\r\n\r\n    .icon-delete {\r\n      color: #dc2626;\r\n    }\r\n\r\n    .icon-warning {\r\n      color: #f59e0b;\r\n    }\r\n\r\n    .icon-info {\r\n      color: #3b82f6;\r\n    }\r\n\r\n    .modal-title {\r\n      font-size: 1.5rem;\r\n      font-weight: 700;\r\n      color: #111827;\r\n      text-align: center !important;\r\n      margin-bottom: 1rem;\r\n      line-height: 1.4;\r\n    }\r\n\r\n    .modal-message {\r\n      color: #6b7280;\r\n      text-align: center !important;\r\n      margin-bottom: 2rem;\r\n      line-height: 1.6;\r\n      font-size: 1rem;\r\n    }\r\n\r\n    .modal-actions {\r\n      display: flex;\r\n      gap: 1rem;\r\n      justify-content: center;\r\n    }\r\n\r\n    .btn {\r\n      padding: 0.75rem 1.5rem;\r\n      border-radius: 8px;\r\n      font-weight: 500;\r\n      cursor: pointer;\r\n      border: none;\r\n      transition: all 0.2s;\r\n      min-width: 100px;\r\n    }\r\n\r\n    .btn-cancel {\r\n      background: white;\r\n      color: #374151;\r\n      border: 2px solid #e5e7eb;\r\n    }\r\n\r\n    .btn-cancel:hover {\r\n      background: #f9fafb;\r\n      border-color: #d1d5db;\r\n    }\r\n\r\n    .btn-confirm {\r\n      color: white;\r\n    }\r\n\r\n    .btn-delete {\r\n      background: #dc2626;\r\n    }\r\n\r\n    .btn-delete:hover {\r\n      background: #b91c1c;\r\n    }\r\n\r\n    .btn-warning {\r\n      background: #f59e0b;\r\n    }\r\n\r\n    .btn-warning:hover {\r\n      background: #d97706;\r\n    }\r\n\r\n    .btn-info {\r\n      background: #3b82f6;\r\n    }\r\n\r\n    .btn-info:hover {\r\n      background: #2563eb;\r\n    }\r\n\r\n    /* RTL Support */\r\n    .modal-container[dir=\"rtl\"] .close-btn {\r\n      left: auto;\r\n      right: 1rem;\r\n    }\r\n\r\n    .modal-container[dir=\"rtl\"] .modal-title,\r\n    .modal-container[dir=\"rtl\"] .modal-message {\r\n      text-align: center !important;\r\n    }\r\n\r\n    /* Responsive */\r\n    @media (max-width: 480px) {\r\n      .modal-container {\r\n        padding: 1.5rem;\r\n        margin: 1rem;\r\n      }\r\n\r\n      .modal-actions {\r\n        flex-direction: column;\r\n      }\r\n\r\n      .btn {\r\n        width: 100%;\r\n      }\r\n    }\r\n  `]\r\n})\r\nexport class PartnersConfirmationModalComponent {\r\n  @Input() data!: PartnersConfirmationModalData;\r\n  @Input() isRTL = false;\r\n  @Input() isVisible = false;\r\n  @Output() confirm = new EventEmitter<void>();\r\n  @Output() cancel = new EventEmitter<void>();\r\n\r\n  show(data: PartnersConfirmationModalData): void {\r\n    this.data = data;\r\n    this.isVisible = true;\r\n  }\r\n\r\n  hide(): void {\r\n    this.isVisible = false;\r\n  }\r\n\r\n  onConfirm(): void {\r\n    this.confirm.emit();\r\n    this.hide();\r\n  }\r\n\r\n  onCancel(): void {\r\n    this.cancel.emit();\r\n    this.hide();\r\n  }\r\n\r\n  onOverlayClick(event: Event): void {\r\n    if (event.target === event.currentTarget) {\r\n      this.onCancel();\r\n    }\r\n  }\r\n}\r\n", "import { AfterViewInit, Component, ElementRef, ViewChild } from '@angular/core';\r\nimport { PartnersService } from '../../../services/partners.service';\r\nimport { AbstractControl, FormBuilder, FormGroup, ValidationErrors, Validators, FormArray } from '@angular/forms';\r\nimport { TranslationService } from '../../../services/translation.service';\r\nimport { PartnersConfirmationModalComponent } from '../partners-confirmation-modal/partners-confirmation-modal.component';\r\n\r\n@Component({\r\n  selector: 'app-add-partner',\r\n  standalone: false,\r\n  templateUrl: './add-partner.html',\r\n  styleUrl: './add-partner.css'\r\n})\r\nexport class AddPartner implements AfterViewInit {\r\n  @ViewChild('confirmationModal') confirmationModal!: PartnersConfirmationModalComponent;\r\n  \r\n  // Custom modal properties\r\n  isOpen = false;\r\n  \r\n  addForm!: FormGroup\r\n  \r\n  constructor(\r\n    private partnersService: PartnersService,\r\n    private fb: FormBuilder,\r\n    private translationService: TranslationService\r\n  ) {}\r\n\r\n  ngAfterViewInit(): void {\r\n    // No Bootstrap modal needed\r\n  }\r\n  \r\n  open() { \r\n    this.isOpen = true;\r\n    // Reset form when opening\r\n    this.addForm.reset();\r\n    this.contacts.clear();\r\n    this.addContact(); // Add initial contact\r\n  }\r\n  \r\n  close() { \r\n    this.isOpen = false;\r\n    // Reset form when closing\r\n    this.addForm.reset();\r\n    this.contacts.clear();\r\n    this.countrySearchTerm = '';\r\n    this.filteredCountries = [...this.countries];\r\n  }\r\n\r\n  // Handle backdrop click\r\n  onBackdropClick(event: Event) {\r\n    if (event.target === event.currentTarget) {\r\n      this.close();\r\n    }\r\n  }\r\n\r\n  readonly categories = [\r\n    { key: 0, value: \"partners.categories.0\" },\r\n    { key: 1, value: \"partners.categories.1\" },\r\n    { key: 2, value: \"partners.categories.2\" },\r\n    { key: 3, value: \"partners.categories.3\" },\r\n    { key: 4, value: \"partners.categories.4\" },\r\n    { key: 5, value: \"partners.categories.5\" }\r\n  ]\r\n\r\n  readonly countries = [\r\n    \"Afghanistan\", \"Albania\", \"Algeria\", \"Andorra\", \"Angola\", \"Antigua and Barbuda\", \"Argentina\", \"Armenia\", \"Australia\", \"Austria\",\r\n    \"Azerbaijan\", \"Bahamas\", \"Bahrain\", \"Bangladesh\", \"Barbados\", \"Belarus\", \"Belgium\", \"Belize\", \"Benin\", \"Bhutan\",\r\n    \"Bolivia\", \"Bosnia and Herzegovina\", \"Botswana\", \"Brazil\", \"Brunei\", \"Bulgaria\", \"Burkina Faso\", \"Burundi\", \"Cabo Verde\", \"Cambodia\",\r\n    \"Cameroon\", \"Canada\", \"Central African Republic\", \"Chad\", \"Chile\", \"China\", \"Colombia\", \"Comoros\", \"Congo\", \"Costa Rica\",\r\n    \"Croatia\", \"Cuba\", \"Cyprus\", \"Czech Republic\", \"Democratic Republic of the Congo\", \"Denmark\", \"Djibouti\", \"Dominica\", \"Dominican Republic\", \"Ecuador\",\r\n    \"Egypt\", \"El Salvador\", \"Equatorial Guinea\", \"Eritrea\", \"Estonia\", \"Eswatini\", \"Ethiopia\", \"Fiji\", \"Finland\", \"France\",\r\n    \"Gabon\", \"Gambia\", \"Georgia\", \"Germany\", \"Ghana\", \"Greece\", \"Grenada\", \"Guatemala\", \"Guinea\", \"Guinea-Bissau\",\r\n    \"Guyana\", \"Haiti\", \"Honduras\", \"Hungary\", \"Iceland\", \"India\", \"Indonesia\", \"Iran\", \"Iraq\", \"Ireland\",\r\n    \"Israel\", \"Italy\", \"Ivory Coast\", \"Jamaica\", \"Japan\", \"Jordan\", \"Kazakhstan\", \"Kenya\", \"Kiribati\", \"Kuwait\",\r\n    \"Kyrgyzstan\", \"Laos\", \"Latvia\", \"Lebanon\", \"Lesotho\", \"Liberia\", \"Libya\", \"Liechtenstein\", \"Luxembourg\", \"Madagascar\",\r\n    \"Malawi\", \"Malaysia\", \"Maldives\", \"Mali\", \"Malta\", \"Marshall Islands\", \"Mauritania\", \"Mauritius\", \"Mexico\", \"Micronesia\",\r\n    \"Moldova\", \"Monaco\", \"Mongolia\", \"Montenegro\", \"Morocco\", \"Mozambique\", \"Myanmar\", \"Namibia\", \"Nauru\", \"Nepal\",\r\n    \"Netherlands\", \"New Zealand\", \"Nicaragua\", \"Niger\", \"Nigeria\", \"North Korea\", \"North Macedonia\", \"Norway\", \"Oman\", \"Pakistan\",\r\n    \"Palau\", \"Palestine\", \"Panama\", \"Papua New Guinea\", \"Paraguay\", \"Peru\", \"Philippines\", \"Poland\", \"Portugal\", \"Qatar\",\r\n    \"Romania\", \"Russia\", \"Rwanda\", \"Saint Kitts and Nevis\", \"Saint Lucia\", \"Saint Vincent and the Grenadines\", \"Samoa\", \"San Marino\", \"Sao Tome and Principe\", \"Saudi Arabia\",\r\n    \"Senegal\", \"Serbia\", \"Seychelles\", \"Sierra Leone\", \"Singapore\", \"Slovakia\", \"Slovenia\", \"Solomon Islands\", \"Somalia\", \"South Africa\",\r\n    \"South Korea\", \"South Sudan\", \"Spain\", \"Sri Lanka\", \"Sudan\", \"Suriname\", \"Sweden\", \"Switzerland\", \"Syria\", \"Taiwan\",\r\n    \"Tajikistan\", \"Tanzania\", \"Thailand\", \"Timor-Leste\", \"Togo\", \"Tonga\", \"Trinidad and Tobago\", \"Tunisia\", \"Turkey\", \"Turkmenistan\",\r\n    \"Tuvalu\", \"Uganda\", \"Ukraine\", \"United Arab Emirates\", \"United Kingdom\", \"United States\", \"Uruguay\", \"Uzbekistan\", \"Vanuatu\", \"Vatican City\",\r\n    \"Venezuela\", \"Vietnam\", \"Yemen\", \"Zambia\", \"Zimbabwe\"\r\n  ];\r\n\r\n  filteredCountries: string[] = [];\r\n  countrySearchTerm: string = '';\r\n\r\n\r\n  ngOnInit() {\r\n    this.initializeForm();\r\n    this.filteredCountries = [...this.countries];\r\n  }\r\n\r\n  filterCountries(searchTerm: string) {\r\n    if (!searchTerm.trim()) {\r\n      this.filteredCountries = [...this.countries];\r\n    } else {\r\n      this.filteredCountries = this.countries.filter(country =>\r\n        country.toLowerCase().includes(searchTerm.toLowerCase())\r\n      );\r\n    }\r\n  }\r\n\r\n  onCountrySearch(event: any) {\r\n    const searchTerm = event.target.value.toLowerCase();\r\n    this.countrySearchTerm = searchTerm;\r\n    this.filteredCountries = this.countries.filter(country => \r\n      country.toLowerCase().includes(searchTerm)\r\n    );\r\n  }\r\n\r\n  initializeForm() {\r\n    this.addForm = this.fb.group({\r\n      name: ['', [Validators.required, Validators.minLength(3), Validators.maxLength(50)]],\r\n      category: ['', Validators.required],\r\n      sector: ['', [Validators.required, Validators.minLength(2)]],\r\n      country: ['', [Validators.required, Validators.minLength(2)]],\r\n      city: ['', [Validators.required, Validators.minLength(2)]],\r\n      note: [''],\r\n      description: ['', [Validators.required, Validators.minLength(10)]],\r\n      website: ['', [Validators.required, Validators.minLength(5)]],\r\n      address: ['', [Validators.required, Validators.minLength(5)]],\r\n      contractStartDate: ['', [Validators.required]],\r\n      status: ['', Validators.required],\r\n      contacts: this.fb.array([])\r\n    });\r\n    \r\n    // Add initial contact\r\n    this.addContact();\r\n  }\r\n\r\n  // Contacts management methods\r\n  get contacts() {\r\n    return this.addForm.get('contacts') as FormArray;\r\n  }\r\n\r\n  addContact() {\r\n    const contactGroup = this.fb.group({\r\n      email: ['', [Validators.required, Validators.email]],\r\n      phone: ['', [Validators.required, Validators.minLength(10)]],\r\n      mobile: ['', [Validators.required, Validators.minLength(10)]]\r\n    });\r\n    this.contacts.push(contactGroup);\r\n  }\r\n\r\n  removeContact(index: number) {\r\n    if (this.contacts.length > 1) {\r\n      this.contacts.removeAt(index);\r\n    }\r\n  }\r\n\r\n  getContactErrorMessage(control: AbstractControl | null, field: string): string {\r\n    if (!control?.errors) return '';\r\n    \r\n    if (control.errors['required']) {\r\n      return this.translate('common.field_required');\r\n    }\r\n    if (control.errors['email']) {\r\n      return this.translate('common.invalid_email');\r\n    }\r\n    if (control.errors['minlength']) {\r\n      const requiredLength = control.errors['minlength']['requiredLength'];\r\n      if (requiredLength === 2) {\r\n        return this.translate('partners.min_length_2');\r\n      } else if (requiredLength === 10) {\r\n        return this.translate('partners.min_length_10');\r\n      }\r\n      return `Minimum length is ${requiredLength} characters`;\r\n    }\r\n    return 'Invalid field';\r\n  }\r\n\r\n  isFieldValid(field: string) {\r\n    const control = this.addForm.get(field);\r\n    return control?.touched && control?.invalid\r\n  }\r\n\r\n  hasServerError(field: string) {\r\n    const control = this.addForm.get(field);\r\n    return control?.errors?.['serverError'];\r\n  }\r\n\r\n  getServerErrorMessage(field: string) {\r\n    const control = this.addForm.get(field);\r\n    return control?.errors?.['serverError'] || '';\r\n  }\r\n\r\n  getErrorMessage(field: string) {\r\n    const control = this.addForm.get(field);\r\n    if (!control?.errors) return ''\r\n    \r\n    if (control.errors['required']) {\r\n      return this.translate('common.field_required')\r\n    }\r\n    if (control.errors['minlength']) {\r\n      const requiredLength = control.errors['minlength']['requiredLength']\r\n      if (requiredLength === 2) {\r\n        return this.translate('partners.min_length_2')\r\n      } else if (requiredLength === 3) {\r\n        return this.translate('partners.min_length_3')\r\n      } else if (requiredLength === 5) {\r\n        return this.translate('partners.min_length_5')\r\n      } else if (requiredLength === 10) {\r\n        return this.translate('partners.min_length_10')\r\n      }\r\n      return `Minimum length is ${requiredLength} characters`\r\n    }\r\n    if (control.errors['maxlength']) {\r\n      const requiredLength = control.errors['maxlength']['requiredLength']\r\n      if (requiredLength === 15) {\r\n        return this.translate('partners.max_length_15')\r\n      }\r\n      return `Maximum length is ${requiredLength} characters`\r\n    }\r\n    if (control.errors['pastDate']) {\r\n      return this.translate('partners.future_date_required')\r\n    }\r\n    return 'Invalid field'\r\n  }\r\n\r\n  onSubmit() {\r\n    if (this.addForm.invalid) {\r\n      this.addForm.markAllAsTouched()\r\n      return\r\n    }\r\n\r\n    const formValue = this.addForm.value;\r\n    \r\n    // Ensure all required fields are included and properly formatted\r\n    const partnerData = {\r\n      name: formValue.name,\r\n      category: parseInt(formValue.category),\r\n      sector: formValue.sector,\r\n      country: formValue.country,\r\n      city: formValue.city,\r\n      note: formValue.note,\r\n      description: formValue.description,\r\n      website: formValue.website,\r\n      address: formValue.address,\r\n      contractStartDate: new Date(formValue.contractStartDate).toISOString(),\r\n      status: parseInt(formValue.status)\r\n    };\r\n\r\n\r\n    this.partnersService.addPartner(partnerData).subscribe({\r\n      next: (res) => {\r\n        this.showSuccessMessage(this.translate('partners.created_success'));\r\n        this.close()\r\n        this.addForm.reset()\r\n        // Optionally refresh the partners list\r\n        // this.partnersList.loadPartners();\r\n      },\r\n      error: (error) => {\r\n        this.handleApiErrors(error);\r\n      }\r\n    })\r\n  }\r\n\r\n  private handleApiErrors(error: any) {\r\n    if (error.error?.errors) {\r\n      // Handle validation errors by setting them on form controls\r\n      const errors = error.error.errors;\r\n      \r\n      Object.keys(errors).forEach(fieldName => {\r\n        const control = this.addForm.get(this.getFormFieldName(fieldName));\r\n        if (control) {\r\n          control.setErrors({ serverError: errors[fieldName][0] });\r\n          control.markAsTouched();\r\n        }\r\n      });\r\n    } else {\r\n      // Show generic error in alert\r\n      let errorMessage = 'Unknown error occurred';\r\n      if (error.error?.message) {\r\n        errorMessage = error.error.message;\r\n      } else if (error.message) {\r\n        errorMessage = error.message;\r\n      }\r\n      alert(this.translationService.translate('common.error') + ': ' + errorMessage);\r\n    }\r\n  }\r\n\r\n  private getFormFieldName(apiFieldName: string): string {\r\n    // Map API field names (capitalized) to form field names (lowercase)\r\n    const fieldMapping: { [key: string]: string } = {\r\n      'Name': 'name',\r\n      'Category': 'category',\r\n      'Sector': 'sector',\r\n      'Country': 'country',\r\n      'City': 'city',\r\n      'Note': 'note',\r\n      'Description': 'description',\r\n      'Website': 'website',\r\n      'Address': 'address',\r\n      'ContractStartDate': 'contractStartDate',\r\n      'Status': 'status'\r\n    };\r\n    return fieldMapping[apiFieldName] || apiFieldName.toLowerCase();\r\n  }\r\n\r\n  translate(key: string): string {\r\n    return this.translationService.translate(key);\r\n  }\r\n\r\n  isRTL(): boolean {\r\n    return this.translationService.isRTL();\r\n  }\r\n\r\n  showSuccessMessage(message: string) {\r\n    const successData = {\r\n      title: this.translate('common.success'),\r\n      message: message,\r\n      confirmText: this.translate('common.ok'),\r\n      cancelText: '',\r\n      type: 'info' as const\r\n    };\r\n    this.confirmationModal.show(successData);\r\n  }\r\n}\r\n", "<!-- Add Partner Modal -->\r\n<div class=\"modal-overlay\" [class.open]=\"isOpen\" (click)=\"onBackdropClick($event)\">\r\n  <div class=\"modal-container\">\r\n    <!-- Modal Header -->\r\n    <div class=\"modal-header\" [dir]=\"isRTL() ? 'rtl' : 'ltr'\">\r\n      \r\n      <button type=\"button\" class=\"close-btn\" (click)=\"close()\" aria-label=\"Close\">\r\n        <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\">\r\n          <line x1=\"18\" y1=\"6\" x2=\"6\" y2=\"18\"></line>\r\n          <line x1=\"6\" y1=\"6\" x2=\"18\" y2=\"18\"></line>\r\n        </svg>\r\n      </button>\r\n      <h2 class=\"modal-title\" [class.text-end]=\"isRTL()\" [class.text-start]=\"!isRTL()\">\r\n        <i class=\"bi bi-plus-circle me-2\"></i>\r\n        {{ translate('partners.add_partner') }}\r\n      </h2>\r\n    </div>\r\n\r\n    <!-- Modal Body -->\r\n    <div class=\"modal-body\">\r\n      <form [formGroup]=\"addForm\" (ngSubmit)=\"onSubmit()\">\r\n        <div class=\"row\">\r\n          <!-- Partner Name -->\r\n          <div class=\"col-md-6 mb-3\">\r\n            <label for=\"name\" class=\"form-label\">{{ translate('partners.name') }} *</label>\r\n            <input \r\n              type=\"text\" \r\n              class=\"form-control\" \r\n              id=\"name\" \r\n              formControlName=\"name\"\r\n              [placeholder]=\"translate('partners.name_placeholder')\"\r\n              [class.is-invalid]=\"isFieldValid('name') || hasServerError('name')\"\r\n            >\r\n            <div class=\"invalid-feedback\" *ngIf=\"isFieldValid('name')\">\r\n              {{ getErrorMessage('name') }}\r\n            </div>\r\n            <div class=\"invalid-feedback\" *ngIf=\"hasServerError('name')\">\r\n              {{ getServerErrorMessage('name') }}\r\n            </div>\r\n          </div>\r\n\r\n          <!-- Category -->\r\n          <div class=\"col-md-6 mb-3\">\r\n            <label for=\"category\" class=\"form-label\">{{ translate('partners.category') }} *</label>\r\n            <select \r\n              class=\"form-select\" \r\n              id=\"category\" \r\n              formControlName=\"category\"\r\n              [class.is-invalid]=\"isFieldValid('category') || hasServerError('category')\"\r\n            >\r\n              <option value=\"\" disabled>{{ translate('partners.select_category') }}</option>\r\n              <option *ngFor=\"let cat of categories\" [value]=\"cat.key\">\r\n                {{ translate(cat.value) }}\r\n              </option>\r\n            </select>\r\n            <div class=\"invalid-feedback\" *ngIf=\"isFieldValid('category')\">\r\n              {{ getErrorMessage('category') }}\r\n            </div>\r\n            <div class=\"invalid-feedback\" *ngIf=\"hasServerError('category')\">\r\n              {{ getServerErrorMessage('category') }}\r\n            </div>\r\n          </div>\r\n\r\n          <!-- Sector -->\r\n          <div class=\"col-md-6 mb-3\">\r\n            <label for=\"sector\" class=\"form-label\">{{ translate('partners.sector') }} *</label>\r\n            <input \r\n              type=\"text\" \r\n              class=\"form-control\" \r\n              id=\"sector\" \r\n              formControlName=\"sector\"\r\n              [placeholder]=\"translate('partners.sector_placeholder')\"\r\n              [class.is-invalid]=\"isFieldValid('sector') || hasServerError('sector')\"\r\n            >\r\n            <div class=\"invalid-feedback\" *ngIf=\"isFieldValid('sector')\">\r\n              {{ getErrorMessage('sector') }}\r\n            </div>\r\n            <div class=\"invalid-feedback\" *ngIf=\"hasServerError('sector')\">\r\n              {{ getServerErrorMessage('sector') }}\r\n            </div>\r\n          </div>\r\n\r\n          <!-- Country -->\r\n          <div class=\"col-md-6 mb-3\">\r\n            <label for=\"country\" class=\"form-label\">{{ translate('partners.country') }} *</label>\r\n            <div class=\"position-relative\">\r\n              <input \r\n                type=\"text\" \r\n                class=\"form-control\" \r\n                id=\"country\" \r\n                formControlName=\"country\"\r\n                [placeholder]=\"translate('partners.country_placeholder')\"\r\n                [class.is-invalid]=\"isFieldValid('country') || hasServerError('country')\"\r\n                (input)=\"onCountrySearch($event)\"\r\n                (focus)=\"filterCountries(countrySearchTerm)\"\r\n                autocomplete=\"off\"\r\n              >\r\n              <div class=\"dropdown-menu w-100 position-absolute\" \r\n                   [class.show]=\"filteredCountries.length > 0 && countrySearchTerm.length > 0\"\r\n                   style=\"max-height: 200px; overflow-y: auto; z-index: 1050;\">\r\n                <button type=\"button\" \r\n                        class=\"dropdown-item\" \r\n                        *ngFor=\"let country of filteredCountries\"\r\n                        (click)=\"addForm.patchValue({country: country}); countrySearchTerm = country; filteredCountries = []\">\r\n                  {{ country }}\r\n                </button>\r\n              </div>\r\n            </div>\r\n            <div class=\"invalid-feedback\" *ngIf=\"isFieldValid('country')\">\r\n              {{ getErrorMessage('country') }}\r\n            </div>\r\n            <div class=\"invalid-feedback\" *ngIf=\"hasServerError('country')\">\r\n              {{ getServerErrorMessage('country') }}\r\n            </div>\r\n          </div>\r\n\r\n          <!-- City -->\r\n          <div class=\"col-md-6 mb-3\">\r\n            <label for=\"city\" class=\"form-label\">{{ translate('partners.city') }} *</label>\r\n            <input \r\n              type=\"text\" \r\n              class=\"form-control\" \r\n              id=\"city\" \r\n              formControlName=\"city\"\r\n              [placeholder]=\"translate('partners.city_placeholder')\"\r\n              [class.is-invalid]=\"isFieldValid('city') || hasServerError('city')\"\r\n            >\r\n            <div class=\"invalid-feedback\" *ngIf=\"isFieldValid('city')\">\r\n              {{ getErrorMessage('city') }}\r\n            </div>\r\n            <div class=\"invalid-feedback\" *ngIf=\"hasServerError('city')\">\r\n              {{ getServerErrorMessage('city') }}\r\n            </div>\r\n          </div>\r\n\r\n          <!-- Note -->\r\n          <div class=\"col-12 mb-3\">\r\n            <label for=\"note\" class=\"form-label\">{{ translate('partners.note') }} *</label>\r\n            <textarea \r\n              class=\"form-control\" \r\n              id=\"note\" \r\n              rows=\"3\"\r\n              formControlName=\"note\"\r\n              [placeholder]=\"translate('partners.note_placeholder')\"\r\n              [class.is-invalid]=\"isFieldValid('note') || hasServerError('note')\"\r\n            ></textarea>\r\n            <div class=\"invalid-feedback\" *ngIf=\"isFieldValid('note')\">\r\n              {{ getErrorMessage('note') }}\r\n            </div>\r\n            <div class=\"invalid-feedback\" *ngIf=\"hasServerError('note')\">\r\n              {{ getServerErrorMessage('note') }}\r\n            </div>\r\n          </div>\r\n\r\n          <!-- Description -->\r\n          <div class=\"col-12 mb-3\">\r\n            <label for=\"description\" class=\"form-label\">{{ translate('partners.description') }} *</label>\r\n            <textarea \r\n              class=\"form-control\" \r\n              id=\"description\" \r\n              rows=\"3\"\r\n              formControlName=\"description\"\r\n              [placeholder]=\"translate('partners.description_placeholder')\"\r\n              [class.is-invalid]=\"isFieldValid('description') || hasServerError('description')\"\r\n            ></textarea>\r\n            <div class=\"invalid-feedback\" *ngIf=\"isFieldValid('description')\">\r\n              {{ getErrorMessage('description') }}\r\n            </div>\r\n            <div class=\"invalid-feedback\" *ngIf=\"hasServerError('description')\">\r\n              {{ getServerErrorMessage('description') }}\r\n            </div>\r\n          </div>\r\n\r\n          <!-- Website -->\r\n          <div class=\"col-md-6 mb-3\">\r\n            <label for=\"website\" class=\"form-label\">{{ translate('partners.website') }} *</label>\r\n            <input \r\n              type=\"url\" \r\n              class=\"form-control\" \r\n              id=\"website\" \r\n              formControlName=\"website\"\r\n              [placeholder]=\"translate('partners.website_placeholder')\"\r\n              [class.is-invalid]=\"isFieldValid('website') || hasServerError('website')\"\r\n            >\r\n            <div class=\"invalid-feedback\" *ngIf=\"isFieldValid('website')\">\r\n              {{ getErrorMessage('website') }}\r\n            </div>\r\n            <div class=\"invalid-feedback\" *ngIf=\"hasServerError('website')\">\r\n              {{ getServerErrorMessage('website') }}\r\n            </div>\r\n          </div>\r\n\r\n          <!-- Address -->\r\n          <div class=\"col-md-6 mb-3\">\r\n            <label for=\"address\" class=\"form-label\">{{ translate('partners.address') }} *</label>\r\n            <input \r\n              type=\"text\" \r\n              class=\"form-control\" \r\n              id=\"address\" \r\n              formControlName=\"address\"\r\n              [placeholder]=\"translate('partners.address_placeholder')\"\r\n              [class.is-invalid]=\"isFieldValid('address') || hasServerError('address')\"\r\n            >\r\n            <div class=\"invalid-feedback\" *ngIf=\"isFieldValid('address')\">\r\n              {{ getErrorMessage('address') }}\r\n            </div>\r\n            <div class=\"invalid-feedback\" *ngIf=\"hasServerError('address')\">\r\n              {{ getServerErrorMessage('address') }}\r\n            </div>\r\n          </div>\r\n\r\n          <!-- Contract Start Date -->\r\n          <div class=\"col-md-6 mb-3\">\r\n            <label for=\"contractStartDate\" class=\"form-label\">{{ translate('partners.contract_start_date') }} *</label>\r\n            <input \r\n              type=\"date\" \r\n              class=\"form-control\" \r\n              id=\"contractStartDate\" \r\n              formControlName=\"contractStartDate\"\r\n              [placeholder]=\"translate('partners.contract_date_placeholder')\"\r\n              [class.is-invalid]=\"isFieldValid('contractStartDate') || hasServerError('contractStartDate')\"\r\n            >\r\n            <div class=\"invalid-feedback\" *ngIf=\"isFieldValid('contractStartDate')\">\r\n              {{ getErrorMessage('contractStartDate') }}\r\n            </div>\r\n            <div class=\"invalid-feedback\" *ngIf=\"hasServerError('contractStartDate')\">\r\n              {{ getServerErrorMessage('contractStartDate') }}\r\n            </div>\r\n          </div>\r\n\r\n          <!-- Status -->\r\n          <div class=\"col-md-6 mb-3\">\r\n            <label for=\"status\" class=\"form-label\">{{ translate('partners.status') }} *</label>\r\n            <select \r\n              class=\"form-select\" \r\n              id=\"status\" \r\n              formControlName=\"status\"\r\n              [class.is-invalid]=\"isFieldValid('status') || hasServerError('status')\"\r\n            >\r\n              <option value=\"\">{{ translate('partners.select_status') }}</option>\r\n              <option value=\"1\">{{ translate('partners.active') }}</option>\r\n              <option value=\"0\">{{ translate('partners.inactive') }}</option>\r\n            </select>\r\n            <div class=\"invalid-feedback\" *ngIf=\"isFieldValid('status')\">\r\n              {{ getErrorMessage('status') }}\r\n            </div>\r\n            <div class=\"invalid-feedback\" *ngIf=\"hasServerError('status')\">\r\n              {{ getServerErrorMessage('status') }}\r\n            </div>\r\n          </div>\r\n\r\n          <!-- Contacts Section -->\r\n          <div class=\"col-12 mb-3\">\r\n            <div class=\"d-flex justify-content-between align-items-center mb-3\">\r\n              <label class=\"form-label mb-0\">{{ translate('partners.contacts') }}</label>\r\n              <button type=\"button\" class=\"btn btn-outline-primary btn-sm\" (click)=\"addContact()\">\r\n                <i class=\"bi bi-plus-circle me-1\"></i>\r\n                {{ translate('partners.add_contact') }}\r\n              </button>\r\n            </div>\r\n            \r\n            <div formArrayName=\"contacts\">\r\n              <div *ngFor=\"let contact of contacts.controls; let i = index\" [formGroupName]=\"i\" class=\"row g-2 mb-3 p-3 border rounded\">\r\n                <div class=\"col-md-4\">\r\n                  <input \r\n                    type=\"email\" \r\n                    class=\"form-control\" \r\n                    [placeholder]=\"translate('partners.email_placeholder')\"\r\n                    formControlName=\"email\"\r\n                    [class.is-invalid]=\"contact.get('email')?.touched && contact.get('email')?.invalid\"\r\n                  >\r\n                  <div class=\"invalid-feedback\" *ngIf=\"contact.get('email')?.touched && contact.get('email')?.invalid\">\r\n                    {{ getContactErrorMessage(contact.get('email'), 'email') }}\r\n                  </div>\r\n                </div>\r\n                <div class=\"col-md-3\">\r\n                  <input \r\n                    type=\"tel\" \r\n                    class=\"form-control\" \r\n                    [placeholder]=\"translate('partners.phone_placeholder')\"\r\n                    formControlName=\"phone\"\r\n                    [class.is-invalid]=\"contact.get('phone')?.touched && contact.get('phone')?.invalid\"\r\n                  >\r\n                  <div class=\"invalid-feedback\" *ngIf=\"contact.get('phone')?.touched && contact.get('phone')?.invalid\">\r\n                    {{ getContactErrorMessage(contact.get('phone'), 'phone') }}\r\n                  </div>\r\n                </div>\r\n                <div class=\"col-md-3\">\r\n                  <input \r\n                    type=\"tel\" \r\n                    class=\"form-control\" \r\n                    [placeholder]=\"translate('partners.mobile_placeholder')\"\r\n                    formControlName=\"mobile\"\r\n                    [class.is-invalid]=\"contact.get('mobile')?.touched && contact.get('mobile')?.invalid\"\r\n                  >\r\n                  <div class=\"invalid-feedback\" *ngIf=\"contact.get('mobile')?.touched && contact.get('mobile')?.invalid\">\r\n                    {{ getContactErrorMessage(contact.get('mobile'), 'mobile') }}\r\n                  </div>\r\n                </div>\r\n                <div class=\"col-md-2 d-flex align-items-center\">\r\n                  <button type=\"button\" class=\"btn btn-danger btn-sm\" (click)=\"removeContact(i)\" [disabled]=\"contacts.length === 1\">\r\n                    <svg class=\"nav-icon\" width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" \r\n                         fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" \r\n                         stroke-linecap=\"round\" stroke-linejoin=\"round\" aria-label=\"Delete\">\r\n                      <polyline points=\"3 6 5 6 21 6\"></polyline>\r\n                      <path d=\"M19 6l-1 14a2 2 0 0 1-2 2H8a2 2 0 0 1-2-2L5 6\"></path>\r\n                      <path d=\"M10 11v6\"></path>\r\n                      <path d=\"M14 11v6\"></path>\r\n                      <path d=\"M9 6V4a1 1 0 0 1 1-1h4a1 1 0 0 1 1 1v2\"></path>\r\n                    </svg>\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <!-- Modal Footer -->\r\n        <div class=\"modal-footer\">\r\n          \r\n          <button type=\"submit\" class=\"btn btn-primary\" [disabled]=\"addForm.invalid\">\r\n            <i class=\"bi bi-check-circle me-2\"></i>\r\n            {{ translate('common.save') }}\r\n          </button>\r\n          <button type=\"button\" class=\"btn btn-secondary\" (click)=\"close()\">\r\n            {{ translate('common.cancel') }}\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<!-- Confirmation Modal -->\r\n<app-partners-confirmation-modal #confirmationModal></app-partners-confirmation-modal>\r\n", "import { AbstractControl, FormBuilder, FormGroup, ValidationErrors, Validators, FormArray } from '@angular/forms';\r\nimport { AfterViewInit, Component, ElementRef, OnInit, ViewChild } from '@angular/core';\r\nimport { PartnersService } from '../../../services/partners.service';\r\nimport { TranslationService } from '../../../services/translation.service';\r\nimport { Item } from '../../../models/partner.model';\r\nimport { PartnersConfirmationModalComponent } from '../partners-confirmation-modal/partners-confirmation-modal.component';\r\n\r\n@Component({\r\n  selector: 'app-edit-partner',\r\n  standalone: false,\r\n  templateUrl: './edit-partner.html',\r\n  styleUrl: './edit-partner.css'\r\n})\r\nexport class EditPartner implements OnInit, AfterViewInit {\r\n  @ViewChild('confirmationModal') confirmationModal!: PartnersConfirmationModalComponent;\r\n  \r\n  // Custom modal properties\r\n  isOpen = false;\r\n  \r\n  editForm!: FormGroup\r\n  currentPartner: Item | null = null;\r\n  \r\n  constructor(\r\n    private partnersService: PartnersService,\r\n    private fb: FormBuilder,\r\n    private translationService: TranslationService\r\n  ) { }\r\n\r\n  ngAfterViewInit() {\r\n    // No Bootstrap modal needed\r\n  }\r\n\r\n  open(partner?: Item) {\r\n    // Initialize form first\r\n    this.initializeForm();\r\n    \r\n    if (partner) {\r\n      this.currentPartner = partner;\r\n      this.loadPartnerData(partner);\r\n    }\r\n    this.isOpen = true;\r\n  }\r\n  \r\n  close() { \r\n    this.isOpen = false;\r\n    // Reset form when closing\r\n    this.editForm.reset();\r\n    this.contacts.clear();\r\n    this.currentPartner = null;\r\n    this.countrySearchTerm = '';\r\n    this.filteredCountries = [...this.countries];\r\n  }\r\n\r\n  // Handle backdrop click\r\n  onBackdropClick(event: Event) {\r\n    if (event.target === event.currentTarget) {\r\n      this.close();\r\n    }\r\n  }\r\n\r\n  readonly categories = [\r\n    { key: 0, value: \"partners.categories.0\" },\r\n    { key: 1, value: \"partners.categories.1\" },\r\n    { key: 2, value: \"partners.categories.2\" },\r\n    { key: 3, value: \"partners.categories.3\" },\r\n    { key: 4, value: \"partners.categories.4\" },\r\n    { key: 5, value: \"partners.categories.5\" }\r\n  ]\r\n\r\n  readonly countries = [\r\n    \"Afghanistan\", \"Albania\", \"Algeria\", \"Andorra\", \"Angola\", \"Antigua and Barbuda\", \"Argentina\", \"Armenia\", \"Australia\", \"Austria\",\r\n    \"Azerbaijan\", \"Bahamas\", \"Bahrain\", \"Bangladesh\", \"Barbados\", \"Belarus\", \"Belgium\", \"Belize\", \"Benin\", \"Bhutan\",\r\n    \"Bolivia\", \"Bosnia and Herzegovina\", \"Botswana\", \"Brazil\", \"Brunei\", \"Bulgaria\", \"Burkina Faso\", \"Burundi\", \"Cabo Verde\", \"Cambodia\",\r\n    \"Cameroon\", \"Canada\", \"Central African Republic\", \"Chad\", \"Chile\", \"China\", \"Colombia\", \"Comoros\", \"Congo\", \"Costa Rica\",\r\n    \"Croatia\", \"Cuba\", \"Cyprus\", \"Czech Republic\", \"Democratic Republic of the Congo\", \"Denmark\", \"Djibouti\", \"Dominica\", \"Dominican Republic\", \"Ecuador\",\r\n    \"Egypt\", \"El Salvador\", \"Equatorial Guinea\", \"Eritrea\", \"Estonia\", \"Eswatini\", \"Ethiopia\", \"Fiji\", \"Finland\", \"France\",\r\n    \"Gabon\", \"Gambia\", \"Georgia\", \"Germany\", \"Ghana\", \"Greece\", \"Grenada\", \"Guatemala\", \"Guinea\", \"Guinea-Bissau\",\r\n    \"Guyana\", \"Haiti\", \"Honduras\", \"Hungary\", \"Iceland\", \"India\", \"Indonesia\", \"Iran\", \"Iraq\", \"Ireland\",\r\n    \"Israel\", \"Italy\", \"Ivory Coast\", \"Jamaica\", \"Japan\", \"Jordan\", \"Kazakhstan\", \"Kenya\", \"Kiribati\", \"Kuwait\",\r\n    \"Kyrgyzstan\", \"Laos\", \"Latvia\", \"Lebanon\", \"Lesotho\", \"Liberia\", \"Libya\", \"Liechtenstein\", \"Luxembourg\", \"Madagascar\",\r\n    \"Malawi\", \"Malaysia\", \"Maldives\", \"Mali\", \"Malta\", \"Marshall Islands\", \"Mauritania\", \"Mauritius\", \"Mexico\", \"Micronesia\",\r\n    \"Moldova\", \"Monaco\", \"Mongolia\", \"Montenegro\", \"Morocco\", \"Mozambique\", \"Myanmar\", \"Namibia\", \"Nauru\", \"Nepal\",\r\n    \"Netherlands\", \"New Zealand\", \"Nicaragua\", \"Niger\", \"Nigeria\", \"North Korea\", \"North Macedonia\", \"Norway\", \"Oman\", \"Pakistan\",\r\n    \"Palau\", \"Palestine\", \"Panama\", \"Papua New Guinea\", \"Paraguay\", \"Peru\", \"Philippines\", \"Poland\", \"Portugal\", \"Qatar\",\r\n    \"Romania\", \"Russia\", \"Rwanda\", \"Saint Kitts and Nevis\", \"Saint Lucia\", \"Saint Vincent and the Grenadines\", \"Samoa\", \"San Marino\", \"Sao Tome and Principe\", \"Saudi Arabia\",\r\n    \"Senegal\", \"Serbia\", \"Seychelles\", \"Sierra Leone\", \"Singapore\", \"Slovakia\", \"Slovenia\", \"Solomon Islands\", \"Somalia\", \"South Africa\",\r\n    \"South Korea\", \"South Sudan\", \"Spain\", \"Sri Lanka\", \"Sudan\", \"Suriname\", \"Sweden\", \"Switzerland\", \"Syria\", \"Taiwan\",\r\n    \"Tajikistan\", \"Tanzania\", \"Thailand\", \"Timor-Leste\", \"Togo\", \"Tonga\", \"Trinidad and Tobago\", \"Tunisia\", \"Turkey\", \"Turkmenistan\",\r\n    \"Tuvalu\", \"Uganda\", \"Ukraine\", \"United Arab Emirates\", \"United Kingdom\", \"United States\", \"Uruguay\", \"Uzbekistan\", \"Vanuatu\", \"Vatican City\",\r\n    \"Venezuela\", \"Vietnam\", \"Yemen\", \"Zambia\", \"Zimbabwe\"\r\n  ];\r\n\r\n  filteredCountries: string[] = [];\r\n  countrySearchTerm: string = '';\r\n\r\n\r\n\r\n  ngOnInit() {\r\n    this.initializeForm();\r\n    this.filteredCountries = [...this.countries];\r\n    \r\n  }\r\n\r\n  filterCountries(searchTerm: string) {\r\n    if (!searchTerm.trim()) {\r\n      this.filteredCountries = [...this.countries];\r\n    } else {\r\n      this.filteredCountries = this.countries.filter(country =>\r\n        country.toLowerCase().includes(searchTerm.toLowerCase())\r\n      );\r\n    }\r\n  }\r\n\r\n  onCountrySearch(event: any) {\r\n    const searchTerm = event.target.value.toLowerCase();\r\n    this.countrySearchTerm = searchTerm;\r\n    this.filteredCountries = this.countries.filter(country => \r\n      country.toLowerCase().includes(searchTerm)\r\n    );\r\n  }\r\n\r\n  initializeForm() {\r\n    this.editForm = this.fb.group({\r\n      name: ['', [Validators.required, Validators.minLength(3), Validators.maxLength(15)]],\r\n      category: ['', Validators.required],\r\n      sector: ['', [Validators.required, Validators.minLength(2)]],\r\n      country: ['', [Validators.required, Validators.minLength(2)]],\r\n      city: ['', [Validators.required, Validators.minLength(2)]],\r\n      note: ['', [Validators.required, Validators.minLength(5)]],\r\n      // description: ['', [Validators.required, Validators.minLength(10)]],\r\n      website: ['', [Validators.required, Validators.minLength(5)]],\r\n      address: ['', [Validators.required, Validators.minLength(5)]],\r\n      contractStartDate: ['', [Validators.required ]],\r\n      status: ['', Validators.required]\r\n      // Remove contacts from form validation since it's commented out\r\n    });\r\n    \r\n    // Add contacts as a separate FormArray without validation\r\n    this.editForm.addControl('contacts', this.fb.array([]));\r\n  }\r\n\r\n  // Contacts management methods\r\n  get contacts() {\r\n    return this.editForm.get('contacts') as FormArray;\r\n  }\r\n\r\n  addContact() {\r\n    const contactGroup = this.fb.group({\r\n      email: [''], // Remove validation since contacts section is commented out\r\n      phone: [''], // Remove validation since contacts section is commented out\r\n      mobile: [''] // Remove validation since contacts section is commented out\r\n    });\r\n    this.contacts.push(contactGroup);\r\n  }\r\n\r\n  removeContact(index: number) {\r\n    if (this.contacts.length > 1) {\r\n      this.contacts.removeAt(index);\r\n    }\r\n  }\r\n\r\n  getContactErrorMessage(control: AbstractControl | null, field: string): string {\r\n    if (!control?.errors) return '';\r\n    \r\n    if (control.errors['required']) {\r\n      return this.translate('common.field_required');\r\n    }\r\n    if (control.errors['email']) {\r\n      return this.translate('common.invalid_email');\r\n    }\r\n    if (control.errors['minlength']) {\r\n      const requiredLength = control.errors['minlength']['requiredLength'];\r\n      if (requiredLength === 2) {\r\n        return this.translate('partners.min_length_2');\r\n      } else if (requiredLength === 10) {\r\n        return this.translate('partners.min_length_10');\r\n      }\r\n      return `Minimum length is ${requiredLength} characters`;\r\n    }\r\n    return 'Invalid field';\r\n  }\r\n\r\n  loadPartnerData(partner: Item) {\r\n    // Clear contacts first\r\n    this.contacts.clear();\r\n    \r\n    // Patch form values (excluding contacts)\r\n    this.editForm.patchValue({\r\n      name: partner.name,\r\n      category: partner.category,\r\n      sector: partner.sector,\r\n      country: partner.country,\r\n      city: partner.city,\r\n      note: partner.note,\r\n      // description: '', // Default value since it's not in Item interface\r\n      website: partner.website || '',\r\n      address: partner.address || '',\r\n      contractStartDate: partner.contractStartDate ? partner.contractStartDate.split('T')[0] : '', // Convert ISO string to date input format\r\n      status: partner.isActive ? 1 : 0\r\n    });\r\n    \r\n    // Load contacts without validation since section is commented out\r\n    if (partner.contacts && partner.contacts.length > 0) {\r\n      partner.contacts.forEach(contact => {\r\n        const contactGroup = this.fb.group({\r\n          email: [contact.email], // Remove validation\r\n          phone: [contact.phone], // Remove validation\r\n          mobile: [contact.mobile] // Remove validation\r\n        });\r\n        this.contacts.push(contactGroup);\r\n      });\r\n    }\r\n    \r\n    // Mark form as touched to trigger validation\r\n    this.editForm.markAsTouched();\r\n  }\r\n\r\n  isFieldValid(field: string) {\r\n    const control = this.editForm.get(field);\r\n  return control?.touched && control?.invalid\r\n}\r\n\r\n  hasServerError(field: string) {\r\n    const control = this.editForm.get(field);\r\n    return control?.errors?.['serverError'];\r\n  }\r\n\r\n  getServerErrorMessage(field: string) {\r\n    const control = this.editForm.get(field);\r\n    return control?.errors?.['serverError'] || '';\r\n  }\r\n\r\n  getErrorMessage(field: string) {\r\n    const control = this.editForm.get(field);\r\n    if (!control?.errors) return ''\r\n    \r\n    if (control.errors['required']) {\r\n      return this.translate('common.field_required')\r\n    }\r\n    if (control.errors['minlength']) {\r\n      const requiredLength = control.errors['minlength']['requiredLength']\r\n      if (requiredLength === 2) {\r\n        return this.translate('partners.min_length_2')\r\n      } else if (requiredLength === 3) {\r\n        return this.translate('partners.min_length_3')\r\n      } else if (requiredLength === 5) {\r\n        return this.translate('partners.min_length_5')\r\n      } else if (requiredLength === 10) {\r\n        return this.translate('partners.min_length_10')\r\n      }\r\n      return `Minimum length is ${requiredLength} characters`\r\n    }\r\n    if (control.errors['maxlength']) {\r\n      const requiredLength = control.errors['maxlength']['requiredLength']\r\n      if (requiredLength === 15) {\r\n        return this.translate('partners.max_length_15')\r\n      }\r\n      return `Maximum length is ${requiredLength} characters`\r\n    }\r\n    if (control.errors['pastDate']) {\r\n      return this.translate('partners.future_date_required')\r\n    }\r\n    return 'Invalid field'\r\n  }\r\n\r\n  onSubmit() {\r\n    \r\n    if (this.editForm.invalid || !this.currentPartner) {\r\n      this.editForm.markAllAsTouched()\r\n      return\r\n    }\r\n\r\n    const formValue = this.editForm.value;\r\n    \r\n    // Create the updated partner data with all required fields\r\n    const updatedPartner = {\r\n      ...this.currentPartner,\r\n      name: formValue.name,\r\n      category: parseInt(formValue.category),\r\n      sector: formValue.sector,\r\n      country: formValue.country,\r\n      city: formValue.city,\r\n      note: formValue.note,\r\n      // description: formValue.description, // Add missing description field\r\n      website: formValue.website,\r\n      address: formValue.address,\r\n      contractStartDate: new Date(formValue.contractStartDate).toISOString(),\r\n      isActive: formValue.status === 1\r\n    };\r\n\r\n    const partnerData = {\r\n      success: true,\r\n      message: '',\r\n      data: {\r\n        totalCount: 1,\r\n        page: 1,\r\n        pageSize: 1,\r\n        items: [updatedPartner]\r\n      },\r\n      errors: []\r\n    };\r\n\r\n    this.partnersService.updatePartner(this.currentPartner.id, updatedPartner as any).subscribe({\r\n      next: (res) => {\r\n        this.showSuccessMessage(this.translate('partners.updated_success'));\r\n        this.close()\r\n        this.editForm.reset()\r\n        this.currentPartner = null;\r\n        // Optionally refresh the partners list\r\n        // this.partnersList.loadPartners();\r\n      },\r\n      error: (error) => {\r\n        this.handleApiErrors(error);\r\n      }\r\n    })\r\n  }\r\n\r\n  private handleApiErrors(error: any) {\r\n    \r\n    if (error.error?.errors) {\r\n      // Handle validation errors by setting them on form controls\r\n      const errors = error.error.errors;\r\n      \r\n      Object.keys(errors).forEach(fieldName => {\r\n        const control = this.editForm.get(this.getFormFieldName(fieldName));\r\n        if (control) {\r\n          control.setErrors({ serverError: errors[fieldName][0] });\r\n          control.markAsTouched();\r\n        }\r\n      });\r\n    } else {\r\n      // Show generic error in alert\r\n      let errorMessage = 'Unknown error occurred';\r\n      if (error.error?.message) {\r\n        errorMessage = error.error.message;\r\n      } else if (error.message) {\r\n        errorMessage = error.message;\r\n      }\r\n      alert(this.translationService.translate('common.error') + ': ' + errorMessage);\r\n    }\r\n  }\r\n\r\n  private getFormFieldName(apiFieldName: string): string {\r\n    // Map API field names to form field names\r\n    const fieldMapping: { [key: string]: string } = {\r\n      'Name': 'name',\r\n      'Category': 'category',\r\n      'Sector': 'sector',\r\n      'Country': 'country',\r\n      'City': 'city',\r\n      'Note': 'note',\r\n      // 'Description': 'description',\r\n      'Website': 'website',\r\n      'Address': 'address',\r\n      'ContractStartDate': 'contractStartDate',\r\n      'Status': 'status'\r\n    };\r\n    return fieldMapping[apiFieldName] || apiFieldName.toLowerCase();\r\n  }\r\n\r\n  translate(key: string): string {\r\n    return this.translationService.translate(key);\r\n  }\r\n\r\n  isRTL(): boolean {\r\n    return this.translationService.isRTL();\r\n  }\r\n\r\n  showSuccessMessage(message: string) {\r\n    const successData = {\r\n      title: this.translate('common.success'),\r\n      message: message,\r\n      confirmText: this.translate('common.ok'),\r\n      cancelText: '',\r\n      type: 'info' as const\r\n    };\r\n    this.confirmationModal.show(successData);\r\n  }\r\n\r\n  resetForm() {\r\n    this.editForm.reset();\r\n    this.contacts.clear();\r\n    this.currentPartner = null;\r\n    this.countrySearchTerm = '';\r\n    this.filteredCountries = [...this.countries];\r\n  }\r\n\r\n  // Method to check if save button should be enabled\r\n  isSaveButtonEnabled(): boolean {\r\n    const isValid = this.editForm.valid;\r\n    const hasPartner = this.currentPartner !== null;\r\n    \r\n   \r\n    \r\n    // Check each field for errors\r\n    \r\n    return isValid && hasPartner;\r\n  }\r\n\r\n \r\n}\r\n", "<!-- Edit Partner Modal -->\r\n<div class=\"modal-overlay\" [class.open]=\"isOpen\" (click)=\"onBackdropClick($event)\">\r\n  <div class=\"modal-container\">\r\n    <!-- Modal Header -->\r\n    <div class=\"modal-header\" [dir]=\"isRTL() ? 'rtl' : 'ltr'\">\r\n      \r\n      <button type=\"button\" class=\"close-btn\" (click)=\"close()\" aria-label=\"Close\">\r\n        <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\">\r\n          <line x1=\"18\" y1=\"6\" x2=\"6\" y2=\"18\"></line>\r\n          <line x1=\"6\" y1=\"6\" x2=\"18\" y2=\"18\"></line>\r\n        </svg>\r\n      </button>\r\n      <h2 class=\"modal-title\" [class.text-end]=\"isRTL()\" [class.text-start]=\"!isRTL()\">\r\n        <i class=\"bi bi-pencil-square me-2\"></i>\r\n        {{ translate('partners.edit_partner') }}\r\n      </h2>\r\n    </div>\r\n\r\n    <!-- Modal Body -->\r\n    <div class=\"modal-body\">\r\n      <form [formGroup]=\"editForm\" (ngSubmit)=\"onSubmit()\">\r\n        <div class=\"row\">\r\n          <!-- Partner Name -->\r\n          <div class=\"col-md-6 mb-3\">\r\n            <label for=\"editName\" class=\"form-label\">{{ translate('partners.name') }} *</label>\r\n            <input \r\n              type=\"text\" \r\n              class=\"form-control\" \r\n              id=\"editName\" \r\n              formControlName=\"name\"\r\n              [placeholder]=\"translate('partners.name_placeholder')\"\r\n              [class.is-invalid]=\"isFieldValid('name') || hasServerError('name')\"\r\n            >\r\n            <div class=\"invalid-feedback\" *ngIf=\"isFieldValid('name')\">\r\n              {{ getErrorMessage('name') }}\r\n            </div>\r\n            <div class=\"invalid-feedback\" *ngIf=\"hasServerError('name')\">\r\n              {{ getServerErrorMessage('name') }}\r\n            </div>\r\n          </div>\r\n\r\n          <!-- Category -->\r\n          <div class=\"col-md-6 mb-3\">\r\n            <label for=\"editCategory\" class=\"form-label\">{{ translate('partners.category') }} *</label>\r\n            <select \r\n              class=\"form-select\" \r\n              id=\"editCategory\" \r\n              formControlName=\"category\"\r\n              [class.is-invalid]=\"isFieldValid('category') || hasServerError('category')\"\r\n            >\r\n              <option value=\"\" disabled>{{ translate('partners.select_category') }}</option>\r\n              <option *ngFor=\"let cat of categories\" [value]=\"cat.key\">\r\n                {{ translate(cat.value) }}\r\n              </option>\r\n            </select>\r\n            <div class=\"invalid-feedback\" *ngIf=\"isFieldValid('category')\">\r\n              {{ getErrorMessage('category') }}\r\n            </div>\r\n            <div class=\"invalid-feedback\" *ngIf=\"hasServerError('category')\">\r\n              {{ getServerErrorMessage('category') }}\r\n            </div>\r\n          </div>\r\n\r\n          <!-- Sector -->\r\n          <div class=\"col-md-6 mb-3\">\r\n            <label for=\"editSector\" class=\"form-label\">{{ translate('partners.sector') }} *</label>\r\n            <input \r\n              type=\"text\" \r\n              class=\"form-control\" \r\n              id=\"editSector\" \r\n              formControlName=\"sector\"\r\n              [placeholder]=\"translate('partners.sector_placeholder')\"\r\n              [class.is-invalid]=\"isFieldValid('sector') || hasServerError('sector')\"\r\n            >\r\n            <div class=\"invalid-feedback\" *ngIf=\"isFieldValid('sector')\">\r\n              {{ getErrorMessage('sector') }}\r\n            </div>\r\n            <div class=\"invalid-feedback\" *ngIf=\"hasServerError('sector')\">\r\n              {{ getServerErrorMessage('sector') }}\r\n            </div>\r\n          </div>\r\n\r\n          <!-- Country -->\r\n          <div class=\"col-md-6 mb-3\">\r\n            <label for=\"editCountry\" class=\"form-label\">{{ translate('partners.country') }} *</label>\r\n            <div class=\"position-relative\">\r\n              <input \r\n                type=\"text\" \r\n                class=\"form-control\" \r\n                id=\"editCountry\" \r\n                formControlName=\"country\"\r\n                [placeholder]=\"translate('partners.country_placeholder')\"\r\n                [class.is-invalid]=\"isFieldValid('country') || hasServerError('country')\"\r\n                (input)=\"onCountrySearch($event)\"\r\n                (focus)=\"filterCountries(countrySearchTerm)\"\r\n                autocomplete=\"off\"\r\n              >\r\n              <div class=\"dropdown-menu w-100 position-absolute\" \r\n                   [class.show]=\"filteredCountries.length > 0 && countrySearchTerm.length > 0\"\r\n                   style=\"max-height: 200px; overflow-y: auto; z-index: 1050;\">\r\n                <button type=\"button\" \r\n                        class=\"dropdown-item\" \r\n                        *ngFor=\"let country of filteredCountries\"\r\n                        (click)=\"editForm.patchValue({country: country}); countrySearchTerm = country; filteredCountries = []\">\r\n                  {{ country }}\r\n                </button>\r\n              </div>\r\n            </div>\r\n            <div class=\"invalid-feedback\" *ngIf=\"isFieldValid('country')\">\r\n              {{ getErrorMessage('country') }}\r\n            </div>\r\n            <div class=\"invalid-feedback\" *ngIf=\"hasServerError('country')\">\r\n              {{ getServerErrorMessage('country') }}\r\n            </div>\r\n          </div>\r\n\r\n          <!-- City -->\r\n          <div class=\"col-md-6 mb-3\">\r\n            <label for=\"editCity\" class=\"form-label\">{{ translate('partners.city') }} *</label>\r\n            <input \r\n              type=\"text\" \r\n              class=\"form-control\" \r\n              id=\"editCity\" \r\n              formControlName=\"city\"\r\n              [placeholder]=\"translate('partners.city_placeholder')\"\r\n              [class.is-invalid]=\"isFieldValid('city') || hasServerError('city')\"\r\n            >\r\n            <div class=\"invalid-feedback\" *ngIf=\"isFieldValid('city')\">\r\n              {{ getErrorMessage('city') }}\r\n            </div>\r\n            <div class=\"invalid-feedback\" *ngIf=\"hasServerError('city')\">\r\n              {{ getServerErrorMessage('city') }}\r\n            </div>\r\n          </div>\r\n\r\n          <!-- Note -->\r\n          <div class=\"col-12 mb-3\">\r\n            <label for=\"editNote\" class=\"form-label\">{{ translate('partners.note') }} *</label>\r\n            <textarea \r\n              class=\"form-control\" \r\n              id=\"editNote\" \r\n              rows=\"3\"\r\n              formControlName=\"note\"\r\n              [placeholder]=\"translate('partners.note_placeholder')\"\r\n              [class.is-invalid]=\"isFieldValid('note') || hasServerError('note')\"\r\n            ></textarea>\r\n            <div class=\"invalid-feedback\" *ngIf=\"isFieldValid('note')\">\r\n              {{ getErrorMessage('note') }}\r\n            </div>\r\n            <div class=\"invalid-feedback\" *ngIf=\"hasServerError('note')\">\r\n              {{ getServerErrorMessage('note') }}\r\n            </div>\r\n          </div>\r\n\r\n        \r\n          \r\n\r\n          <!-- Website -->\r\n          <div class=\"col-md-6 mb-3\">\r\n            <label for=\"editWebsite\" class=\"form-label\">{{ translate('partners.website') }} *</label>\r\n            <input \r\n              type=\"url\" \r\n              class=\"form-control\" \r\n              id=\"editWebsite\" \r\n              formControlName=\"website\"\r\n              [placeholder]=\"translate('partners.website_placeholder')\"\r\n              [class.is-invalid]=\"isFieldValid('website') || hasServerError('website')\"\r\n            >\r\n            <div class=\"invalid-feedback\" *ngIf=\"isFieldValid('website')\">\r\n              {{ getErrorMessage('website') }}\r\n            </div>\r\n            <div class=\"invalid-feedback\" *ngIf=\"hasServerError('website')\">\r\n              {{ getServerErrorMessage('website') }}\r\n            </div>\r\n          </div>\r\n\r\n          <!-- Address -->\r\n          <div class=\"col-md-6 mb-3\">\r\n            <label for=\"editAddress\" class=\"form-label\">{{ translate('partners.address') }} *</label>\r\n            <input \r\n              type=\"text\" \r\n              class=\"form-control\" \r\n              id=\"editAddress\" \r\n              formControlName=\"address\"\r\n              [placeholder]=\"translate('partners.address_placeholder')\"\r\n              [class.is-invalid]=\"isFieldValid('address') || hasServerError('address')\"\r\n            >\r\n            <div class=\"invalid-feedback\" *ngIf=\"isFieldValid('address')\">\r\n              {{ getErrorMessage('address') }}\r\n            </div>\r\n            <div class=\"invalid-feedback\" *ngIf=\"hasServerError('address')\">\r\n              {{ getServerErrorMessage('address') }}\r\n            </div>\r\n          </div>\r\n\r\n          <!-- Contract Start Date -->\r\n          <div class=\"col-md-6 mb-3\">\r\n            <label for=\"editContractStartDate\" class=\"form-label\">{{ translate('partners.contract_start_date') }} *</label>\r\n            <input \r\n              type=\"date\" \r\n              class=\"form-control\" \r\n              id=\"editContractStartDate\" \r\n              formControlName=\"contractStartDate\"\r\n              [placeholder]=\"translate('partners.contract_date_placeholder')\"\r\n              [class.is-invalid]=\"isFieldValid('contractStartDate') || hasServerError('contractStartDate')\"\r\n            >\r\n            <div class=\"invalid-feedback\" *ngIf=\"isFieldValid('contractStartDate')\">\r\n              {{ getErrorMessage('contractStartDate') }}\r\n            </div>\r\n            <div class=\"invalid-feedback\" *ngIf=\"hasServerError('contractStartDate')\">\r\n              {{ getServerErrorMessage('contractStartDate') }}\r\n            </div>\r\n          </div>\r\n\r\n          <!-- Status -->\r\n          <div class=\"col-md-6 mb-3\">\r\n            <label for=\"editStatus\" class=\"form-label\">{{ translate('partners.status') }} *</label>\r\n            <select \r\n              class=\"form-select\" \r\n              id=\"editStatus\" \r\n              formControlName=\"status\"\r\n              [class.is-invalid]=\"isFieldValid('status') || hasServerError('status')\"\r\n            >\r\n              <option value=\"\">{{ translate('partners.select_status') }}</option>\r\n              <option value=\"1\">{{ translate('partners.active') }}</option>\r\n              <option value=\"0\">{{ translate('partners.inactive') }}</option>\r\n            </select>\r\n            <div class=\"invalid-feedback\" *ngIf=\"isFieldValid('status')\">\r\n              {{ getErrorMessage('status') }}\r\n            </div>\r\n            <div class=\"invalid-feedback\" *ngIf=\"hasServerError('status')\">\r\n              {{ getServerErrorMessage('status') }}\r\n            </div>\r\n          </div>\r\n\r\n        </div>\r\n\r\n        <!-- Modal Footer -->\r\n        <div class=\"modal-footer\">\r\n          <!-- Debug information (remove this in production) -->\r\n          <button type=\"submit\" class=\"btn btn-primary\" [disabled]=\"!isSaveButtonEnabled()\">\r\n            <i class=\"bi bi-check-circle me-2\"></i>\r\n            {{ translate('common.save') }}\r\n          </button>\r\n          \r\n          <button type=\"button\" class=\"btn btn-secondary\" (click)=\"close()\">\r\n            {{ translate('common.cancel') }}\r\n          </button>\r\n         \r\n        </div>\r\n      </form>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<!-- Confirmation Modal -->\r\n<app-partners-confirmation-modal #confirmationModal></app-partners-confirmation-modal>\r\n", "import { Component, Input, Output, EventEmitter, OnInit, ViewChild } from '@angular/core';\r\nimport { FormBuilder, FormGroup, FormArray, Validators, AbstractControl } from '@angular/forms';\r\nimport { TranslationService } from '../../../services/translation.service';\r\nimport { PartnersService } from '../../../services/partners.service';\r\nimport { Contact, Item } from '../../../models/partner.model';\r\nimport { PartnersConfirmationModalComponent } from '../partners-confirmation-modal/partners-confirmation-modal.component';\r\nimport { take } from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'app-edit-contacts-modal',\r\n  standalone: false,\r\n  templateUrl: './edit-contacts-modal.component.html',\r\n  styleUrls: ['./edit-contacts-modal.component.css']\r\n})\r\nexport class EditContactsModalComponent implements OnInit {\r\n  @Input() partner: Item | null = null;\r\n  @Input() isVisible = false;\r\n  @Output() contactsUpdated = new EventEmitter<number>();\r\n  @Output() cancel = new EventEmitter<void>();\r\n  \r\n  @ViewChild('confirmationModal') confirmationModal!: PartnersConfirmationModalComponent;\r\n  \r\n  contactsForm!: FormGroup;\r\n  isLoading = false;\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private translationService: TranslationService,\r\n    private partnersService: PartnersService\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.initForm();\r\n  }\r\n\r\n  initForm() {\r\n    this.contactsForm = this.fb.group({\r\n      contacts: this.fb.array([])\r\n    });\r\n  }\r\n\r\n  get contacts() {\r\n    return this.contactsForm.get('contacts') as FormArray;\r\n  }\r\n\r\n  get translate() {\r\n    return this.translationService.translate.bind(this.translationService);\r\n  }\r\n\r\n  show(partner: Item) {\r\n    this.partner = partner;\r\n    this.isVisible = true;\r\n    this.loadContacts();\r\n  }\r\n\r\n  hide() {\r\n    this.isVisible = false;\r\n    this.partner = null;\r\n    this.contacts.clear();\r\n  }\r\n\r\n  loadContacts() {\r\n    if (!this.partner) return;\r\n    \r\n    this.isLoading = true;\r\n    \r\n    // First try to load from API\r\n    this.partnersService.getContacts(this.partner.id).subscribe({\r\n      next: (contacts) => {\r\n        this.contacts.clear();\r\n        if (contacts && contacts.length > 0) {\r\n          contacts.forEach(contact => {\r\n            this.addContact(contact);\r\n          });\r\n        } else {\r\n          // If no contacts from API, check if partner has contacts in its data\r\n          if (this.partner?.contacts && this.partner.contacts.length > 0) {\r\n            this.partner.contacts.forEach(contact => {\r\n              this.addContact(contact);\r\n            });\r\n          } else {\r\n            this.addContact(); // Add at least one empty contact\r\n          }\r\n        }\r\n        this.isLoading = false;\r\n      },\r\n      error: (error) => {\r\n        // Fallback to partner's contacts if API fails\r\n        this.contacts.clear();\r\n        if (this.partner?.contacts && this.partner.contacts.length > 0) {\r\n          this.partner.contacts.forEach(contact => {\r\n            this.addContact(contact);\r\n          });\r\n        } else {\r\n          this.addContact(); // Add at least one empty contact\r\n        }\r\n        this.isLoading = false;\r\n      }\r\n    });\r\n  }\r\n\r\n  addContact(contact?: Contact) {\r\n    const contactGroup = this.fb.group({\r\n      id: [contact?.id || null],\r\n      email: [contact?.email || '', [Validators.required, Validators.email]],\r\n      phone: [contact?.phone || '', [Validators.required, Validators.minLength(5)]],\r\n      mobile: [contact?.mobile || '', [Validators.required, Validators.minLength(5)]]\r\n    });\r\n    \r\n    this.contacts.push(contactGroup);\r\n  }\r\n\r\n  saveContact(index: number) {\r\n    const contactControl = this.contacts.at(index);\r\n    if (contactControl.invalid) {\r\n      contactControl.markAllAsTouched();\r\n      return;\r\n    }\r\n\r\n    const contactData = contactControl.value;\r\n    if (!this.partner) return;\r\n\r\n    this.isLoading = true;\r\n    \r\n    if (contactData.id) {\r\n      // Update existing contact\r\n      this.partnersService.updateContact(this.partner.id, contactData.id, contactData).subscribe({\r\n        next: (updatedContact) => {\r\n          this.showSuccessMessage(this.translate('partners.contact_updated_success'));\r\n          this.contactsUpdated.emit(this.partner!.id);\r\n          // Update the form control with the updated data\r\n          contactControl.patchValue(updatedContact);\r\n        },\r\n        error: (error) => {\r\n          this.showErrorMessage(this.translate('partners.contact_update_error'));\r\n        },\r\n        complete: () => {\r\n          this.isLoading = false;\r\n        }\r\n      });\r\n    } else {\r\n      // Create new contact\r\n      this.partnersService.addContact(this.partner.id, contactData).subscribe({\r\n        next: (newContact) => {\r\n          // Update the form control with the new ID and data\r\n          contactControl.patchValue({ id: newContact.id });\r\n          this.showSuccessMessage(this.translate('partners.contact_added_success'));\r\n          this.contactsUpdated.emit(this.partner!.id);\r\n        },\r\n        error: (error) => {\r\n          this.showErrorMessage(this.translate('partners.contact_add_error'));\r\n        },\r\n        complete: () => {\r\n          this.isLoading = false;\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  deleteContact(index: number, contactId?: number) {\r\n    if (!this.partner) return;\r\n\r\n\r\n    if (contactId) {\r\n      // Delete existing contact from API\r\n      const confirmData = {\r\n        title: this.translate('partners.delete_contact'),\r\n        message: this.translate('partners.confirm_delete_contact'),\r\n        confirmText: this.translate('common.delete'),\r\n        cancelText: this.translate('common.cancel'),\r\n        type: 'delete' as const\r\n      };\r\n\r\n      this.confirmationModal.show(confirmData);\r\n      this.confirmationModal.confirm.pipe(take(1)).subscribe(() => {\r\n        this.isLoading = true;\r\n        this.partnersService.deleteContact(this.partner!.id, contactId).subscribe({\r\n          next: (response) => {\r\n            this.contacts.removeAt(index);\r\n            this.showSuccessMessage(this.translate('partners.contact_deleted_success'));\r\n            this.contactsUpdated.emit(this.partner!.id);\r\n          },\r\n          error: (error) => {\r\n            this.showErrorMessage(this.translate('partners.contact_delete_error'));\r\n          },\r\n          complete: () => {\r\n            this.isLoading = false;\r\n          }\r\n        });\r\n      });\r\n    } else {\r\n      // Remove unsaved contact from form\r\n      console.log('Removing unsaved contact from form only');\r\n      this.contacts.removeAt(index);\r\n    }\r\n  }\r\n\r\n  onCancel() {\r\n    this.cancel.emit();\r\n    this.hide();\r\n  }\r\n\r\n  onOverlayClick(event: Event) {\r\n    if (event.target === event.currentTarget) {\r\n      this.onCancel();\r\n    }\r\n  }\r\n\r\n  showSuccessMessage(message: string) {\r\n    const confirmData = {\r\n      title: this.translate('common.success'),\r\n      message: message,\r\n      confirmText: this.translate('common.ok'),\r\n      cancelText: '',\r\n      type: 'info' as const\r\n    };\r\n    this.confirmationModal.show(confirmData);\r\n  }\r\n\r\n  showErrorMessage(message: string) {\r\n    const confirmData = {\r\n      title: this.translate('common.error'),\r\n      message: message,\r\n      confirmText: this.translate('common.ok'),\r\n      cancelText: '',\r\n      type: 'warning' as const\r\n    };\r\n    this.confirmationModal.show(confirmData);\r\n  }\r\n\r\n  getContactErrorMessage(control: AbstractControl | null, fieldName: string): string {\r\n    if (!control || !control.errors) return '';\r\n    \r\n    const errors = control.errors;\r\n    if (errors['required']) {\r\n      return this.translate('partners.' + fieldName + '_required');\r\n    }\r\n    if (errors['email']) {\r\n      return this.translate('partners.invalid_email');\r\n    }\r\n    if (errors['minlength']) {\r\n      return this.translate('partners.min_length_5');\r\n    }\r\n    return '';\r\n  }\r\n}\r\n", "<div class=\"modal-overlay\"  *ngIf=\"isVisible\" (click)=\"onOverlayClick($event)\">\r\n  <div class=\"modal-container contacts-modal rounded-5\">\r\n    <!-- Close Button -->\r\n    <button class=\"close-btn\" (click)=\"onCancel()\">\r\n      <svg width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\">\r\n        <line x1=\"18\" y1=\"6\" x2=\"6\" y2=\"18\"></line>\r\n        <line x1=\"6\" y1=\"6\" x2=\"18\" y2=\"18\"></line>\r\n      </svg>\r\n    </button>\r\n\r\n    <!-- Modal Header -->\r\n    <div class=\"modal-header\">\r\n      <h5 class=\"modal-title\">\r\n        <i class=\"bi bi-people-fill me-2\"></i>\r\n        {{ translate('partners.edit_contacts') }} - {{ partner?.name }}\r\n      </h5>\r\n    </div>\r\n\r\n    <!-- Modal Body -->\r\n    <div class=\"modal-body rounded-5\">\r\n      <!-- Loading Indicator -->\r\n      <div *ngIf=\"isLoading\" class=\"text-center py-4\">\r\n        <div class=\"spinner-border text-primary\" role=\"status\">\r\n          <span class=\"visually-hidden\">{{ translate('common.loading') }}</span>\r\n        </div>\r\n        <p class=\"mt-2 text-muted\">{{ translate('partners.loading_contacts') }}</p>\r\n      </div>\r\n      \r\n      <form [formGroup]=\"contactsForm\" *ngIf=\"!isLoading\">\r\n        <!-- Contacts List -->\r\n        <div class=\"contacts-section\">\r\n          <div class=\"d-flex justify-content-between align-items-center mb-3\">\r\n            <label class=\"form-label mb-0\">{{ translate('partners.contacts') }}</label>\r\n            <button type=\"button\" class=\"btn btn-outline-primary btn-sm\" (click)=\"addContact()\">\r\n              <i class=\"bi bi-plus-circle me-1\"></i>\r\n              {{ translate('partners.add_contact') }}\r\n            </button>\r\n          </div>\r\n          \r\n          <div formArrayName=\"contacts\">\r\n            <div *ngFor=\"let contact of contacts.controls; let i = index\" [formGroupName]=\"i\" class=\"contact-row mb-3 p-3 border rounded\">\r\n              <!-- Contact Header -->\r\n              <div class=\"d-flex justify-content-between align-items-center mb-2\">\r\n                <div class=\"d-flex align-items-center\">\r\n                  <i class=\"bi bi-person-fill me-2 text-primary\"></i>\r\n                  <span class=\"fw-bold\">\r\n                    {{ contact.value.id ? translate('partners.existing_contact') : translate('partners.new_contact') }}\r\n                  </span>\r\n                  <span *ngIf=\"contact.value.id\" class=\"badge bg-secondary ms-2\">ID: {{ contact.value.id }}</span>\r\n                </div>\r\n                <!-- <div class=\"d-flex align-items-center gap-1\">\r\n                  <button type=\"button\" class=\"btn btn-success text-white btn-sm\" (click)=\"saveContact(i)\" [disabled]=\"contact.invalid || isLoading\">\r\n                    \r\n                    {{ contact.value.id ? translate('common.update') : translate('common.save') }}\r\n                  </button>\r\n                  <button type=\"button\" class=\"btn btn-danger text-white btn-sm\" (click)=\"deleteContact(i, contact.value.id)\">\r\n                    \r\n                    {{ translate('common.delete') }}\r\n                  </button>\r\n                </div> -->\r\n              </div>\r\n              \r\n              <!-- Contact Form Fields -->\r\n              <div class=\"row g-2\">\r\n                <div class=\"col-md-4\">\r\n                  <label class=\"form-label small\">{{ translate('partners.email') }} *</label>\r\n                  <input \r\n                    type=\"email\" \r\n                    class=\"form-control\" \r\n                    [placeholder]=\"translate('partners.email_placeholder')\"\r\n                    formControlName=\"email\"\r\n                    [class.is-invalid]=\"contact.get('email')?.touched && contact.get('email')?.invalid\"\r\n                  >\r\n                  <div class=\"invalid-feedback\" *ngIf=\"contact.get('email')?.touched && contact.get('email')?.invalid\">\r\n                    {{ getContactErrorMessage(contact.get('email'), 'email') }}\r\n                  </div>\r\n                </div>\r\n                <div class=\"col-md-3\">\r\n                  <label class=\"form-label small\">{{ translate('partners.phone') }} *</label>\r\n                  <input \r\n                    type=\"tel\" \r\n                    class=\"form-control\" \r\n                    [placeholder]=\"translate('partners.phone_placeholder')\"\r\n                    formControlName=\"phone\"\r\n                    [class.is-invalid]=\"contact.get('phone')?.touched && contact.get('phone')?.invalid\"\r\n                  >\r\n                  <div class=\"invalid-feedback\" *ngIf=\"contact.get('phone')?.touched && contact.get('phone')?.invalid\">\r\n                    {{ getContactErrorMessage(contact.get('phone'), 'phone') }}\r\n                  </div>\r\n                </div>\r\n                <div class=\"col-md-3\">\r\n                  <label class=\"form-label small\">{{ translate('partners.mobile') }} *</label>\r\n                  <input \r\n                    type=\"tel\" \r\n                    class=\"form-control\" \r\n                    [placeholder]=\"translate('partners.mobile_placeholder')\"\r\n                    formControlName=\"mobile\"\r\n                    [class.is-invalid]=\"contact.get('mobile')?.touched && contact.get('mobile')?.invalid\"\r\n                  >\r\n                  <div class=\"invalid-feedback\" *ngIf=\"contact.get('mobile')?.touched && contact.get('mobile')?.invalid\">\r\n                    {{ getContactErrorMessage(contact.get('mobile'), 'mobile') }}\r\n                  </div>\r\n                </div>\r\n                <div class=\"col-md-2 d-flex align-items-end\">\r\n                  <div class=\"w-100\">\r\n                    <label class=\"form-label small text-muted\">{{ translate('common.actions') }}</label>\r\n                    <div class=\"d-flex gap-1\">\r\n                      <button type=\"button\" class=\"btn btn-outline-success btn-sm flex-fill\" (click)=\"saveContact(i)\" [disabled]=\"contact.invalid || isLoading\">\r\n                        <svg class=\"nav-icon\" width=\"20\" height=\"20\" viewBox=\"0 0 24 24\"\r\n                        fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\"\r\n                        stroke-linecap=\"round\" stroke-linejoin=\"round\" aria-label=\"Check\">\r\n                        <polyline points=\"20 6 9 17 4 12\"></polyline>\r\n                        </svg>\r\n                      </button>\r\n                      <button type=\"button\" class=\"btn btn-outline-danger btn-sm flex-fill\" (click)=\"deleteContact(i, contact.value.id)\">\r\n                        <svg class=\"nav-icon\" width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" \r\n                                fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" \r\n                                stroke-linecap=\"round\" stroke-linejoin=\"round\" aria-label=\"Delete\">\r\n                            <polyline points=\"3 6 5 6 21 6\"></polyline>\r\n                            <path d=\"M19 6l-1 14a2 2 0 0 1-2 2H8a2 2 0 0 1-2-2L5 6\"></path>\r\n                            <path d=\"M10 11v6\"></path>\r\n                            <path d=\"M14 11v6\"></path>\r\n                            <path d=\"M9 6V4a1 1 0 0 1 1-1h4a1 1 0 0 1 1 1v2\"></path>\r\n                        </svg>\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </div>\r\n\r\n    <!-- Modal Footer -->\r\n    <div class=\"modal-footer\">\r\n      <button type=\"button\" class=\"btn btn-secondary\" (click)=\"onCancel()\">\r\n        {{ translate('common.close') }}\r\n      </button>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<!-- Confirmation Modal for Delete -->\r\n<app-partners-confirmation-modal #confirmationModal></app-partners-confirmation-modal>\r\n", "import { Component, EventEmitter, Input, Output, signal, inject, OnDestroy, ViewChild } from '@angular/core';\r\nimport { Item, Contact } from '../../../models/partner.model';\r\nimport { ConfirmationModalComponent, ConfirmationModalData } from '../../shared/confirmation-modal/confirmation-modal.component';\r\n\r\ninterface ContactApiResponse {\r\n  success: boolean;\r\n  message: string;\r\n  data: Contact;\r\n  errors: any[];\r\n}\r\nimport { PartnersService } from '../../../services/partners.service';\r\nimport { TranslationService } from '../../../services/translation.service';\r\n\r\n@Component({\r\n  selector: 'app-view-partner-modal',\r\n  standalone: false,\r\n  templateUrl: './view-partner-modal.component.html',\r\n  styleUrl: './view-partner-modal.component.css'\r\n})\r\nexport class ViewPartnerModal implements OnDestroy {\r\n  @Input() partner: Item | null = null;\r\n  @Output() contactsUpdated = new EventEmitter<number>();\r\n  @Output() partnerUpdated = new EventEmitter<Item>();\r\n  @ViewChild('confirmationModal') confirmationModal!: ConfirmationModalComponent;\r\n\r\n  private partnersService = inject(PartnersService);\r\n  private translationService = inject(TranslationService);\r\n\r\n  // UI State\r\n  showModal = signal(false);\r\n  loading = signal(false);\r\n  editingContact = signal<Contact | null>(null);\r\n  showAddContactForm = signal(false);\r\n  newContact = signal<Partial<Contact>>({\r\n    email: '',\r\n    phone: '',\r\n    mobile: ''\r\n  });\r\n\r\n  // Contact form validation\r\n  contactFormValid = signal(false);\r\n  private validationTimeout: any = null;\r\n  \r\n  // Contact to be deleted\r\n  private contactToDelete: Contact | null = null;\r\n\r\n  open(partner: Item) {\r\n    this.partner = partner;\r\n    this.showModal.set(true);\r\n    \r\n    // Only load contacts if they're not already present or if the array is empty\r\n    if (!partner.contacts || partner.contacts.length === 0) {\r\n      this.loadContacts();\r\n    }\r\n  }\r\n\r\n  close() {\r\n    this.showModal.set(false);\r\n    this.partner = null;\r\n    this.editingContact.set(null);\r\n    this.showAddContactForm.set(false);\r\n    this.resetNewContact();\r\n  }\r\n\r\n  private loadContacts() {\r\n    if (!this.partner) return;\r\n\r\n    console.log('Loading contacts for partner:', this.partner.id);\r\n    this.loading.set(true);\r\n    this.partnersService.getContacts(this.partner.id).subscribe({\r\n      next: (contacts) => {\r\n        console.log('Contacts loaded:', contacts);\r\n        if (this.partner) {\r\n          this.partner.contacts = contacts || [];\r\n        }\r\n        this.loading.set(false);\r\n      },\r\n      error: (error) => {\r\n        console.error('Error loading contacts:', error);\r\n        if (this.partner) {\r\n          this.partner.contacts = [];\r\n        }\r\n        this.loading.set(false);\r\n      }\r\n    });\r\n  }\r\n\r\n  // Contact Management Methods\r\n  addContact() {\r\n    if (!this.partner || !this.contactFormValid()) return;\r\n\r\n    const contactData = this.newContact();\r\n    console.log('Adding contact:', contactData, 'for partner:', this.partner.id);\r\n    this.loading.set(true);\r\n\r\n    this.partnersService.addContact(this.partner.id, contactData as Contact).subscribe({\r\n      next: (response: ContactApiResponse) => {\r\n        console.log('Contact added successfully:', response);\r\n        if (response.success && response.data && this.partner) {\r\n          // Ensure contacts array exists\r\n          if (!this.partner.contacts) {\r\n            this.partner.contacts = [];\r\n          }\r\n          this.partner.contacts.push(response.data);\r\n          // Force change detection by creating a new array reference\r\n          this.partner.contacts = [...this.partner.contacts];\r\n          this.forceUIUpdate();\r\n        } else {\r\n          console.error('Failed to add contact:', response.message);\r\n        }\r\n        this.resetNewContact();\r\n        this.showAddContactForm.set(false);\r\n        this.loading.set(false);\r\n        this.contactsUpdated.emit(this.partner?.id);\r\n      },\r\n      error: (error) => {\r\n        console.error('Error adding contact:', error);\r\n        this.loading.set(false);\r\n      }\r\n    });\r\n  }\r\n\r\n  editContact(contact: Contact) {\r\n    this.editingContact.set({ ...contact });\r\n    this.showAddContactForm.set(false);\r\n  }\r\n\r\n  updateContact() {\r\n    if (!this.partner || !this.editingContact()) return;\r\n\r\n    const contact = this.editingContact()!;\r\n    console.log('Updating contact:', contact, 'for partner:', this.partner.id);\r\n    this.loading.set(true);\r\n\r\n    this.partnersService.updateContact(this.partner.id, contact.id, contact).subscribe({\r\n      next: (response: ContactApiResponse) => {\r\n        console.log('Contact updated successfully:', response);\r\n        if (response.success && response.data && this.partner) {\r\n          const index = this.partner.contacts.findIndex(c => c.id === contact.id);\r\n          if (index !== -1) {\r\n            this.partner.contacts[index] = response.data;\r\n            // Force change detection by creating a new array reference\r\n            this.partner.contacts = [...this.partner.contacts];\r\n            this.forceUIUpdate();\r\n          }\r\n        } else {\r\n          console.error('Failed to update contact:', response.message);\r\n        }\r\n        this.editingContact.set(null);\r\n        this.loading.set(false);\r\n        this.contactsUpdated.emit(this.partner?.id);\r\n      },\r\n      error: (error) => {\r\n        console.error('Error updating contact:', error);\r\n        this.loading.set(false);\r\n      }\r\n    });\r\n  }\r\n\r\n  deleteContact(contact: Contact) {\r\n    if (!this.partner) return;\r\n\r\n    this.contactToDelete = contact;\r\n    const modalData: ConfirmationModalData = {\r\n      title: this.translate('partners.delete_contact'),\r\n      message: this.translate('partners.confirm_delete_contact'),\r\n      confirmText: this.translate('partners.delete'),\r\n      cancelText: this.translate('partners.cancel'),\r\n      type: 'delete'\r\n    };\r\n    \r\n    this.confirmationModal.show(modalData);\r\n  }\r\n\r\n  onConfirmDelete() {\r\n    if (!this.partner || !this.contactToDelete) return;\r\n\r\n    console.log('Deleting contact:', this.contactToDelete, 'for partner:', this.partner.id);\r\n    this.loading.set(true);\r\n\r\n    this.partnersService.deleteContact(this.partner.id, this.contactToDelete.id).subscribe({\r\n      next: () => {\r\n        console.log('Contact deleted successfully');\r\n        if (this.partner) {\r\n          this.partner.contacts = this.partner.contacts.filter(c => c.id !== this.contactToDelete!.id);\r\n          // Force change detection by creating a new array reference\r\n          this.partner.contacts = [...this.partner.contacts];\r\n          this.forceUIUpdate();\r\n        }\r\n        this.loading.set(false);\r\n        this.contactsUpdated.emit(this.partner?.id);\r\n        this.contactToDelete = null;\r\n      },\r\n      error: (error) => {\r\n        console.error('Error deleting contact:', error);\r\n        this.loading.set(false);\r\n        this.contactToDelete = null;\r\n      }\r\n    });\r\n  }\r\n\r\n  onCancelDelete() {\r\n    this.contactToDelete = null;\r\n  }\r\n\r\n  cancelEdit() {\r\n    this.editingContact.set(null);\r\n    this.showAddContactForm.set(false);\r\n    this.resetNewContact();\r\n  }\r\n\r\n  private resetNewContact() {\r\n    this.newContact.set({\r\n      email: '',\r\n      phone: '',\r\n      mobile: ''\r\n    });\r\n    this.validateContactForm();\r\n  }\r\n\r\n  validateContactForm() {\r\n    const contact = this.editingContact() || this.newContact();\r\n    const email = contact.email?.trim();\r\n    const phone = contact.phone?.trim();\r\n    const mobile = contact.mobile?.trim();\r\n    const isValid = !!(email && (phone || mobile));\r\n    \r\n    // Only update if the validation state actually changed\r\n    if (this.contactFormValid() !== isValid) {\r\n      this.contactFormValid.set(isValid);\r\n    }\r\n  }\r\n\r\n  onContactFieldChange() {\r\n    this.debouncedValidation();\r\n  }\r\n\r\n  onEditingContactFieldChange(field: keyof Contact, value: string) {\r\n    const contact = this.editingContact();\r\n    if (contact) {\r\n      (contact as any)[field] = value;\r\n      this.debouncedValidation();\r\n    }\r\n  }\r\n\r\n  private debouncedValidation() {\r\n    if (this.validationTimeout) {\r\n      clearTimeout(this.validationTimeout);\r\n    }\r\n    this.validationTimeout = setTimeout(() => {\r\n      this.validateContactForm();\r\n    }, 150);\r\n  }\r\n\r\n  private forceUIUpdate() {\r\n    // Force change detection by updating the partner reference\r\n    if (this.partner) {\r\n      this.partner = { ...this.partner };\r\n    }\r\n  }\r\n\r\n  getCategoryLabel(category: number): string {\r\n    const categories: Record<number, string> = {\r\n      0: this.translate('partners.categories.0'),\r\n      1: this.translate('partners.categories.1'),\r\n      2: this.translate('partners.categories.2'),\r\n      3: this.translate('partners.categories.3'),\r\n      4: this.translate('partners.categories.4'),\r\n      5: this.translate('partners.categories.5')\r\n    };\r\n    return categories[category] || 'Unknown';\r\n  }\r\n\r\n  translate(key: string): string {\r\n    return this.translationService.translate(key);\r\n  }\r\n\r\n  isRTL(): boolean {\r\n    return this.translationService.isRTL();\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    if (this.validationTimeout) {\r\n      clearTimeout(this.validationTimeout);\r\n    }\r\n  }\r\n}\r\n", "<!-- Modal Overlay -->\r\n<div class=\"modal-overlay\" *ngIf=\"showModal()\" (click)=\"close()\">\r\n  <div class=\"modal-container\" (click)=\"$event.stopPropagation()\" [dir]=\"isRTL() ? 'rtl' : 'ltr'\">\r\n    \r\n    <!-- Modal Header -->\r\n    <div class=\"modal-header\">\r\n      <h2 class=\"modal-title\">{{ translate('partners.partner_details') }}</h2>\r\n      <button class=\"close-btn\" (click)=\"close()\">\r\n        <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\">\r\n          <line x1=\"18\" y1=\"6\" x2=\"6\" y2=\"18\"></line>\r\n          <line x1=\"6\" y1=\"6\" x2=\"18\" y2=\"18\"></line>\r\n        </svg>\r\n      </button>\r\n    </div>\r\n\r\n    <!-- Modal Body -->\r\n    <div class=\"modal-body\" *ngIf=\"partner\">\r\n      \r\n      <!-- Partner Basic Information -->\r\n      <div class=\"partner-info-section\">\r\n        <div class=\"info-header\" [class.rtl-layout]=\"isRTL()\">\r\n          <div class=\"partner-title-section\">\r\n            <h3 class=\"partner-name\">{{ partner.name }}</h3>\r\n            <div class=\"partner-badges\" [class.rtl-layout]=\"isRTL()\">\r\n              <span class=\"category-badge category-{{ partner.category }}\">\r\n                {{ getCategoryLabel(partner.category) }}\r\n              </span>\r\n              <span class=\"status-badge\" [class]=\"partner.isActive ? 'status-active' : 'status-inactive'\">\r\n                {{ partner.isActive ? translate('partners.active') : translate('partners.inactive') }}\r\n              </span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"info-grid\">\r\n          <div class=\"info-item\">\r\n            <label>{{ translate('partners.sector') }}:</label>\r\n            <span>{{ partner.sector }}</span>\r\n          </div>\r\n          <div class=\"info-item\">\r\n            <label>{{ translate('partners.country') }}:</label>\r\n            <span>{{ partner.country }}</span>\r\n          </div>\r\n          <div class=\"info-item\">\r\n            <label>{{ translate('partners.city') }}:</label>\r\n            <span>{{ partner.city }}</span>\r\n          </div>\r\n          <div class=\"info-item\">\r\n            <label>{{ translate('partners.address') }}:</label>\r\n            <span>{{ partner.address }}</span>\r\n          </div>\r\n          <div class=\"info-item\">\r\n            <label>{{ translate('partners.website') }}:</label>\r\n            <span class=\"website-link\">\r\n              <a [href]=\"partner.website\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n                {{ partner.website }}\r\n              </a>\r\n            </span>\r\n          </div>\r\n          <div class=\"info-item\">\r\n            <label>{{ translate('partners.contract_start_date') }}:</label>\r\n            <span>{{ partner.contractStartDate | date:'dd/MM/yyyy' }}</span>\r\n          </div>\r\n          <div class=\"info-item\" *ngIf=\"partner.note\">\r\n            <label>{{ translate('partners.note') }}:</label>\r\n            <span class=\"note-text\">{{ partner.note }}</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- Contacts Section -->\r\n      <div class=\"contacts-section\">\r\n        <div class=\"contacts-header\">\r\n          <h3>{{ translate('partners.contacts') }} ({{ partner.contacts.length || 0 }})</h3>\r\n          <button class=\"btn btn-primary btn-sm\" (click)=\"showAddContactForm.set(true)\" [disabled]=\"loading()\">\r\n            <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\">\r\n              <line x1=\"12\" y1=\"5\" x2=\"12\" y2=\"19\"></line>\r\n              <line x1=\"5\" y1=\"12\" x2=\"19\" y2=\"12\"></line>\r\n            </svg>\r\n            {{ translate('partners.add_contact') }}\r\n          </button>\r\n        </div>\r\n\r\n        <!-- Add Contact Form -->\r\n        <div class=\"add-contact-form\" *ngIf=\"showAddContactForm()\">\r\n          <h4>{{ translate('partners.add_new_contact') }}</h4>\r\n          <div class=\"form-row\">\r\n            <div class=\"form-group\">\r\n              <label>{{ translate('partners.email') }} *</label>\r\n              <input \r\n                type=\"email\" \r\n                class=\"form-control\" \r\n                [(ngModel)]=\"newContact().email\"\r\n                (ngModelChange)=\"onContactFieldChange()\"\r\n                placeholder=\"{{ translate('partners.enter_email') }}\"\r\n              >\r\n            </div>\r\n            <div class=\"form-group\">\r\n              <label>{{ translate('partners.phone') }}</label>\r\n              <input \r\n                type=\"tel\" \r\n                class=\"form-control\" \r\n                [(ngModel)]=\"newContact().phone\"\r\n                (ngModelChange)=\"onContactFieldChange()\"\r\n                placeholder=\"{{ translate('partners.enter_phone') }}\"\r\n              >\r\n            </div>\r\n            <div class=\"form-group\">\r\n              <label>{{ translate('partners.mobile') }}</label>\r\n              <input \r\n                type=\"tel\" \r\n                class=\"form-control\" \r\n                [(ngModel)]=\"newContact().mobile\"\r\n                (ngModelChange)=\"onContactFieldChange()\"\r\n                placeholder=\"{{ translate('partners.enter_mobile') }}\"\r\n              >\r\n            </div>\r\n          </div>\r\n          <div class=\"form-actions\">\r\n            <button class=\"btn btn-primary\" (click)=\"addContact()\" [disabled]=\"!contactFormValid() || loading()\">\r\n              {{ translate('common.add') }}\r\n            </button>\r\n            <button class=\"btn btn-secondary\" (click)=\"cancelEdit()\">\r\n              {{ translate('common.cancel') }}\r\n            </button>\r\n          </div>\r\n        </div>\r\n\r\n        <!-- Contacts List -->\r\n        <div class=\"contacts-list\" *ngIf=\"partner.contacts && partner.contacts.length > 0; else noContacts\">\r\n          <div class=\"contact-item\" *ngFor=\"let contact of partner.contacts; let i = index\">\r\n            \r\n            <!-- Display Mode -->\r\n            <div class=\"contact-display\" *ngIf=\"!editingContact() || editingContact()?.id !== contact.id\">\r\n              <div class=\"contact-info\">\r\n                <div class=\"contact-field\" *ngIf=\"contact.email\">\r\n                  <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\">\r\n                    <path d=\"M4 4h16c1.1 0 2 .9 2 2v12c0 1.1-.9 2-2 2H4c-1.1 0-2-.9-2-2V6c0-1.1.9-2 2-2z\"></path>\r\n                    <polyline points=\"22,6 12,13 2,6\"></polyline>\r\n                  </svg>\r\n                  <span>{{ contact.email }}</span>\r\n                </div>\r\n                <div class=\"contact-field\" *ngIf=\"contact.phone\">\r\n                  <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\">\r\n                    <path d=\"M22 16.92v3a2 2 0 0 1-2.18 2 19.79 19.79 0 0 1-8.63-3.07 19.5 19.5 0 0 1-6-6 19.79 19.79 0 0 1-3.07-8.67A2 2 0 0 1 4.11 2h3a2 2 0 0 1 2 1.72 12.84 12.84 0 0 0 .7 2.81 2 2 0 0 1-.45 2.11L8.09 9.91a16 16 0 0 0 6 6l1.27-1.27a2 2 0 0 1 2.11-.45 12.84 12.84 0 0 0 2.81.7A2 2 0 0 1 22 16.92z\"></path>\r\n                  </svg>\r\n                  <span>{{ contact.phone }}</span>\r\n                </div>\r\n                <div class=\"contact-field\" *ngIf=\"contact.mobile\">\r\n                  <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\">\r\n                    <rect x=\"5\" y=\"2\" width=\"14\" height=\"20\" rx=\"2\" ry=\"2\"></rect>\r\n                    <line x1=\"12\" y1=\"18\" x2=\"12.01\" y2=\"18\"></line>\r\n                  </svg>\r\n                  <span>{{ contact.mobile }}</span>\r\n                </div>\r\n              </div>\r\n              <div class=\"contact-actions\">\r\n                <button class=\"btn btn-sm btn-outline-primary\" (click)=\"editContact(contact)\" [disabled]=\"loading()\">\r\n                  <svg width=\"14\" height=\"14\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\">\r\n                    <path d=\"M11 4H4a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h14a2 2 0 0 0 2-2v-7\"></path>\r\n                    <path d=\"M18.5 2.5a2.121 2.121 0 0 1 3 3L12 15l-4 1 1-4 9.5-9.5z\"></path>\r\n                  </svg>\r\n                  {{ translate('common.edit') }}\r\n                </button>\r\n                <button class=\"btn btn-sm btn-outline-danger\" (click)=\"deleteContact(contact)\" [disabled]=\"loading()\">\r\n                  <svg width=\"14\" height=\"14\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\">\r\n                    <polyline points=\"3,6 5,6 21,6\"></polyline>\r\n                    <path d=\"M19,6v14a2,2,0,0,1-2,2H7a2,2,0,0,1-2-2V6m3,0V4a2,2,0,0,1,2-2h4a2,2,0,0,1,2,2v2\"></path>\r\n                  </svg>\r\n                  {{ translate('common.delete') }}\r\n                </button>\r\n              </div>\r\n            </div>\r\n\r\n            <!-- Edit Mode -->\r\n            <div class=\"contact-edit\" *ngIf=\"editingContact() && editingContact()?.id === contact.id\">\r\n              <h5>{{ translate('partners.edit_contact') }}</h5>\r\n              <div class=\"form-row\">\r\n                <div class=\"form-group\">\r\n                  <label>{{ translate('partners.email') }} *</label>\r\n                  <input \r\n                    type=\"email\" \r\n                    class=\"form-control\" \r\n                    [ngModel]=\"editingContact()?.email\"\r\n                    (ngModelChange)=\"onEditingContactFieldChange('email', $event)\"\r\n                  >\r\n                </div>\r\n                <div class=\"form-group\">\r\n                  <label>{{ translate('partners.phone') }}</label>\r\n                  <input \r\n                    type=\"tel\" \r\n                    class=\"form-control\" \r\n                    [ngModel]=\"editingContact()?.phone\"\r\n                    (ngModelChange)=\"onEditingContactFieldChange('phone', $event)\"\r\n                  >\r\n                </div>\r\n                <div class=\"form-group\">\r\n                  <label>{{ translate('partners.mobile') }}</label>\r\n                  <input \r\n                    type=\"tel\" \r\n                    class=\"form-control\" \r\n                    [ngModel]=\"editingContact()?.mobile\"\r\n                    (ngModelChange)=\"onEditingContactFieldChange('mobile', $event)\"\r\n                  >\r\n                </div>\r\n              </div>\r\n              <div class=\"form-actions\">\r\n                <button class=\"btn btn-primary\" (click)=\"updateContact()\" [disabled]=\"!contactFormValid() || loading()\">\r\n                  {{ translate('common.save') }}\r\n                </button>\r\n                <button class=\"btn btn-secondary\" (click)=\"cancelEdit()\">\r\n                  {{ translate('common.cancel') }}\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <!-- No Contacts Template -->\r\n        <ng-template #noContacts>\r\n          <div class=\"no-contacts\">\r\n            <svg width=\"48\" height=\"48\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"1\">\r\n              <path d=\"M17 21v-2a4 4 0 0 0-4-4H5a4 4 0 0 0-4 4v2\"></path>\r\n              <circle cx=\"9\" cy=\"7\" r=\"4\"></circle>\r\n              <path d=\"M23 21v-2a4 4 0 0 0-3-3.87\"></path>\r\n              <path d=\"M16 3.13a4 4 0 0 1 0 7.75\"></path>\r\n            </svg>\r\n            <p>{{ translate('partners.no_contacts') }}</p>\r\n            <button class=\"btn btn-primary\" (click)=\"showAddContactForm.set(true)\">\r\n              {{ translate('partners.add_first_contact') }}\r\n            </button>\r\n          </div>\r\n        </ng-template>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Loading State -->\r\n    <div class=\"loading-overlay\" *ngIf=\"loading()\">\r\n      <div class=\"spinner\"></div>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<!-- Confirmation Modal -->\r\n<app-confirmation-modal \r\n  #confirmationModal\r\n  [isRTL]=\"isRTL()\"\r\n  (confirm)=\"onConfirmDelete()\"\r\n  (cancel)=\"onCancelDelete()\">\r\n</app-confirmation-modal>\r\n", "import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { PartnersService, PartnerSearchParams } from '../../../services/partners.service';\r\nimport { Contact, Item, PartnerModel } from '../../../models/partner.model';\r\nimport { TranslationService } from '../../../services/translation.service';\r\nimport { PartnersConfirmationModalComponent } from '../partners-confirmation-modal/partners-confirmation-modal.component';\r\nimport { EditContactsModalComponent } from '../edit-contacts-modal/edit-contacts-modal.component';\r\nimport { AddPartner } from '../add-partner/add-partner';\r\nimport { EditPartner } from '../edit-partner/edit-partner';\r\nimport { ViewPartnerModal } from '../view-partner-modal/view-partner-modal.component';\r\n\r\n@Component({\r\n  selector: 'app-partners-list',\r\n  standalone: false,\r\n  templateUrl: './partners-list.html',\r\n  styleUrl: './partners-list.css'\r\n})\r\nexport class PartnersList implements OnInit {\r\n  @ViewChild('addPartnerModal') addPartnerModal!: AddPartner;\r\n  @ViewChild('editPartnerModal') editPartnerModal!: EditPartner;\r\n  @ViewChild('editContactsModal') editContactsModal!: EditContactsModalComponent;\r\n  @ViewChild('confirmationModal') confirmationModal!: PartnersConfirmationModalComponent;\r\n  @ViewChild('viewPartnerModal') viewPartnerModal!: ViewPartnerModal;\r\n  allPartners: Item[] = [];\r\n  filteredPartners: Item[] = [];\r\n  searchTerm: string = '';\r\n  isLoading: boolean = false;\r\n  expandedContacts: { [key: number]: boolean } = {};\r\n  \r\n  // Pagination\r\n  currentPage = 1;\r\n  pageSize = 6;\r\n  totalCount = 0;\r\n  selectedCategory: number | null = null;\r\n  \r\n  constructor(\r\n    private partnersService: PartnersService,\r\n    private translationService: TranslationService\r\n  ) {}\r\n\r\n  get categories(): Record<number, string> {\r\n    return {\r\n      0: this.translate('partners.categories.0'),\r\n      1: this.translate('partners.categories.1'),\r\n      2: this.translate('partners.categories.2'),\r\n      3: this.translate('partners.categories.3'),\r\n      4: this.translate('partners.categories.4'),\r\n      5: this.translate('partners.categories.5')\r\n    };\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.loadPartners();\r\n  }\r\n\r\n  loadPartners() {\r\n    this.isLoading = true;\r\n    \r\n    const params: PartnerSearchParams = {\r\n      Search: this.searchTerm || undefined,\r\n      PageSize: this.pageSize,\r\n      PageNumber: this.currentPage,\r\n      Category: this.selectedCategory || undefined\r\n    };\r\n    \r\n    this.partnersService.getAllPartners(params).subscribe({\r\n      next: (res) => {\r\n        this.allPartners = res.data.items;\r\n        this.totalCount = res.data.totalCount;\r\n        this.currentPage = res.data.page;\r\n        this.pageSize = res.data.pageSize;\r\n        \r\n        // Initialize contacts from partner data if available\r\n        this.allPartners.forEach(partner => {\r\n          if (!partner.contacts) {\r\n            partner.contacts = [];\r\n          }\r\n        });\r\n        \r\n        // Load contacts for each partner and wait for all to complete\r\n        const contactPromises = this.allPartners.map((partner) => {\r\n          return new Promise<void>((resolve) => {\r\n            // Skip if partner already has contacts from the API response\r\n            if (partner.contacts && partner.contacts.length > 0) {\r\n              resolve();\r\n              return;\r\n            }\r\n            \r\n            this.partnersService.getContacts(partner.id).subscribe({\r\n              next: (contacts) => {\r\n                partner.contacts = contacts || [];\r\n                resolve();\r\n              },\r\n              error: (error) => {\r\n                // Keep existing contacts if any, otherwise set empty array\r\n                if (!partner.contacts) {\r\n                  partner.contacts = [];\r\n                }\r\n                resolve();\r\n              }\r\n            });\r\n          });\r\n        });\r\n        \r\n        // Wait for all contacts to load before updating the UI\r\n        Promise.all(contactPromises).then(() => {\r\n          this.filteredPartners = [...this.allPartners];\r\n          this.isLoading = false;\r\n        });\r\n      },\r\n      error: (error) => {\r\n        this.isLoading = false;\r\n      }\r\n    });\r\n  }\r\n\r\n  onSearchChange() {\r\n    this.currentPage = 1;\r\n    this.loadPartners();\r\n  }\r\n\r\n  onSearchClick() {\r\n    this.currentPage = 1;\r\n    this.loadPartners();\r\n  }\r\n\r\n  onCategoryChange(category: number | null) {\r\n    this.selectedCategory = category;\r\n    this.currentPage = 1;\r\n    this.loadPartners();\r\n  }\r\n\r\n  onPageChange(page: number) {\r\n    this.currentPage = page;\r\n    this.loadPartners();\r\n  }\r\n\r\n  onPageSizeChange() {\r\n    this.currentPage = 1;\r\n    this.loadPartners();\r\n  }\r\n\r\n  clearFilters() {\r\n    this.searchTerm = '';\r\n    this.selectedCategory = null;\r\n    this.currentPage = 1;\r\n    this.loadPartners();\r\n  }\r\n\r\n  getCategoryLabel(category: number): string {\r\n    return this.categories[category] || 'Unknown';\r\n  }\r\n\r\n  getCategoryLabelAr(category: number): string {\r\n    const arCategories: Record<number, string> = {\r\n      0: \"حكومي\",\r\n      1: \"أكاديمي\",\r\n      2: \"خاص\",\r\n      3: \"منظمة غير حكومية\",\r\n      4: \"دولي\",\r\n      5: \"أخرى\"\r\n    };\r\n    return arCategories[category] || 'غير معروف';\r\n  }\r\n\r\n  getContactsDisplay(contacts: Contact[]): string {\r\n    if (!contacts || contacts.length === 0) {\r\n      return '';\r\n    }\r\n    \r\n    const displayContacts = contacts.slice(0, 2);\r\n    const contactStrings = displayContacts.map(contact => \r\n      `${contact.email} - ${contact.phone} - ${contact.mobile}`\r\n    );\r\n    \r\n    if (contacts.length > 2) {\r\n      return contactStrings.join(' | ') + ` +${contacts.length - 2} more`;\r\n    }\r\n    \r\n    return contactStrings.join(' | ');\r\n  }\r\n\r\n  openAddModal() {\r\n    this.addPartnerModal.open();\r\n  }\r\n\r\n  deletePartner(id: number, name: string) {\r\n    const confirmData = {\r\n      title: this.translationService.translate('partners.delete_partner'),\r\n      message: this.translationService.translate('partners.confirm_delete_message').replace('%name%', name),\r\n      confirmText: this.translationService.translate('common.delete'),\r\n      cancelText: this.translationService.translate('common.cancel'),\r\n      type: 'delete' as const\r\n    };\r\n\r\n    this.confirmationModal.show(confirmData);\r\n    this.confirmationModal.confirm.subscribe(() => {\r\n      // User confirmed deletion\r\n      this.partnersService.deletePartner(id).subscribe({\r\n        next: (res) => {\r\n          this.allPartners = this.allPartners.filter(p => p.id !== id);\r\n          this.onSearchChange(); // Refresh filtered list\r\n          this.showSuccessMessage(this.translationService.translate('partners.deleted_success'));\r\n        },\r\n        error: (error) => {\r\n          const errorMessage = error.error?.message || error.message || 'Unknown error occurred';\r\n          this.showErrorMessage(this.translationService.translate('common.error') + ': ' + errorMessage);\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  showSuccessMessage(message: string) {\r\n    const successData = {\r\n      title: this.translationService.translate('common.success'),\r\n      message: message,\r\n      confirmText: this.translationService.translate('common.ok'),\r\n      cancelText: '',\r\n      type: 'info' as const\r\n    };\r\n    this.confirmationModal.show(successData);\r\n  }\r\n\r\n  showErrorMessage(message: string) {\r\n    const errorData = {\r\n      title: this.translationService.translate('common.error'),\r\n      message: message,\r\n      confirmText: this.translationService.translate('common.ok'),\r\n      cancelText: '',\r\n      type: 'warning' as const\r\n    };\r\n    this.confirmationModal.show(errorData);\r\n  }\r\n\r\n  toggleContacts(partnerId: number) {\r\n    this.expandedContacts[partnerId] = !this.expandedContacts[partnerId];\r\n  }\r\n\r\n  editPartnerContacts(partner: Item, event?: Event) {\r\n    // Prevent event bubbling to avoid toggling contacts when clicking edit button\r\n    if (event) {\r\n      event.stopPropagation();\r\n    }\r\n    // Open contacts editing modal\r\n    this.editContactsModal.show(partner);\r\n  }\r\n\r\n  refreshPartnerContacts(partnerId: number) {\r\n    // Refresh contacts for a specific partner\r\n    const partner = this.allPartners.find(p => p.id === partnerId);\r\n    if (partner) {\r\n      this.partnersService.getContacts(partnerId).subscribe({\r\n        next: (contacts) => {\r\n          partner.contacts = contacts || [];\r\n          // Update filtered partners if needed\r\n          const filteredIndex = this.filteredPartners.findIndex(p => p.id === partnerId);\r\n          if (filteredIndex !== -1) {\r\n            this.filteredPartners[filteredIndex].contacts = contacts || [];\r\n          }\r\n          // Force change detection\r\n          this.filteredPartners = [...this.filteredPartners];\r\n        },\r\n        error: (error) => {\r\n          // Handle error silently\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  debugContacts() {\r\n    // Debug method removed\r\n  }\r\n\r\n  editPartner(partner: Item) {\r\n    // Open edit modal with partner data\r\n    this.editPartnerModal.open(partner);\r\n  }\r\n\r\n  viewPartner(id: number) {\r\n    this.partnersService.getPartnerById(id).subscribe((response) => {\r\n      if (response.success && response.data) {\r\n        this.viewPartnerModal.open(response.data);\r\n      } else {\r\n        console.error('Failed to load partner:', response.message);\r\n        this.showErrorMessage(this.translate('common.error') + ': ' + response.message);\r\n      }\r\n    }, (error) => {\r\n      console.error('Error loading partner:', error);\r\n      this.showErrorMessage(this.translate('common.error') + ': ' + (error.error?.message || error.message || 'Unknown error'));\r\n    });\r\n  }\r\n\r\n  translate(key: string): string {\r\n    return this.translationService.translate(key);\r\n  }\r\n\r\n  isRTL(): boolean {\r\n    return this.translationService.isRTL();\r\n  }\r\n\r\n  get totalPages(): number {\r\n    return Math.ceil(this.totalCount / this.pageSize);\r\n  }\r\n\r\n  get pages(): number[] {\r\n    const pages: number[] = [];\r\n    const maxVisiblePages = 5;\r\n    \r\n    if (this.totalPages === 0) {\r\n      pages.push(1);\r\n      return pages;\r\n    }\r\n    \r\n    let startPage = Math.max(1, this.currentPage - Math.floor(maxVisiblePages / 2));\r\n    let endPage = Math.min(this.totalPages, startPage + maxVisiblePages - 1);\r\n    \r\n    if (endPage - startPage + 1 < maxVisiblePages) {\r\n      startPage = Math.max(1, endPage - maxVisiblePages + 1);\r\n    }\r\n    \r\n    for (let i = startPage; i <= endPage; i++) {\r\n      pages.push(i);\r\n    }\r\n    \r\n    return pages;\r\n  }\r\n\r\n  get Math() {\r\n    return Math;\r\n  }\r\n}\r\n", "<div class=\"partners-container rounded-5 custom-scrollbar\" [dir]=\"isRTL() ? 'rtl' : 'ltr'\">\r\n    <!-- Header Section -->\r\n  <div class=\"partners-header mb-4\">\r\n    <div class=\"d-flex justify-content-between align-items-center\">\r\n      <h1 class=\"partners-title\">{{ translate('partners.title') }}</h1>\r\n      <div class=\"d-flex gap-2\">\r\n        <button class=\"btn btn-primary\" (click)=\"openAddModal()\">\r\n          <i class=\"bi bi-plus-circle me-2\"></i>\r\n          {{ translate('partners.add_partner') }}\r\n        </button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <!-- Search and Filters -->\r\n  <div class=\"search-section mb-4\">\r\n    <div class=\"row\">\r\n      <div class=\"col-md-5\">\r\n        <div class=\"search-input-wrapper\">\r\n          <i class=\"bi bi-search search-icon\"></i>\r\n          <input\r\n            type=\"text\"\r\n            class=\"form-control search-input\"\r\n            [placeholder]=\"translate('partners.search_partners')\"\r\n            [(ngModel)]=\"searchTerm\"\r\n            (keyup.enter)=\"onSearchClick()\"\r\n          >\r\n        </div>\r\n      </div>\r\n      <div class=\"col-md-2\">\r\n        <button class=\"btn btn-primary w-100\" (click)=\"onSearchClick()\">\r\n          <i class=\"bi bi-search me-2\"></i>\r\n          {{ translate('common.search') }}\r\n        </button>\r\n      </div>\r\n      <div class=\"col-md-3\">\r\n        <select\r\n          class=\"form-control\"\r\n          [(ngModel)]=\"selectedCategory\"\r\n          (change)=\"onCategoryChange(selectedCategory)\"\r\n        >\r\n          <option [value]=\"null\">{{ translate('partners.all_categories') }}</option>\r\n          <option *ngFor=\"let category of categories | keyvalue\" [value]=\"category.key\">\r\n            {{ category.value }}\r\n          </option>\r\n        </select>\r\n      </div>\r\n      <div class=\"col-md-2\">\r\n        <button class=\"btn btn-outline-secondary w-100\" (click)=\"clearFilters()\">\r\n          <i class=\"bi bi-x-circle me-2\"></i>\r\n          {{ translate('common.clear') }}\r\n        </button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <!-- Loading State -->\r\n  <div *ngIf=\"isLoading\" class=\"text-center py-5\">\r\n    <div class=\"spinner-border text-primary\" role=\"status\">\r\n      <span class=\"visually-hidden\">{{ translate('common.loading') }}</span>\r\n    </div>\r\n  </div>\r\n\r\n  <!-- Partners Grid -->\r\n  <div *ngIf=\"!isLoading && filteredPartners.length > 0\" class=\"partners-grid\">\r\n    <div class=\"row g-4\">\r\n      <div *ngFor=\"let partner of filteredPartners\" class=\"col-lg-4 col-md-6 col-12\">\r\n        <div class=\"partner-card\">\r\n          <!-- Card Header -->\r\n          <div class=\"card-header-section\">\r\n            <div class=\"partner-info\">\r\n              <h3 class=\"partner-name\">{{ partner.name }}</h3>\r\n              <div class=\"partner-subtitle\">\r\n                <span class=\"category-badge category-{{ partner.category }}\">{{ getCategoryLabel(partner.category) }}</span>\r\n                <span class=\"sector-text\">{{ partner.sector }}</span>\r\n              </div>\r\n            </div>\r\n            <div class=\"status-badge\" [class]=\"partner.isActive ? 'status-active' : 'status-inactive'\">\r\n              {{ partner.isActive ? translate('partners.active') : translate('partners.inactive') }}\r\n            </div>\r\n          </div>\r\n\r\n           <!-- Card Body -->\r\n           <div class=\"card-body-section\">\r\n             <div class=\"info-row\">\r\n               <div class=\"info-label\">{{ translate('partners.country') }}:</div>\r\n               <div class=\"info-value\">{{ partner.country }}</div>\r\n             </div>\r\n             <div class=\"info-row\">\r\n               <div class=\"info-label\">{{ translate('partners.city') }}:</div>\r\n               <div class=\"info-value\">{{ partner.city }}</div>\r\n             </div>\r\n             <div class=\"info-row\">\r\n               <div class=\"info-label\">{{ translate('partners.website') }}:</div>\r\n               <div class=\"info-value website-link\">\r\n                 <a [href]=\"partner.website\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n                   {{ partner.website }}\r\n                 </a>\r\n               </div>\r\n             </div>\r\n             <div class=\"info-row\" *ngIf=\"partner.note\">\r\n               <div class=\"info-label\">{{ translate('partners.note') }}:</div>\r\n               <div class=\"info-value note-text\">{{ partner.note }}</div>\r\n             </div>\r\n           </div>\r\n\r\n          <!-- Contacts Section -->\r\n          <!-- <div class=\"contacts-section\">\r\n            <div class=\"contacts-header\" (click)=\"toggleContacts(partner.id)\" style=\"cursor: pointer;\">\r\n              <div class=\"d-flex justify-content-between align-items-center\">\r\n                <div class=\"d-flex align-items-center\">\r\n                  <i class=\"bi bi-people-fill me-2\"></i>\r\n                  <span>{{ translate('partners.contacts') }}</span>\r\n                  <span class=\"contacts-count ms-2\">{{ partner.contacts.length || 0 }}</span>\r\n                </div>\r\n                <div class=\"d-flex align-items-center gap-2\">\r\n                  <i class=\"bi\" [class]=\"expandedContacts[partner.id] ? 'bi-chevron-up' : 'bi-chevron-down'\"></i>\r\n                  <button type=\"button\" class=\"btn btn-outline-primary btn-sm px-2 py-1\" (click)=\"editPartnerContacts(partner, $event)\">\r\n                    <i class=\"bi bi-pencil-square me-1\"></i>\r\n                    {{ translate('partners.edit_contacts') }}\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <div class=\"contacts-content\" *ngIf=\"expandedContacts[partner.id] && partner.contacts && partner.contacts.length > 0; else noContacts\">\r\n              <div class=\"contact-item\" *ngFor=\"let contact of partner.contacts.slice(0, 2); let i = index\">\r\n                <div class=\"contact-info\">\r\n                  <div class=\"contact-row\" *ngIf=\"contact.email\">\r\n                    <i class=\"bi bi-envelope me-1\"></i>\r\n                    <span>{{ contact.email }}</span>\r\n                  </div>\r\n                  <div class=\"contact-row\" *ngIf=\"contact.phone\">\r\n                    <i class=\"bi bi-telephone me-1\"></i>\r\n                    <span>{{ contact.phone }}</span>\r\n                  </div>\r\n                  <div class=\"contact-row\" *ngIf=\"contact.mobile\">\r\n                    <i class=\"bi bi-phone me-1\"></i>\r\n                    <span>{{ contact.mobile }}</span>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <div class=\"more-contacts\" *ngIf=\"partner.contacts.length > 2\">\r\n                <span class=\"text-muted\">+{{ partner.contacts.length - 2 }} {{ translate('partners.more_contacts') }}</span>\r\n              </div>\r\n            </div>\r\n\r\n            <ng-template #noContacts>\r\n              <div class=\"no-contacts\" *ngIf=\"expandedContacts[partner.id]\">\r\n                <span class=\"text-muted\">{{ translate('partners.no_contacts') }}</span>\r\n              </div>\r\n            </ng-template>\r\n          </div> -->\r\n\r\n          <!-- Card Actions -->\r\n          <div class=\"card-actions\">\r\n            <button class=\"btn btn-primary me-lg-2\" (click)=\"viewPartner(partner.id)\">\r\n              <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"lucide lucide-eye-icon lucide-eye\"><path d=\"M2.062 12.348a1 1 0 0 1 0-.696 10.75 10.75 0 0 1 19.876 0 1 1 0 0 1 0 .696 10.75 10.75 0 0 1-19.876 0\"/><circle cx=\"12\" cy=\"12\" r=\"3\"/></svg>\r\n              <span class=\"ms-2 me-2\">{{ translate('common.details') }}</span>\r\n            </button>\r\n            <button class=\"btn btn-edit\" (click)=\"editPartner(partner)\">\r\n              <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"lucide lucide-square-pen-icon lucide-square-pen\"><path d=\"M12 3H5a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h14a2 2 0 0 0 2-2v-7\"/><path d=\"M18.375 2.625a1 1 0 0 1 3 3l-9.013 9.014a2 2 0 0 1-.853.505l-2.873.84a.5.5 0 0 1-.62-.62l.84-2.873a2 2 0 0 1 .506-.852z\"/></svg>\r\n              <span class=\"ms-2 me-2\">{{ translate('common.edit') }}</span>\r\n            </button>\r\n            <button class=\"btn btn-danger me-lg-2\" (click)=\"deletePartner(partner.id, partner.name)\">\r\n              <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"lucide lucide-trash-icon lucide-trash\"><path d=\"M19 6v14a2 2 0 0 1-2 2H7a2 2 0 0 1-2-2V6\"/><path d=\"M3 6h18\"/><path d=\"M8 6V4a2 2 0 0 1 2-2h4a2 2 0 0 1 2 2v2\"/></svg>\r\n              <span class=\"ms-2 me-2\">{{ translate('common.delete') }}</span>\r\n            </button>\r\n            \r\n\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <!-- Empty State -->\r\n  <div *ngIf=\"!isLoading && filteredPartners.length === 0\" class=\"empty-state text-center py-5\">\r\n    <div class=\"empty-state-icon mb-3\">\r\n      <i class=\"bi bi-building display-1 text-muted\"></i>\r\n    </div>\r\n    <h3 class=\"empty-state-title mb-2\">{{ translate('partners.no_partners_found') }}</h3>\r\n    <p class=\"empty-state-message text-muted mb-4\">{{ translate('partners.get_started_message') }}</p>\r\n    <button class=\"btn btn-primary btn-lg\" (click)=\"openAddModal()\">\r\n      <i class=\"bi bi-plus-circle me-2\"></i>\r\n      {{ translate('partners.add_partner') }}\r\n    </button>\r\n  </div>\r\n\r\n  <!-- Pagination Info and Controls -->\r\n  <div class=\"pagination-section\">\r\n\r\n\r\n    <div class=\"pagination-controls ltr\">\r\n      <div class=\"page-size-control\">\r\n        <label for=\"pageSize\">{{ translate('common.page_size') }}:</label>\r\n        <select id=\"pageSize\" [(ngModel)]=\"pageSize\" (change)=\"onPageSizeChange()\">\r\n          <option value=\"6\">6</option>\r\n          <option value=\"12\">12</option>\r\n          <option value=\"24\">24</option>\r\n          <option value=\"48\">48</option>\r\n        </select>\r\n\r\n      </div>\r\n      <div class=\"pagination-info\">\r\n        <span>{{ translate('common.showing') }} {{ (currentPage - 1) * pageSize + 1 }}-{{ Math.min(currentPage * pageSize, totalCount) }} {{ translate('common.of') }} {{ totalCount }} {{ translate('partners.title') }}</span>\r\n      </div>\r\n\r\n      <nav aria-label=\"Partners pagination\">\r\n        <ul class=\"pagination\">\r\n          <li class=\"page-item\" [class.disabled]=\"currentPage === 1\">\r\n            <button class=\"page-link\" (click)=\"onPageChange(currentPage - 1)\" [disabled]=\"currentPage === 1\">\r\n              <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\">\r\n                <polyline points=\"15,18 9,12 15,6\"/>\r\n              </svg>\r\n            </button>\r\n          </li>\r\n\r\n          <li *ngFor=\"let page of pages\" class=\"page-item\" [class.active]=\"page === currentPage\">\r\n            <button class=\"page-link\" (click)=\"onPageChange(page)\">{{ page }}</button>\r\n          </li>\r\n\r\n          <li class=\"page-item\" [class.disabled]=\"currentPage === totalPages\">\r\n            <button class=\"page-link\" (click)=\"onPageChange(currentPage + 1)\" [disabled]=\"currentPage === totalPages\">\r\n              <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\">\r\n                <polyline points=\"9,18 15,12 9,6\"/>\r\n              </svg>\r\n            </button>\r\n          </li>\r\n        </ul>\r\n      </nav>\r\n    </div>\r\n  </div>\r\n\r\n  <!-- Add Partner Modal -->\r\n  <app-add-partner #addPartnerModal></app-add-partner>\r\n\r\n  <!-- Edit Partner Modal -->\r\n  <app-edit-partner #editPartnerModal></app-edit-partner>\r\n\r\n  <!-- Edit Contacts Modal -->\r\n  <app-edit-contacts-modal #editContactsModal (contactsUpdated)=\"refreshPartnerContacts($event)\"></app-edit-contacts-modal>\r\n\r\n  <!-- Confirmation Modal -->\r\n  <app-partners-confirmation-modal #confirmationModal></app-partners-confirmation-modal>\r\n\r\n  <!-- View Partner Modal -->\r\n  <app-view-partner-modal #viewPartnerModal (contactsUpdated)=\"refreshPartnerContacts($event)\"></app-view-partner-modal>\r\n</div>\r\n", "import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { PartnersList } from './partners-list/partners-list';\r\nimport { AddPartner } from './add-partner/add-partner';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component:PartnersList\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class PartnersRoutingModule { }\r\n", "import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { PartnersRoutingModule } from './partners-routing-module';\r\nimport { PartnersList } from './partners-list/partners-list';\r\nimport { AddPartner } from './add-partner/add-partner';\r\nimport { EditPartner } from './edit-partner/edit-partner';\r\nimport { PartnersConfirmationModalComponent } from './partners-confirmation-modal/partners-confirmation-modal.component';\r\nimport { EditContactsModalComponent } from './edit-contacts-modal/edit-contacts-modal.component';\r\nimport { ViewPartnerModal } from './view-partner-modal/view-partner-modal.component';\r\nimport { ConfirmationModalComponent } from '../shared/confirmation-modal/confirmation-modal.component';\r\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    PartnersList,\r\n    AddPartner,\r\n    EditPartner,\r\n    PartnersConfirmationModalComponent,\r\n    EditContactsModalComponent,\r\n    ViewPartnerModal\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    PartnersRoutingModule,\r\n    ReactiveFormsModule,\r\n    FormsModule,\r\n    ConfirmationModalComponent\r\n  ]\r\n})\r\nexport class PartnersModule { }\r\n"],
  "mappings": "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",
  "names": []
}
